{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\BigNova-Projects\\\\Project - 12 - BigNova-Pets Animals-web\\\\ClonedFromGitHub\\\\animals-pets\\\\src\\\\pages\\\\Register\\\\Components\\\\FormRegister.js\",\n    _s = $RefreshSig$();\n\n/*eslint-disable*/\nimport { Paper } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { Form, Formik } from \"formik\";\nimport { UseRegister } from \"../hooks/useForm\";\nimport From1 from \"./Form1/From1\";\nimport From2 from \"./Form2/From2\";\nimport { useStyles } from \"../hooks/Styles\";\nimport Error from \"./Form1/Components/Error\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormRegister(props) {\n  _s();\n\n  const {\n    RegsiterSchema,\n    registerValues,\n    pageId,\n    TypeLenseigne,\n    onReturn,\n    alertMail,\n    onSubmit,\n    AddressesOption,\n    TypeOffre,\n    typeInscrire,\n    ChampVide,\n    ActivateAlert\n  } = UseRegister();\n  const classes = useStyles();\n  const history = useHistory();\n  /**\r\n   * Récupération du contenu de page selon le numéro de page\r\n   * page 0 : nom,prénom... mot de passe\r\n   * page 1 : organisation\r\n   * @returns {*}\r\n   */\n\n  const [adresse, setAdresse] = useState(\"\");\n  const [coordinates, setCoordinates] = useState({\n    lat: null,\n    lng: null\n  });\n\n  const GetFormContent = ({\n    formik,\n    onReturn,\n    alertMail,\n    TypeLenseigne,\n    AddressesOption,\n    typeInscrire,\n    ChampVide,\n    ActivateAlert,\n    ValidateRegister,\n    adresse,\n    setAdresse,\n    coordinates,\n    setCoordinates\n  }) => {\n    switch (pageId) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(From1, {\n          formik: formik,\n          alertMail: alertMail,\n          onSubmit: onSubmit,\n          ChampVide: ChampVide,\n          ActivateAlert: ActivateAlert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(From2, {\n          formik: formik,\n          AddressesOption: AddressesOption,\n          onReturn: onReturn,\n          TypeLenseigne: TypeLenseigne,\n          TypeOffre: TypeOffre,\n          typeInscrire: typeInscrire,\n          adresse: adresse,\n          setAdresse: setAdresse,\n          coordinates: coordinates,\n          setCoordinates: setCoordinates\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this);\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 0,\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      className: classes.Form,\n      initialValues: registerValues,\n      validationSchema: RegsiterSchema,\n      onSubmit: (value, formikAction) => {\n        setTimeout(() => {\n          console.log(value, lat, adress); // ValidateRegister(value)\n\n          history.push(\"signIn\");\n          formikAction.setSubmitting(false);\n          formikAction.resetForm();\n        }, 3000);\n      },\n      children: formik => {\n        return [/*#__PURE__*/_jsxDEV(Form, {\n          autoComplete: \"on\",\n          name: \"hotel\",\n          children: [formik.errors.password && formik.touched.password && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 69\n          }, this), formik.errors.cfpassword && formik.touched.cfpassword && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(GetFormContent, {\n            formik: formik,\n            AddressesOption: AddressesOption,\n            onReturn: onReturn,\n            alertMail: alertMail,\n            TypeLenseigne: TypeLenseigne,\n            typeInscrire: typeInscrire,\n            onSubmit: onSubmit,\n            ChampVide: ChampVide,\n            ActivateAlert: ActivateAlert,\n            adresse: adresse,\n            coordinates: coordinates,\n            setAdresse: setAdresse,\n            setCoordinates: setCoordinates\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)];\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormRegister, \"0v1KFbtcyoEsoCHGPRJlA5afZDc=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = FormRegister;\nexport default FormRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormRegister\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/BigNova-Projects/Project - 12 - BigNova-Pets Animals-web/ClonedFromGitHub/animals-pets/src/pages/Register/Components/FormRegister.js"],"names":["Paper","React","useState","Form","Formik","UseRegister","From1","From2","useStyles","Error","useHistory","FormRegister","props","RegsiterSchema","registerValues","pageId","TypeLenseigne","onReturn","alertMail","onSubmit","AddressesOption","TypeOffre","typeInscrire","ChampVide","ActivateAlert","classes","history","adresse","setAdresse","coordinates","setCoordinates","lat","lng","GetFormContent","formik","ValidateRegister","value","formikAction","setTimeout","console","log","adress","push","setSubmitting","resetForm","errors","password","touched","cfpassword"],"mappings":"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","sourcesContent":["/*eslint-disable*/\r\nimport { Paper } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { UseRegister } from \"../hooks/useForm\";\r\nimport From1 from \"./Form1/From1\";\r\nimport From2 from \"./Form2/From2\";\r\nimport { useStyles } from \"../hooks/Styles\";\r\nimport Error from \"./Form1/Components/Error\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction FormRegister(props) {\r\n  const {\r\n    RegsiterSchema,\r\n    registerValues,\r\n    pageId,\r\n    TypeLenseigne,\r\n    onReturn,\r\n    alertMail,\r\n    onSubmit,\r\n    AddressesOption,\r\n    TypeOffre,\r\n    typeInscrire,\r\n    ChampVide,\r\n    ActivateAlert,\r\n  } = UseRegister();\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  /**\r\n   * Récupération du contenu de page selon le numéro de page\r\n   * page 0 : nom,prénom... mot de passe\r\n   * page 1 : organisation\r\n   * @returns {*}\r\n   */\r\n\r\n  \r\n  const [adresse, setAdresse] = useState(\"\");\r\n  const [coordinates, setCoordinates] = useState({\r\n    lat: null,\r\n    lng: null,\r\n  });\r\n  const GetFormContent = ({\r\n    formik,\r\n    onReturn,\r\n    alertMail,\r\n    TypeLenseigne,\r\n    AddressesOption,\r\n    typeInscrire,\r\n    ChampVide,\r\n    ActivateAlert,\r\n    ValidateRegister,\r\n    adresse,\r\n    setAdresse,\r\n    coordinates,\r\n    setCoordinates\r\n  }) => {\r\n    switch (pageId) {\r\n      case 0:\r\n        return (\r\n          <From1\r\n            formik={formik}\r\n            alertMail={alertMail}\r\n            onSubmit={onSubmit}\r\n            ChampVide={ChampVide}\r\n            ActivateAlert={ActivateAlert}\r\n          />\r\n        );\r\n      case 1:\r\n        return (\r\n          <From2\r\n            formik={formik}\r\n            AddressesOption={AddressesOption}\r\n            onReturn={onReturn}\r\n            TypeLenseigne={TypeLenseigne}\r\n            TypeOffre={TypeOffre}\r\n            typeInscrire={typeInscrire}\r\n            adresse={adresse}\r\n            setAdresse={setAdresse}\r\n            coordinates={coordinates}\r\n            setCoordinates={setCoordinates}\r\n          />\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  return (\r\n    <Paper elevation={0}>\r\n      <Formik\r\n        className={classes.Form}\r\n        initialValues={registerValues}\r\n        validationSchema={RegsiterSchema}\r\n        onSubmit={(value, formikAction) => {\r\n          setTimeout(() => {\r\n            console.log(value,lat,adress);\r\n            // ValidateRegister(value)\r\n            history.push(\"signIn\");\r\n            formikAction.setSubmitting(false);\r\n            formikAction.resetForm();\r\n          }, 3000);\r\n        }}\r\n      >\r\n        {(formik) => {\r\n          return [\r\n            <Form autoComplete=\"on\" name=\"hotel\">\r\n              {formik.errors.password && formik.touched.password && <Error />}\r\n              {formik.errors.cfpassword && formik.touched.cfpassword && (\r\n                <Error />\r\n              )}\r\n              <GetFormContent\r\n                formik={formik}\r\n                AddressesOption={AddressesOption}\r\n                onReturn={onReturn}\r\n                alertMail={alertMail}\r\n                TypeLenseigne={TypeLenseigne}\r\n                typeInscrire={typeInscrire}\r\n                onSubmit={onSubmit}\r\n                ChampVide={ChampVide}\r\n                ActivateAlert={ActivateAlert}\r\n                adresse={adresse}\r\n                coordinates={coordinates}\r\n                setAdresse={setAdresse}\r\n                setCoordinates={setCoordinates}\r\n\r\n              />\r\n            </Form>,\r\n          ];\r\n        }}\r\n      </Formik>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default FormRegister;\r\n"]},"metadata":{},"sourceType":"module"}