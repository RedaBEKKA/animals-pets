{"ast":null,"code":"var _jsxFileName = \"/media/reda/F4C8104CC810100A/Project/tech-instinct/mister-coocky-web-app-client/src/pages/UserProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from \"@material-ui/core\";\nimport { Header, Title } from \"../components\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport { colors } from \"../themes/colors\";\nimport misterCoockyApi from \"../constante/apiUrl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: 300,\n      maxWidth: 50\n    }\n  },\n  // Show dropdow at bottom of select\n  getContentAnchorEl: null,\n  anchorOrigin: {\n    vertical: \"bottom\",\n    horizontal: \"left\"\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  btn: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    width: '100%',\n    height: '0px'\n  },\n  btnSubmit: {\n    padding: theme.spacing(1),\n    color: \"#000\",\n    width: 140\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n    maxWidth: 300\n  },\n  formControlPass: {\n    width: 300,\n    margin: theme.spacing.unit\n  },\n  grid: {\n    marginTop: '10px'\n  }\n}));\n\nfunction UserProfile() {\n  _s();\n\n  const [pageId, setPageId] = useState(0);\n  const [dataSaved, setDataSaved] = useState(false);\n  const [alert, setAlert] = useState(\"\"); //message d'alerte au niveau du mot de passe\n\n  const [alertMail, setAlertMail] = useState(\"\"); //message d'alerte au niveau de l'adresse mail\n\n  const [alertOrganization, setAlertOrganization] = useState(\"\"); //message d'alerte au niveau de l'organisation\n\n  const [submited, setSubmited] = useState(false);\n  const [userPro, setUserPro] = useState(\"\");\n  const [nomOrga, setNomOrga] = useState(\"\");\n  const [nomFournisseur, setNomFournisseur] = useState(\"\");\n  const [adresse, setAdresse] = useState(\"\");\n  const [coordinates, setCoordinates] = React.useState({\n    lat: null,\n    lng: null\n  });\n  const [validAdresse, setValidAdresse] = useState(true);\n  const [typesOrga, setTypesOrga] = useState();\n  const [typesOffres, setTypesOffres] = useState();\n  const [estArtisan, setEstArtisan] = useState(false);\n  const [estMagasinSpe, setEstMagasinSpe] = useState(false);\n  const [estMagasinGen, setEstMagasinGen] = useState(false);\n  const [estAsso, setEstAsso] = useState(false);\n  const [estMarque, setEstMarque] = useState(false);\n  const [estAlim, setEstAlim] = useState(false);\n  const [estAccess, setEstAccess] = useState(false);\n  const [nomsServicesCHoisis, setNomsServicesCHoisis] = useState([]);\n  const nomsServices = ['Cession d\\'animaux(don, échange, vente)'];\n  const [nomUser, setNomUser] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [password1, setPassword1] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const classes = useStyles();\n\n  function getUserProfileData() {\n    fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: `\n                    query{​​​​​​​\n                        userPro(id:\"${localStorage.getItem('userId')}\"){​​​​​​​\n                            organization{\n                                name\n                                supplier{\n                                    name\n                                }\n                                postalAddress{\n                                    street\n                                    geoLocation{\n                                        latitude\n                                        longitude\n                                    }\n                                }\n                            }\n                            user{\n                                name\n                                email\n                                phoneNumber\n                            }\n                        }​​​​​​​\n                    }`\n      })\n    }).then(res => res.json()).then(function (result) {\n      setUserPro(result.data.userPro);\n      setNomOrga(result.data.userPro.organization.name);\n      setAdresse(result.data.userPro.organization.postalAddress.street);\n      setCoordinates({\n        lat: result.data.userPro.organization.postalAddress.geoLocation.latitude,\n        lng: result.data.userPro.organization.postalAddress.geoLocation.longitude\n      });\n      setNomFournisseur(result.data.userPro.organization.supplier.name);\n      setNomUser(result.data.userPro.user.name);\n      setPhone(result.data.userPro.user.phoneNumber);\n      setEmail(result.data.userPro.user.email);\n      ;\n      fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: `\n                            query{​​​​​​​\n                                getTypesOrganizationByName(name: \"${result.data.userPro.organization.name}\")\n                            }`\n        })\n      }).then(res => res.json()).then(function (result) {\n        result.data.getTypesOrganizationByName.forEach(type => {\n          if (type === \"Artisan\") {\n            setEstArtisan(true);\n          }\n\n          if (type === \"Magasin spécialisé\") {\n            setEstMagasinSpe(true);\n          }\n\n          if (type === \"Magasin généraliste\") {\n            setEstMagasinGen(true);\n          }\n\n          if (type === \"Association\") {\n            setEstAsso(true);\n          }\n\n          if (type === \"Marque\") {\n            setEstMarque(true);\n          }\n        });\n        setTypesOrga(result.data.getTypesOrganizationByName.join(', '));\n      });\n      fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: `\n                                query{​​​​​​​\n                                    getOffersOrganizationByName(name: \"${result.data.userPro.organization.name}\")\n                                }`\n        })\n      }).then(res => res.json()).then(function (result) {\n        result.data.getOffersOrganizationByName.forEach(type => {\n          if (type === \"Alimentation\") {\n            setEstAlim(true);\n          }\n\n          if (type === \"Accessoire\") {\n            setEstAccess(true);\n          }\n        });\n        setTypesOffres(result.data.getOffersOrganizationByName.join(', '));\n      });\n    });\n  }\n\n  useEffect(() => {\n    getUserProfileData();\n  }, []);\n\n  const handleChange = event => {\n    setNomsServicesCHoisis(event.target.value);\n  };\n\n  const handleAddressSelect = async value => {\n    const results = await geocodeByAddress(value);\n    const latLng = await getLatLng(results[0]);\n    setAdresse(value);\n    setCoordinates(latLng);\n    setValidAdresse(true);\n  };\n\n  function checkAvailableOrganization(orga) {\n    fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: `\n                    query{​​​​​​​\n                        existsOrganizationByName(name:\"${orga}\")​​​​​​​\n                    }`\n      })\n    }).then(res => res.json()).then(function (result) {\n      if (result.data.existsOrganizationByName === false) {\n        setAlertOrganization(\"\");\n      } else {\n        setAlertOrganization(\"Nom d'organisation déjà utilisé!\");\n      }\n    });\n  }\n\n  function checkAvailableAdress(mail) {\n    fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: `\n                    query{​​​​​​​\n                        getMail(mail:\"${mail}\"){​​​​​​​\n                            id\n                        }​​​​​​​\n                    }`\n      })\n    }).then(res => res.json()).then(function (result) {\n      if (result.data.getMail !== null) {\n        setAlertMail(\"Email déjà utilisé!\");\n      } else {\n        setAlertMail(\"\");\n      }\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (validAdresse === true && alertOrganization === \"\" && alertMail === \"\") {\n      setSubmited(true);\n      let typesOrga = [];\n\n      if (estArtisan === true) {\n        typesOrga.push(\"Artisan\");\n      }\n\n      if (estMagasinSpe === true) {\n        typesOrga.push(\"Magasin spécialisé\");\n      }\n\n      if (estMagasinGen === true) {\n        typesOrga.push(\"Magasin généraliste\");\n      }\n\n      if (estAsso === true) {\n        typesOrga.push(\"Association\");\n      }\n\n      if (estMarque === true) {\n        typesOrga.push(\"Marque\");\n      }\n\n      let typeOffre = [];\n\n      if (estAlim === true) {\n        typeOffre.push(\"Alimentation\");\n      }\n\n      if (estAccess === true) {\n        typeOffre.push(\"Accessoire\");\n      }\n\n      typeOffre.concat(nomsServicesCHoisis);\n      fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: `\n                        mutation($userProId: String, $organization: OrganizationInput!, $adress:AdressInput!, $user:UserIntput!){\n                            updateUserPro(userProId: $userProId, organization: $organization,  adress:$adress, user:$user)\n                            {​​​​​​\n                                id\n                                organization{\n                                    name\n                                }\n                                user{\n                                    name\n                                }\n                            }​​​​​​​\n                        }`,\n          variables: {\n            \"userProId\": localStorage.getItem(\"userId\"),\n            \"organization\": {\n              \"name\": nomOrga,\n              \"orgas\": typesOrga,\n              \"offers\": typeOffre\n            },\n            \"adress\": {\n              \"street\": adresse,\n              \"geoLocation\": {\n                \"latitude\": coordinates.lat,\n                \"longitude\": coordinates.lng\n              }\n            },\n            \"user\": {\n              \"name\": nomUser,\n              \"email\": email,\n              \"phone\": phone,\n              \"password\": oldPassword\n            }\n          }\n        })\n      }).then(res => res.json()).then(function (result) {\n        if (result.data.saveUserPro !== []) {\n          setDataSaved(true);\n        }\n      });\n    }\n  }\n\n  function handleSubmitPassword(event) {\n    event.preventDefault();\n\n    if (password1 === password2 && password1.length >= 5) {\n      setAlert(\"\");\n      fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: `\n                        query{\n                            matchPassword(password:\"${oldPassword}\", userProId: \"${localStorage.getItem('userId')}\")\n                        }​​​​\n                    `\n        })\n      }).then(res => res.json()).then(function (result) {\n        if (result.data.matchPassword === true) {\n          setDataSaved(true);\n\n          if (validAdresse === true && alertOrganization === \"\" && alertMail === \"\") {\n            setSubmited(true);\n            let typesOrga = [];\n\n            if (estArtisan === true) {\n              typesOrga.push(\"Artisan\");\n            }\n\n            if (estMagasinSpe === true) {\n              typesOrga.push(\"Magasin spécialisé\");\n            }\n\n            if (estMagasinGen === true) {\n              typesOrga.push(\"Magasin généraliste\");\n            }\n\n            if (estAsso === true) {\n              typesOrga.push(\"Association\");\n            }\n\n            if (estMarque === true) {\n              typesOrga.push(\"Marque\");\n            }\n\n            let typeOffre = [];\n\n            if (estAlim === true) {\n              typeOffre.push(\"Alimentation\");\n            }\n\n            if (estAccess === true) {\n              typeOffre.push(\"Accessoire\");\n            }\n\n            typeOffre.concat(nomsServicesCHoisis);\n            fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                query: `\n                        mutation($userProId: String, $organization: OrganizationInput!, $adress:AdressInput!, $user:UserIntput!){\n                            updateUserPro(userProId: $userProId, organization: $organization,  adress:$adress, user:$user)\n                            {​​​​​​\n                                id\n                                organization{\n                                    name\n                                }\n                                user{\n                                    name\n                                }\n                            }​​​​​​​\n                        }`,\n                variables: {\n                  \"userProId\": localStorage.getItem(\"userId\"),\n                  \"organization\": {\n                    \"name\": nomOrga,\n                    \"orgas\": typesOrga,\n                    \"offers\": typeOffre\n                  },\n                  \"adress\": {\n                    \"street\": adresse,\n                    \"geoLocation\": {\n                      \"latitude\": coordinates.lat,\n                      \"longitude\": coordinates.lng\n                    }\n                  },\n                  \"user\": {\n                    \"name\": nomUser,\n                    \"email\": email,\n                    \"phone\": phone,\n                    \"password\": password1\n                  }\n                }\n              })\n            }).then(res => res.json()).then(function (result) {\n              if (result.data.saveUserPro !== []) {\n                setDataSaved(true);\n              }\n            });\n          }\n        } else {\n          setAlert(\"Ancien mot de passe incorrect\");\n        }\n      });\n    } else if (password1.length < 5) {\n      setAlert(\"La longueur des mots de passe doit excéder 5 caractères\");\n    } else if (password1 !== password2) {\n      setAlert(\"Mots de passe différents.\");\n    }\n  }\n\n  function getPageContent() {\n    switch (pageId) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(Box, {\n          mt: 10,\n          children: userPro ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Organisation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                ml: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  className: classes.grid,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    sm: 3,\n                    children: \"Nom\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    sm: 3,\n                    children: userPro.organization.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 472,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  className: classes.grid,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    sm: 3,\n                    children: \"Types d'organisation\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    sm: 3,\n                    children: typesOrga\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 480,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  className: classes.grid,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    sm: 3,\n                    children: \"Offres\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 485,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    sm: 3,\n                    children: typesOffres\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  className: classes.grid,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    sm: 3,\n                    children: \"Adresse Postale\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 493,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    sm: 6,\n                    children: userPro.organization.postalAddress.street\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Utilisateur\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                ml: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  className: classes.grid,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    sm: 3,\n                    children: \"Nom\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 504,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    sm: 3,\n                    children: userPro.user.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 507,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  className: classes.grid,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    sm: 3,\n                    children: \"T\\xE9l\\xE9phone\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    sm: 3,\n                    children: userPro.user.phoneNumber\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 515,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  className: classes.grid,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    sm: 3,\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 520,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    sm: 3,\n                    children: userPro.user.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 523,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 25\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 24\n        }, this);\n        break;\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(Box, {\n          mt: 10,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.form,\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n              open: dataSaved,\n              autoHideDuration: 6000,\n              anchorOrigin: {\n                vertical: \"top\",\n                horizontal: \"center\"\n              },\n              onClose: () => setDataSaved(false),\n              children: /*#__PURE__*/_jsxDEV(Alert, {\n                severity: \"success\",\n                children: \"Informations enrengistr\\xE9es\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 1,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                item: true,\n                xs: 12,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 3,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    required: true,\n                    spacing: 3,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.formControl,\n                      id: \"nomOrga\",\n                      label: \"Nom de l'enseigne\",\n                      value: nomOrga,\n                      required: true,\n                      onChange: function (e) {\n                        setNomOrga(e.target.value);\n                        checkAvailableOrganization(e.target.value);\n                      },\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 547,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 3,\n                  children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                    component: \"fieldset\",\n                    className: classes.formControl,\n                    required: true,\n                    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                      component: \"legend\",\n                      children: \"Type de l'enseigne\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 563,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                          checked: estArtisan,\n                          onChange: e => setEstArtisan(e.target.checked),\n                          name: \"estArtisan\",\n                          color: \"default\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 566,\n                          columnNumber: 58\n                        }, this),\n                        label: \"Artisan\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 565,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                          checked: estMagasinSpe,\n                          onChange: e => setEstMagasinSpe(e.target.checked),\n                          name: \"estMagasinSpe\",\n                          color: \"default\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 572,\n                          columnNumber: 58\n                        }, this),\n                        label: \"Magasin sp\\xE9cialis\\xE9\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 571,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                          checked: estMagasinGen,\n                          onChange: e => setEstMagasinGen(e.target.checked),\n                          name: \"estMagasinGen\",\n                          color: \"default\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 578,\n                          columnNumber: 58\n                        }, this),\n                        label: \"Magasin g\\xE9n\\xE9raliste\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 577,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                          checked: estAsso,\n                          onChange: e => setEstAsso(e.target.checked),\n                          name: \"estAsso\",\n                          color: \"default\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 584,\n                          columnNumber: 58\n                        }, this),\n                        label: \"Association\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 583,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                          checked: estMarque,\n                          onChange: e => setEstMarque(e.target.checked),\n                          name: \"estMarque\",\n                          color: \"default\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 590,\n                          columnNumber: 58\n                        }, this),\n                        label: \"Marque\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 589,\n                        columnNumber: 45\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 564,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 562,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    required: true,\n                    component: \"fieldset\",\n                    className: classes.formControl,\n                    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                      component: \"legend\",\n                      children: \"Type de l'offre\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 598,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                          checked: estAlim,\n                          onChange: e => setEstAlim(e.target.checked),\n                          name: \"Alimentation\",\n                          color: \"default\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 601,\n                          columnNumber: 58\n                        }, this),\n                        label: \"Alimentation\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 600,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                          checked: estAccess,\n                          onChange: e => setEstAccess(e.target.checked),\n                          name: \"Accessoire\",\n                          color: \"default\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 607,\n                          columnNumber: 58\n                        }, this),\n                        label: \"Accessoire\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 606,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                          children: \"Services\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 613,\n                          columnNumber: 49\n                        }, this), /*#__PURE__*/_jsxDEV(Select, {\n                          multiple: true,\n                          value: nomsServicesCHoisis,\n                          onChange: handleChange,\n                          input: /*#__PURE__*/_jsxDEV(Input, {\n                            id: \"select-multiple-checkbox\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 618,\n                            columnNumber: 60\n                          }, this),\n                          renderValue: selected => selected.join(\", \"),\n                          MenuProps: MenuProps,\n                          children: nomsServices.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n                            value: name,\n                            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                              checked: nomsServicesCHoisis.indexOf(name) > -1\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 624,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                              primary: name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 625,\n                              columnNumber: 61\n                            }, this)]\n                          }, name, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 623,\n                            columnNumber: 57\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 614,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 612,\n                        columnNumber: 45\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 599,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 597,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 3,\n                  children: /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n                    value: adresse,\n                    onChange: setAdresse,\n                    onSelect: handleAddressSelect,\n                    children: ({\n                      getInputProps,\n                      suggestions,\n                      getSuggestionItemProps,\n                      loading\n                    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(TextField, {\n                        variant: \"outlined\",\n                        onChange: () => setValidAdresse(false),\n                        className: classes.formControl,\n                        required: true,\n                        ...getInputProps({\n                          label: \"Adresse\",\n                          placeholder: \"Entrez l'adresse\"\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 641,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: \"Chargement...\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 646,\n                          columnNumber: 64\n                        }, this) : null, suggestions.map((suggestion, i) => {\n                          const style = {\n                            backgroundColor: suggestion.active ? colors.brown : \"#fafafa\"\n                          };\n                          return /*#__PURE__*/_jsxDEV(\"div\", { ...getSuggestionItemProps(suggestion, {\n                              style\n                            }),\n                            children: suggestion.description\n                          }, i, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 653,\n                            columnNumber: 61\n                          }, this);\n                        })]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 645,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 640,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 634,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 3,\n                  children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    required: true,\n                    spacing: 3,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.formControl,\n                      id: \"nomUser\",\n                      label: \"Nom d'utilisateur\",\n                      required: true,\n                      value: nomUser,\n                      onChange: e => setNomUser(e.target.value),\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 666,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 664,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    required: true,\n                    spacing: 3,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.formControl,\n                      id: \"idRace\",\n                      label: \"Email\",\n                      required: true,\n                      value: email,\n                      type: \"email\",\n                      onChange: function (e) {\n                        setEmail(e.target.value);\n                        checkAvailableAdress(e.target.value);\n                      },\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 678,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 676,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    required: true,\n                    spacing: 3,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      className: classes.formControl,\n                      id: \"phone\",\n                      label: \"T\\xE9l\\xE9phone\",\n                      type: \"tel\",\n                      required: true,\n                      value: phone,\n                      onChange: e => setPhone(e.target.value),\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 694,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 692,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 663,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                item: true,\n                xs: 12,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 3\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 708,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 3\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 710,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 3,\n                  children: [alertMail ? /*#__PURE__*/_jsxDEV(Alert, {\n                    severity: \"error\",\n                    fullwidth: true,\n                    children: alertMail\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 713,\n                    columnNumber: 46\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), alertOrganization ? /*#__PURE__*/_jsxDEV(Alert, {\n                    severity: \"error\",\n                    children: alertOrganization\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 714,\n                    columnNumber: 54\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), validAdresse === false && submited === true ? /*#__PURE__*/_jsxDEV(Alert, {\n                    severity: \"error\",\n                    children: \"Adresse non compl\\xE9t\\xE9e\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 717,\n                    columnNumber: 41\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 712,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 3,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    variant: \"contained\",\n                    style: {\n                      backgroundColor: colors.red\n                    },\n                    fullwidth: true,\n                    className: classes.btnSubmit,\n                    children: \"Sauvegarder\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 721,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 720,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 707,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 24\n        }, this);\n        break;\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(Box, {\n          mt: 10,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.form,\n            onSubmit: handleSubmitPassword,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 1,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                item: true,\n                xs: 12,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  lg: 4,\n                  md: 6,\n                  sm: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControlPass,\n                    required: true,\n                    spacing: 3,\n                    xs: 6,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      variant: \"outlined\",\n                      margin: \"normal\",\n                      required: true,\n                      fullWidth: true,\n                      type: \"password\",\n                      name: \"oldPass\",\n                      sm: 12,\n                      md: 12,\n                      xs: 12,\n                      id: \"oldPswd\",\n                      label: \"Ancien mot de passe\",\n                      onChange: e => setOldPassword(e.target.value),\n                      value: oldPassword\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 739,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 737,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 736,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  lg: 6,\n                  md: 6,\n                  sm: 12,\n                  children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControlPass,\n                    required: true,\n                    spacing: 3,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      variant: \"outlined\",\n                      margin: \"normal\",\n                      required: true,\n                      fullWidth: true,\n                      type: \"password\",\n                      name: \"pass1\",\n                      id: \"password1\",\n                      label: \"Nouveau mot de passe\",\n                      onChange: e => setPassword1(e.target.value),\n                      value: password1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 746,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 745,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControlPass,\n                    required: true,\n                    spacing: 3,\n                    xs: 6,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      variant: \"outlined\",\n                      margin: \"normal\",\n                      required: true,\n                      fullWidth: true,\n                      type: \"password\",\n                      name: \"pass2\",\n                      id: \"password2\",\n                      label: \"Confirmer le nouveau mot de passe\",\n                      onChange: e => setPassword2(e.target.value),\n                      value: password2\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 751,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 750,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 744,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 735,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                item: true,\n                xs: 12,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 3\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 758,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 3\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 760,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 3,\n                  children: [alert ? /*#__PURE__*/_jsxDEV(Alert, {\n                    severity: \"error\",\n                    children: alert\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 763,\n                    columnNumber: 46\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), alertMail ? /*#__PURE__*/_jsxDEV(Alert, {\n                    severity: \"error\",\n                    fullwidth: true,\n                    children: alertMail\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 764,\n                    columnNumber: 50\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), alertOrganization ? /*#__PURE__*/_jsxDEV(Alert, {\n                    severity: \"error\",\n                    children: alertOrganization\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 765,\n                    columnNumber: 58\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), validAdresse === false && submited === true ? /*#__PURE__*/_jsxDEV(Alert, {\n                    severity: \"error\",\n                    children: \"Adresse non compl\\xE9t\\xE9e\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 768,\n                    columnNumber: 45\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 762,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 3,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    variant: \"contained\",\n                    style: {\n                      backgroundColor: colors.red\n                    },\n                    className: classes.btnSubmit,\n                    children: \"Sauvegarder\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 772,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 771,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 757,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n              open: dataSaved,\n              autoHideDuration: 6000,\n              anchorOrigin: {\n                vertical: \"top\",\n                horizontal: \"center\"\n              },\n              onClose: () => setDataSaved(false),\n              children: /*#__PURE__*/_jsxDEV(Alert, {\n                severity: \"success\",\n                children: \"Informations enrengistr\\xE9es\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 781,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 779,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 24\n        }, this);\n        break;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 791,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        name: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 5,\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.btn,\n            variant: \"contained\",\n            style: pageId === 0 ? {\n              backgroundColor: colors.brown\n            } : {\n              backgroundColor: colors.grey\n            },\n            onClick: function (e) {\n              getUserProfileData();\n              setPageId(0);\n            },\n            children: \"Mon profil\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.btn,\n            variant: \"contained\",\n            style: pageId === 1 ? {\n              backgroundColor: colors.brown\n            } : {\n              backgroundColor: colors.grey\n            },\n            onClick: function (e) {\n              getUserProfileData();\n              setPageId(1);\n            },\n            children: \"Modifier mon profil\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.btn,\n            variant: \"contained\",\n            style: pageId === 2 ? {\n              backgroundColor: colors.brown\n            } : {\n              backgroundColor: colors.grey\n            },\n            onClick: function (e) {\n              getUserProfileData();\n              setPageId(2);\n            },\n            children: \"Modifier mon mot de passe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 812,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 5,\n        children: getPageContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 820,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 792,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 790,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserProfile, \"WysePzn2zVeZWHKAcUeJmo25Weg=\", false, function () {\n  return [useStyles];\n});\n\n_c = UserProfile;\nexport default UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["/media/reda/F4C8104CC810100A/Project/tech-instinct/mister-coocky-web-app-client/src/pages/UserProfile.js"],"names":["React","useEffect","useState","makeStyles","Header","Title","Container","Grid","Button","Box","colors","misterCoockyApi","TextField","FormControl","FormControlLabel","Checkbox","FormGroup","FormLabel","Select","ListItemText","MenuItem","Input","InputLabel","PlacesAutocomplete","geocodeByAddress","getLatLng","Alert","Snackbar","MenuProps","PaperProps","style","maxHeight","maxWidth","getContentAnchorEl","anchorOrigin","vertical","horizontal","useStyles","theme","root","flexGrow","btn","padding","spacing","color","palette","text","secondary","width","height","btnSubmit","formControl","margin","unit","minWidth","formControlPass","grid","marginTop","UserProfile","pageId","setPageId","dataSaved","setDataSaved","alert","setAlert","alertMail","setAlertMail","alertOrganization","setAlertOrganization","submited","setSubmited","userPro","setUserPro","nomOrga","setNomOrga","nomFournisseur","setNomFournisseur","adresse","setAdresse","coordinates","setCoordinates","lat","lng","validAdresse","setValidAdresse","typesOrga","setTypesOrga","typesOffres","setTypesOffres","estArtisan","setEstArtisan","estMagasinSpe","setEstMagasinSpe","estMagasinGen","setEstMagasinGen","estAsso","setEstAsso","estMarque","setEstMarque","estAlim","setEstAlim","estAccess","setEstAccess","nomsServicesCHoisis","setNomsServicesCHoisis","nomsServices","nomUser","setNomUser","phone","setPhone","email","setEmail","oldPassword","setOldPassword","password1","setPassword1","password2","setPassword2","classes","getUserProfileData","fetch","method","headers","body","JSON","stringify","query","localStorage","getItem","then","res","json","result","data","organization","name","postalAddress","street","geoLocation","latitude","longitude","supplier","user","phoneNumber","getTypesOrganizationByName","forEach","type","join","getOffersOrganizationByName","handleChange","event","target","value","handleAddressSelect","results","latLng","checkAvailableOrganization","orga","existsOrganizationByName","checkAvailableAdress","mail","getMail","handleSubmit","preventDefault","push","typeOffre","concat","variables","saveUserPro","handleSubmitPassword","length","matchPassword","getPageContent","form","e","checked","selected","map","indexOf","getInputProps","suggestions","getSuggestionItemProps","loading","label","placeholder","suggestion","i","backgroundColor","active","brown","description","red","grey"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,eAA5B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAAQC,MAAR,QAAqB,kBAArB;AACA,OAAOC,eAAP,MAA4B,qBAA5B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,kBAAP,IAA4BC,gBAA5B,EAA8CC,SAA9C,QAA8D,2BAA9D;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,UAAU,EAAE;AACRC,IAAAA,KAAK,EAAE;AACHC,MAAAA,SAAS,EAAE,GADR;AAEHC,MAAAA,QAAQ,EAAE;AAFP;AADC,GADE;AAOd;AACAC,EAAAA,kBAAkB,EAAE,IARN;AASdC,EAAAA,YAAY,EAAE;AACVC,IAAAA,QAAQ,EAAE,QADA;AAEVC,IAAAA,UAAU,EAAE;AAFF;AATA,CAAlB;AAeA,MAAMC,SAAS,GAAGlC,UAAU,CAAEmC,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR,GAD+B;AAIrCC,EAAAA,GAAG,EAAE;AACDC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADR;AAEDC,IAAAA,KAAK,EAAEN,KAAK,CAACO,OAAN,CAAcC,IAAd,CAAmBC,SAFzB;AAGDC,IAAAA,KAAK,EAAE,MAHN;AAIDC,IAAAA,MAAM,EAAE;AAJP,GAJgC;AAUrCC,EAAAA,SAAS,EAAE;AACPR,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADF;AAEPC,IAAAA,KAAK,EAAE,MAFA;AAGPI,IAAAA,KAAK,EAAE;AAHA,GAV0B;AAerCG,EAAAA,WAAW,EAAE;AACTC,IAAAA,MAAM,EAAEd,KAAK,CAACK,OAAN,CAAcU,IADb;AAETC,IAAAA,QAAQ,EAAE,GAFD;AAGTtB,IAAAA,QAAQ,EAAE;AAHD,GAfwB;AAoBrCuB,EAAAA,eAAe,EAAE;AACbP,IAAAA,KAAK,EAAC,GADO;AAEbI,IAAAA,MAAM,EAAEd,KAAK,CAACK,OAAN,CAAcU;AAFT,GApBoB;AAwBrCG,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAC;AADR;AAxB+B,CAAZ,CAAD,CAA5B;;AA6BA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAK,CAACC,MAAD,EAASC,SAAT,IAAqB1D,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAK,CAAC2D,SAAD,EAAYC,YAAZ,IAA2B5D,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAC6D,KAAD,EAAQC,QAAR,IAAoB9D,QAAQ,CAAC,EAAD,CAAlC,CAHmB,CAGwB;;AAC3C,QAAM,CAAC+D,SAAD,EAAYC,YAAZ,IAA4BhE,QAAQ,CAAC,EAAD,CAA1C,CAJmB,CAIgC;;AACnD,QAAM,CAACiE,iBAAD,EAAoBC,oBAApB,IAA4ClE,QAAQ,CAAC,EAAD,CAA1D,CALmB,CAKgD;;AACnE,QAAM,CAACmE,QAAD,EAAWC,WAAX,IAA0BpE,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAK,CAACqE,OAAD,EAAUC,UAAV,IAAuBtE,QAAQ,CAAC,EAAD,CAApC;AACA,QAAK,CAACuE,OAAD,EAAUC,UAAV,IAAuBxE,QAAQ,CAAC,EAAD,CAApC;AACA,QAAK,CAACyE,cAAD,EAAiBC,iBAAjB,IAAqC1E,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAK,CAAC2E,OAAD,EAAUC,UAAV,IAAuB5E,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC6E,WAAD,EAAcC,cAAd,IAAgChF,KAAK,CAACE,QAAN,CAAe;AAAE+E,IAAAA,GAAG,EAAE,IAAP;AAAaC,IAAAA,GAAG,EAAE;AAAlB,GAAf,CAAtC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkClF,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAK,CAACmF,SAAD,EAAYC,YAAZ,IAA2BpF,QAAQ,EAAxC;AACA,QAAK,CAACqF,WAAD,EAAcC,cAAd,IAA+BtF,QAAQ,EAA5C;AACA,QAAM,CAACuF,UAAD,EAAaC,aAAb,IAA8BxF,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACyF,aAAD,EAAgBC,gBAAhB,IAAoC1F,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAAC2F,aAAD,EAAgBC,gBAAhB,IAAoC5F,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAAC6F,OAAD,EAAUC,UAAV,IAAwB9F,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAAC+F,SAAD,EAAYC,YAAZ,IAA4BhG,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACiG,OAAD,EAAUC,UAAV,IAAwBlG,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACmG,SAAD,EAAYC,YAAZ,IAA4BpG,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACqG,mBAAD,EAAsBC,sBAAtB,IAAgDtG,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAMuG,YAAY,GAAG,CAAC,yCAAD,CAArB;AACA,QAAK,CAACC,OAAD,EAAUC,UAAV,IAAuBzG,QAAQ,CAAC,EAAD,CAApC;AACA,QAAK,CAAC0G,KAAD,EAAQC,QAAR,IAAmB3G,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAK,CAAC4G,KAAD,EAAQC,QAAR,IAAmB7G,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAK,CAAC8G,WAAD,EAAcC,cAAd,IAA+B/G,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAK,CAACgH,SAAD,EAAYC,YAAZ,IAA2BjH,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAK,CAACkH,SAAD,EAAYC,YAAZ,IAA2BnH,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMoH,OAAO,GAAGjF,SAAS,EAAzB;;AAEA,WAASkF,kBAAT,GAA8B;AAC1BC,IAAAA,KAAK,CAAE,GAAE7G,eAAe,CAACA,eAAgB,UAApC,EAA+C;AAChD8G,MAAAA,MAAM,EAAE,MADwC;AAEhDC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFuC;AAKhDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,KAAK,EAAG;AACxB;AACA,sCAAsCC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA+B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBiC,OAAf;AAL0C,KAA/C,CAAL,CA+BKC,IA/BL,CA+BWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EA/BnB,EAgCKF,IAhCL,CAgCU,UAAUG,MAAV,EAAkB;AACpB5D,MAAAA,UAAU,CAAC4D,MAAM,CAACC,IAAP,CAAY9D,OAAb,CAAV;AACAG,MAAAA,UAAU,CAAC0D,MAAM,CAACC,IAAP,CAAY9D,OAAZ,CAAoB+D,YAApB,CAAiCC,IAAlC,CAAV;AACAzD,MAAAA,UAAU,CAACsD,MAAM,CAACC,IAAP,CAAY9D,OAAZ,CAAoB+D,YAApB,CAAiCE,aAAjC,CAA+CC,MAAhD,CAAV;AACAzD,MAAAA,cAAc,CAAC;AAACC,QAAAA,GAAG,EAAEmD,MAAM,CAACC,IAAP,CAAY9D,OAAZ,CAAoB+D,YAApB,CAAiCE,aAAjC,CAA+CE,WAA/C,CAA2DC,QAAjE;AAA2EzD,QAAAA,GAAG,EAAEkD,MAAM,CAACC,IAAP,CAAY9D,OAAZ,CAAoB+D,YAApB,CAAiCE,aAAjC,CAA+CE,WAA/C,CAA2DE;AAA3I,OAAD,CAAd;AACAhE,MAAAA,iBAAiB,CAACwD,MAAM,CAACC,IAAP,CAAY9D,OAAZ,CAAoB+D,YAApB,CAAiCO,QAAjC,CAA0CN,IAA3C,CAAjB;AACA5B,MAAAA,UAAU,CAACyB,MAAM,CAACC,IAAP,CAAY9D,OAAZ,CAAoBuE,IAApB,CAAyBP,IAA1B,CAAV;AACA1B,MAAAA,QAAQ,CAACuB,MAAM,CAACC,IAAP,CAAY9D,OAAZ,CAAoBuE,IAApB,CAAyBC,WAA1B,CAAR;AACAhC,MAAAA,QAAQ,CAACqB,MAAM,CAACC,IAAP,CAAY9D,OAAZ,CAAoBuE,IAApB,CAAyBhC,KAA1B,CAAR;AAAyC;AACzCU,MAAAA,KAAK,CAAE,GAAE7G,eAAe,CAACA,eAAgB,UAApC,EAA+C;AAChD8G,QAAAA,MAAM,EAAE,MADwC;AAEhDC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFuC;AAKhDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,KAAK,EAAG;AAChC;AACA,oEAAoEM,MAAM,CAACC,IAAP,CAAY9D,OAAZ,CAAoB+D,YAApB,CAAiCC,IAAK;AAC1G;AAJyC,SAAf;AAL0C,OAA/C,CAAL,CAYKN,IAZL,CAYWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAZnB,EAaKF,IAbL,CAaU,UAAUG,MAAV,EAAkB;AACpBA,QAAAA,MAAM,CAACC,IAAP,CAAYW,0BAAZ,CAAuCC,OAAvC,CAA+CC,IAAI,IAAI;AACnD,cAAIA,IAAI,KAAK,SAAb,EAAuB;AACnBxD,YAAAA,aAAa,CAAC,IAAD,CAAb;AACH;;AACD,cAAIwD,IAAI,KAAK,oBAAb,EAAkC;AAC9BtD,YAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH;;AACD,cAAIsD,IAAI,KAAK,qBAAb,EAAmC;AAC/BpD,YAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH;;AACD,cAAIoD,IAAI,KAAK,aAAb,EAA2B;AACvBlD,YAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AACD,cAAIkD,IAAI,KAAK,QAAb,EAAsB;AAClBhD,YAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;AACJ,SAhBD;AAiBAZ,QAAAA,YAAY,CAAC8C,MAAM,CAACC,IAAP,CAAYW,0BAAZ,CAAuCG,IAAvC,CAA4C,IAA5C,CAAD,CAAZ;AACH,OAhCL;AAiCI3B,MAAAA,KAAK,CAAE,GAAE7G,eAAe,CAACA,eAAgB,UAApC,EAA+C;AAChD8G,QAAAA,MAAM,EAAE,MADwC;AAEhDC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFuC;AAKhDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,KAAK,EAAG;AACpC;AACA,yEAAyEM,MAAM,CAACC,IAAP,CAAY9D,OAAZ,CAAoB+D,YAApB,CAAiCC,IAAK;AAC/G;AAJ6C,SAAf;AAL0C,OAA/C,CAAL,CAYCN,IAZD,CAYOC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAZf,EAaCF,IAbD,CAaM,UAAUG,MAAV,EAAkB;AACpBA,QAAAA,MAAM,CAACC,IAAP,CAAYe,2BAAZ,CAAwCH,OAAxC,CAAgDC,IAAI,IAAI;AACpD,cAAIA,IAAI,KAAK,cAAb,EAA4B;AACxB9C,YAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AACD,cAAI8C,IAAI,KAAK,YAAb,EAA0B;AACtB5C,YAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;AACJ,SAPD;AAQAd,QAAAA,cAAc,CAAC4C,MAAM,CAACC,IAAP,CAAYe,2BAAZ,CAAwCD,IAAxC,CAA6C,IAA7C,CAAD,CAAd;AACH,OAvBD;AAwBP,KAlGL;AAmGH;;AAEDlJ,EAAAA,SAAS,CAAC,MAAM;AACZsH,IAAAA,kBAAkB;AACrB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAM8B,YAAY,GAAIC,KAAD,IAAW;AAC5B9C,IAAAA,sBAAsB,CAAC8C,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAtB;AACH,GAFD;;AAIA,QAAMC,mBAAmB,GAAG,MAAMD,KAAN,IAAe;AACvC,UAAME,OAAO,GAAG,MAAMlI,gBAAgB,CAACgI,KAAD,CAAtC;AACA,UAAMG,MAAM,GAAG,MAAMlI,SAAS,CAACiI,OAAO,CAAC,CAAD,CAAR,CAA9B;AACA5E,IAAAA,UAAU,CAAC0E,KAAD,CAAV;AACAxE,IAAAA,cAAc,CAAC2E,MAAD,CAAd;AACAvE,IAAAA,eAAe,CAAC,IAAD,CAAf;AACH,GAND;;AAQA,WAASwE,0BAAT,CAAoCC,IAApC,EAAyC;AACrCrC,IAAAA,KAAK,CAAE,GAAE7G,eAAe,CAACA,eAAgB,UAApC,EAA+C;AAChD8G,MAAAA,MAAM,EAAE,MADwC;AAEhDC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFuC;AAKhDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,KAAK,EAAG;AACxB;AACA,yDAAyD+B,IAAK;AAC9D;AAJiC,OAAf;AAL0C,KAA/C,CAAL,CAYK5B,IAZL,CAYWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAZnB,EAaKF,IAbL,CAaU,UAAUG,MAAV,EAAkB;AACpB,UAAIA,MAAM,CAACC,IAAP,CAAYyB,wBAAZ,KAAyC,KAA7C,EAAoD;AAChD1F,QAAAA,oBAAoB,CAAC,EAAD,CAApB;AACH,OAFD,MAEO;AACHA,QAAAA,oBAAoB,CAAC,kCAAD,CAApB;AACH;AACJ,KAnBL;AAoBH;;AACD,WAAS2F,oBAAT,CAA8BC,IAA9B,EAAmC;AAC/BxC,IAAAA,KAAK,CAAE,GAAE7G,eAAe,CAACA,eAAgB,UAApC,EAA+C;AAChD8G,MAAAA,MAAM,EAAE,MADwC;AAEhDC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFuC;AAKhDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,KAAK,EAAG;AACxB;AACA,wCAAwCkC,IAAK;AAC7C;AACA;AACA;AANiC,OAAf;AAL0C,KAA/C,CAAL,CAcK/B,IAdL,CAcWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAdnB,EAeKF,IAfL,CAeU,UAAUG,MAAV,EAAkB;AACpB,UAAIA,MAAM,CAACC,IAAP,CAAY4B,OAAZ,KAAwB,IAA5B,EAAkC;AAC9B/F,QAAAA,YAAY,CAAC,qBAAD,CAAZ;AACH,OAFD,MAEM;AACFA,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACH;AACJ,KArBL;AAsBH;;AAED,WAASgG,YAAT,CAAsBZ,KAAtB,EAA6B;AACzBA,IAAAA,KAAK,CAACa,cAAN;;AACI,QAAGhF,YAAY,KAAK,IAAjB,IAAyBhB,iBAAiB,KAAG,EAA7C,IAAmDF,SAAS,KAAG,EAAlE,EAAsE;AAClEK,MAAAA,WAAW,CAAC,IAAD,CAAX;AACA,UAAIe,SAAS,GAAG,EAAhB;;AACA,UAAII,UAAU,KAAK,IAAnB,EAAyB;AACrBJ,QAAAA,SAAS,CAAC+E,IAAV,CAAe,SAAf;AACH;;AACD,UAAIzE,aAAa,KAAK,IAAtB,EAA4B;AACxBN,QAAAA,SAAS,CAAC+E,IAAV,CAAe,oBAAf;AACH;;AACD,UAAIvE,aAAa,KAAK,IAAtB,EAA4B;AACxBR,QAAAA,SAAS,CAAC+E,IAAV,CAAe,qBAAf;AACH;;AACD,UAAIrE,OAAO,KAAK,IAAhB,EAAsB;AAClBV,QAAAA,SAAS,CAAC+E,IAAV,CAAe,aAAf;AACH;;AACD,UAAInE,SAAS,KAAK,IAAlB,EAAwB;AACpBZ,QAAAA,SAAS,CAAC+E,IAAV,CAAe,QAAf;AACH;;AACD,UAAIC,SAAS,GAAG,EAAhB;;AACA,UAAIlE,OAAO,KAAK,IAAhB,EAAsB;AAClBkE,QAAAA,SAAS,CAACD,IAAV,CAAe,cAAf;AACH;;AACD,UAAI/D,SAAS,KAAK,IAAlB,EAAwB;AACpBgE,QAAAA,SAAS,CAACD,IAAV,CAAe,YAAf;AACH;;AACDC,MAAAA,SAAS,CAACC,MAAV,CAAiB/D,mBAAjB;AACAiB,MAAAA,KAAK,CAAE,GAAE7G,eAAe,CAACA,eAAgB,UAApC,EAA+C;AAChD8G,QAAAA,MAAM,EAAE,MADwC;AAEhDC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFuC;AAKhDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,KAAK,EAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAbyC;AAcjByC,UAAAA,SAAS,EAAE;AACP,yBAAaxC,YAAY,CAACC,OAAb,CAAqB,QAArB,CADN;AAEP,4BAAgB;AACZ,sBAAQvD,OADI;AAEZ,uBAASY,SAFG;AAGZ,wBAAUgF;AAHE,aAFT;AAOP,sBAAU;AACN,wBAAUxF,OADJ;AAEN,6BAAe;AACX,4BAAYE,WAAW,CAACE,GADb;AAEX,6BAAaF,WAAW,CAACG;AAFd;AAFT,aAPH;AAcP,oBAAQ;AACJ,sBAAQwB,OADJ;AAEJ,uBAASI,KAFL;AAGJ,uBAASF,KAHL;AAIJ,0BAAYI;AAJR;AAdD;AAdM,SAAf;AAL0C,OAA/C,CAAL,CA0CKiB,IA1CL,CA0CWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EA1CnB,EA2CKF,IA3CL,CA2CU,UAAUG,MAAV,EAAkB;AACpB,YAAIA,MAAM,CAACC,IAAP,CAAYmC,WAAZ,KAA4B,EAAhC,EAAoC;AAChC1G,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;AACJ,OA/CL;AAgDH;AAER;;AACD,WAAS2G,oBAAT,CAA8BnB,KAA9B,EAAoC;AAChCA,IAAAA,KAAK,CAACa,cAAN;;AACA,QAAIjD,SAAS,KAAKE,SAAd,IAA2BF,SAAS,CAACwD,MAAV,IAAoB,CAAnD,EAAsD;AAClD1G,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAwD,MAAAA,KAAK,CAAE,GAAE7G,eAAe,CAACA,eAAgB,UAApC,EAA+C;AAChD8G,QAAAA,MAAM,EAAE,MADwC;AAEhDC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFuC;AAKhDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,KAAK,EAAG;AAC5B;AACA,sDAAsDd,WAAY,kBAAiBe,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA+B;AAClH;AACA;AALqC,SAAf;AAL0C,OAA/C,CAAL,CAaCC,IAbD,CAaOC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAbf,EAcCF,IAdD,CAcM,UAAUG,MAAV,EAAkB;AACpB,YAAGA,MAAM,CAACC,IAAP,CAAYsC,aAAZ,KAA8B,IAAjC,EAAsC;AAClC7G,UAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,cAAGqB,YAAY,KAAK,IAAjB,IAAyBhB,iBAAiB,KAAG,EAA7C,IAAmDF,SAAS,KAAG,EAAlE,EAAsE;AAClEK,YAAAA,WAAW,CAAC,IAAD,CAAX;AACA,gBAAIe,SAAS,GAAG,EAAhB;;AACA,gBAAII,UAAU,KAAK,IAAnB,EAAyB;AACrBJ,cAAAA,SAAS,CAAC+E,IAAV,CAAe,SAAf;AACH;;AACD,gBAAIzE,aAAa,KAAK,IAAtB,EAA4B;AACxBN,cAAAA,SAAS,CAAC+E,IAAV,CAAe,oBAAf;AACH;;AACD,gBAAIvE,aAAa,KAAK,IAAtB,EAA4B;AACxBR,cAAAA,SAAS,CAAC+E,IAAV,CAAe,qBAAf;AACH;;AACD,gBAAIrE,OAAO,KAAK,IAAhB,EAAsB;AAClBV,cAAAA,SAAS,CAAC+E,IAAV,CAAe,aAAf;AACH;;AACD,gBAAInE,SAAS,KAAK,IAAlB,EAAwB;AACpBZ,cAAAA,SAAS,CAAC+E,IAAV,CAAe,QAAf;AACH;;AACD,gBAAIC,SAAS,GAAG,EAAhB;;AACA,gBAAIlE,OAAO,KAAK,IAAhB,EAAsB;AAClBkE,cAAAA,SAAS,CAACD,IAAV,CAAe,cAAf;AACH;;AACD,gBAAI/D,SAAS,KAAK,IAAlB,EAAwB;AACpBgE,cAAAA,SAAS,CAACD,IAAV,CAAe,YAAf;AACH;;AACDC,YAAAA,SAAS,CAACC,MAAV,CAAiB/D,mBAAjB;AACAiB,YAAAA,KAAK,CAAE,GAAE7G,eAAe,CAACA,eAAgB,UAApC,EAA+C;AAChD8G,cAAAA,MAAM,EAAE,MADwC;AAEhDC,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX,eAFuC;AAKhDC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,gBAAAA,KAAK,EAAG;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAbiD;AAcjByC,gBAAAA,SAAS,EAAE;AACP,+BAAaxC,YAAY,CAACC,OAAb,CAAqB,QAArB,CADN;AAEP,kCAAgB;AACZ,4BAAQvD,OADI;AAEZ,6BAASY,SAFG;AAGZ,8BAAUgF;AAHE,mBAFT;AAOP,4BAAU;AACN,8BAAUxF,OADJ;AAEN,mCAAe;AACX,kCAAYE,WAAW,CAACE,GADb;AAEX,mCAAaF,WAAW,CAACG;AAFd;AAFT,mBAPH;AAcP,0BAAQ;AACJ,4BAAQwB,OADJ;AAEJ,6BAASI,KAFL;AAGJ,6BAASF,KAHL;AAIJ,gCAAYM;AAJR;AAdD;AAdM,eAAf;AAL0C,aAA/C,CAAL,CA0CKe,IA1CL,CA0CWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EA1CnB,EA2CKF,IA3CL,CA2CU,UAAUG,MAAV,EAAkB;AACpB,kBAAIA,MAAM,CAACC,IAAP,CAAYmC,WAAZ,KAA4B,EAAhC,EAAoC;AAChC1G,gBAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;AACJ,aA/CL;AAgDH;AAIJ,SAjFD,MAiFK;AACDE,UAAAA,QAAQ,CAAC,+BAAD,CAAR;AACH;AACJ,OAnGD;AAqGH,KAvGD,MAuGO,IAAIkD,SAAS,CAACwD,MAAV,GAAmB,CAAvB,EAA0B;AAC7B1G,MAAAA,QAAQ,CAAC,yDAAD,CAAR;AACH,KAFM,MAEA,IAAIkD,SAAS,KAAKE,SAAlB,EAA6B;AAChCpD,MAAAA,QAAQ,CAAC,2BAAD,CAAR;AACH;AACJ;;AACD,WAAS4G,cAAT,GAA0B;AACtB,YAAQjH,MAAR;AACI,WAAK,CAAL;AACI,4BAAO,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAA,oBAECY,OAAO,gBACP;AAAA,mCACI,QAAC,SAAD;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,CAAT;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,SAAS,MAAf;AAAgB,kBAAA,SAAS,EAAE+C,OAAO,CAAC9D,IAAnC;AAAA,0CACI,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAW,oBAAA,EAAE,EAAE,CAAf;AAAkB,oBAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAW,oBAAA,EAAE,EAAE,CAAf;AAAkB,oBAAA,EAAE,EAAE,CAAtB;AAAA,8BACKe,OAAO,CAAC+D,YAAR,CAAqBC;AAD1B;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eASI,QAAC,IAAD;AAAM,kBAAA,SAAS,MAAf;AAAgB,kBAAA,SAAS,EAAEjB,OAAO,CAAC9D,IAAnC;AAAA,0CACI,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAW,oBAAA,EAAE,EAAE,CAAf;AAAkB,oBAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAW,oBAAA,EAAE,EAAE,CAAf;AAAkB,oBAAA,EAAE,EAAE,CAAtB;AAAA,8BACK6B;AADL;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBATJ,eAiBI,QAAC,IAAD;AAAM,kBAAA,SAAS,MAAf;AAAgB,kBAAA,SAAS,EAAEiC,OAAO,CAAC9D,IAAnC;AAAA,0CACI,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAW,oBAAA,EAAE,EAAE,CAAf;AAAkB,oBAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAW,oBAAA,EAAE,EAAE,CAAf;AAAkB,oBAAA,EAAE,EAAE,CAAtB;AAAA,8BACK+B;AADL;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAjBJ,eAyBI,QAAC,IAAD;AAAM,kBAAA,SAAS,MAAf;AAAgB,kBAAA,SAAS,EAAE+B,OAAO,CAAC9D,IAAnC;AAAA,0CACI,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAW,oBAAA,EAAE,EAAE,CAAf;AAAkB,oBAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAW,oBAAA,EAAE,EAAE,CAAf;AAAkB,oBAAA,EAAE,EAAE,CAAtB;AAAA,8BACKe,OAAO,CAAC+D,YAAR,CAAqBE,aAArB,CAAmCC;AADxC;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAoCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBApCJ,eAqCI,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,CAAT;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,SAAS,MAAf;AAAgB,kBAAA,SAAS,EAAEnB,OAAO,CAAC9D,IAAnC;AAAA,0CACI,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAW,oBAAA,EAAE,EAAE,CAAf;AAAkB,oBAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAW,oBAAA,EAAE,EAAE,CAAf;AAAkB,oBAAA,EAAE,EAAE,CAAtB;AAAA,8BACKe,OAAO,CAACuE,IAAR,CAAaP;AADlB;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eASI,QAAC,IAAD;AAAM,kBAAA,SAAS,MAAf;AAAgB,kBAAA,SAAS,EAAEjB,OAAO,CAAC9D,IAAnC;AAAA,0CACI,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAW,oBAAA,EAAE,EAAE,CAAf;AAAkB,oBAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAW,oBAAA,EAAE,EAAE,CAAf;AAAkB,oBAAA,EAAE,EAAE,CAAtB;AAAA,8BACKe,OAAO,CAACuE,IAAR,CAAaC;AADlB;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBATJ,eAiBI,QAAC,IAAD;AAAM,kBAAA,SAAS,MAAf;AAAgB,kBAAA,SAAS,EAAEzB,OAAO,CAAC9D,IAAnC;AAAA,0CACI,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAW,oBAAA,EAAE,EAAE,CAAf;AAAkB,oBAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAW,oBAAA,EAAE,EAAE,CAAf;AAAkB,oBAAA,EAAE,EAAE,CAAtB;AAAA,8BACKe,OAAO,CAACuE,IAAR,CAAahC;AADlB;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBArCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADO,GAkEE;AApEV;AAAA;AAAA;AAAA;AAAA,gBAAP;AAuEA;;AACJ,WAAK,CAAL;AACI,4BAAO,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAA,iCACH;AAAM,YAAA,SAAS,EAAEQ,OAAO,CAACuD,IAAzB;AAA+B,YAAA,QAAQ,EAAEX,YAAzC;AAAA,oCAEQ,QAAC,QAAD;AAAU,cAAA,IAAI,EAAErG,SAAhB;AAA2B,cAAA,gBAAgB,EAAE,IAA7C;AAAmD,cAAA,YAAY,EAAE;AAAC1B,gBAAAA,QAAQ,EAAE,KAAX;AAAkBC,gBAAAA,UAAU,EAAE;AAA9B,eAAjE;AACU,cAAA,OAAO,EAAE,MAAM0B,YAAY,CAAC,KAAD,CADrC;AAAA,qCAEI,QAAC,KAAD;AAAO,gBAAA,QAAQ,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,oBAFR,eAOI,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,OAAO,EAAE,CAAzB;AAAA,sCACI,QAAC,IAAD;AAAM,gBAAA,SAAS,MAAf;AAAgB,gBAAA,IAAI,MAApB;AAAqB,gBAAA,EAAE,EAAE,EAAzB;AAA6B,gBAAA,OAAO,EAAE,CAAtC;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAAA,yCACI,QAAC,WAAD;AAAa,oBAAA,OAAO,EAAC,UAArB;AAAgC,oBAAA,SAAS,EAAEwD,OAAO,CAACnE,WAAnD;AAAgE,oBAAA,QAAQ,EAAE,IAA1E;AACa,oBAAA,OAAO,EAAE,CADtB;AAAA,2CAEI,QAAC,SAAD;AACA,sBAAA,SAAS,EAAEmE,OAAO,CAACnE,WADnB;AAEA,sBAAA,EAAE,EAAC,SAFH;AAGA,sBAAA,KAAK,EAAC,mBAHN;AAIA,sBAAA,KAAK,EAAEsB,OAJP;AAKA,sBAAA,QAAQ,MALR;AAMA,sBAAA,QAAQ,EAAE,UAASqG,CAAT,EAAW;AACjBpG,wBAAAA,UAAU,CAACoG,CAAC,CAACvB,MAAF,CAASC,KAAV,CAAV;AACAI,wBAAAA,0BAA0B,CAACkB,CAAC,CAACvB,MAAF,CAASC,KAAV,CAA1B;AACH,uBATD;AAUA,sBAAA,OAAO,EAAC;AAVR;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAkBI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAAA,0CACI,QAAC,WAAD;AAAa,oBAAA,SAAS,EAAC,UAAvB;AAAkC,oBAAA,SAAS,EAAElC,OAAO,CAACnE,WAArD;AAAkE,oBAAA,QAAQ,EAAE,IAA5E;AAAA,4CACI,QAAC,SAAD;AAAW,sBAAA,SAAS,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI,QAAC,SAAD;AAAA,8CACI,QAAC,gBAAD;AACI,wBAAA,OAAO,eAAE,QAAC,QAAD;AAAU,0BAAA,OAAO,EAAEsC,UAAnB;AACU,0BAAA,QAAQ,EAAEqF,CAAC,IAAKpF,aAAa,CAACoF,CAAC,CAACvB,MAAF,CAASwB,OAAV,CADvC;AAEU,0BAAA,IAAI,EAAC,YAFf;AAE4B,0BAAA,KAAK,EAAC;AAFlC;AAAA;AAAA;AAAA;AAAA,gCADb;AAII,wBAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,8BADJ,eAOI,QAAC,gBAAD;AACI,wBAAA,OAAO,eAAE,QAAC,QAAD;AAAU,0BAAA,OAAO,EAAEpF,aAAnB;AACU,0BAAA,QAAQ,EAAEmF,CAAC,IAAKlF,gBAAgB,CAACkF,CAAC,CAACvB,MAAF,CAASwB,OAAV,CAD1C;AAEU,0BAAA,IAAI,EAAC,eAFf;AAE+B,0BAAA,KAAK,EAAC;AAFrC;AAAA;AAAA;AAAA;AAAA,gCADb;AAII,wBAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,8BAPJ,eAaI,QAAC,gBAAD;AACI,wBAAA,OAAO,eAAE,QAAC,QAAD;AAAU,0BAAA,OAAO,EAAElF,aAAnB;AACU,0BAAA,QAAQ,EAAEiF,CAAC,IAAKhF,gBAAgB,CAACgF,CAAC,CAACvB,MAAF,CAASwB,OAAV,CAD1C;AAEU,0BAAA,IAAI,EAAC,eAFf;AAE+B,0BAAA,KAAK,EAAC;AAFrC;AAAA;AAAA;AAAA;AAAA,gCADb;AAII,wBAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,8BAbJ,eAmBI,QAAC,gBAAD;AACI,wBAAA,OAAO,eAAE,QAAC,QAAD;AAAU,0BAAA,OAAO,EAAEhF,OAAnB;AACU,0BAAA,QAAQ,EAAE+E,CAAC,IAAK9E,UAAU,CAAC8E,CAAC,CAACvB,MAAF,CAASwB,OAAV,CADpC;AACyD,0BAAA,IAAI,EAAC,SAD9D;AAEU,0BAAA,KAAK,EAAC;AAFhB;AAAA;AAAA;AAAA;AAAA,gCADb;AAII,wBAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,8BAnBJ,eAyBI,QAAC,gBAAD;AACI,wBAAA,OAAO,eAAE,QAAC,QAAD;AAAU,0BAAA,OAAO,EAAE9E,SAAnB;AACU,0BAAA,QAAQ,EAAE6E,CAAC,IAAK5E,YAAY,CAAC4E,CAAC,CAACvB,MAAF,CAASwB,OAAV,CADtC;AAEU,0BAAA,IAAI,EAAC,WAFf;AAE2B,0BAAA,KAAK,EAAC;AAFjC;AAAA;AAAA;AAAA;AAAA,gCADb;AAII,wBAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,8BAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAoCI,QAAC,WAAD;AAAa,oBAAA,QAAQ,MAArB;AAAsB,oBAAA,SAAS,EAAC,UAAhC;AAA2C,oBAAA,SAAS,EAAEzD,OAAO,CAACnE,WAA9D;AAAA,4CACI,QAAC,SAAD;AAAW,sBAAA,SAAS,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI,QAAC,SAAD;AAAA,8CACI,QAAC,gBAAD;AACI,wBAAA,OAAO,eAAE,QAAC,QAAD;AAAU,0BAAA,OAAO,EAAEgD,OAAnB;AACU,0BAAA,QAAQ,EAAE2E,CAAC,IAAK1E,UAAU,CAAC0E,CAAC,CAACvB,MAAF,CAASwB,OAAV,CADpC;AAEU,0BAAA,IAAI,EAAC,cAFf;AAE8B,0BAAA,KAAK,EAAC;AAFpC;AAAA;AAAA;AAAA;AAAA,gCADb;AAII,wBAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,8BADJ,eAOI,QAAC,gBAAD;AACI,wBAAA,OAAO,eAAE,QAAC,QAAD;AAAU,0BAAA,OAAO,EAAE1E,SAAnB;AACU,0BAAA,QAAQ,EAAEyE,CAAC,IAAKxE,YAAY,CAACwE,CAAC,CAACvB,MAAF,CAASwB,OAAV,CADtC;AAEU,0BAAA,IAAI,EAAC,YAFf;AAE4B,0BAAA,KAAK,EAAC;AAFlC;AAAA;AAAA;AAAA;AAAA,gCADb;AAII,wBAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,8BAPJ,eAaI,QAAC,WAAD;AAAA,gDACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,eAEI,QAAC,MAAD;AACI,0BAAA,QAAQ,MADZ;AAEI,0BAAA,KAAK,EAAExE,mBAFX;AAGI,0BAAA,QAAQ,EAAE8C,YAHd;AAII,0BAAA,KAAK,eAAE,QAAC,KAAD;AAAO,4BAAA,EAAE,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA,kCAJX;AAKI,0BAAA,WAAW,EAAE2B,QAAQ,IAAIA,QAAQ,CAAC7B,IAAT,CAAc,IAAd,CAL7B;AAMI,0BAAA,SAAS,EAAEvH,SANf;AAAA,oCAQK6E,YAAY,CAACwE,GAAb,CAAkB1C,IAAD,iBACd,QAAC,QAAD;AAAqB,4BAAA,KAAK,EAAEA,IAA5B;AAAA,oDACI,QAAC,QAAD;AAAU,8BAAA,OAAO,EAAEhC,mBAAmB,CAAC2E,OAApB,CAA4B3C,IAA5B,IAAoC,CAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,oCADJ,eAEI,QAAC,YAAD;AAAc,8BAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,oCAFJ;AAAA,6BAAeA,IAAf;AAAA;AAAA;AAAA;AAAA,kCADH;AARL;AAAA;AAAA;AAAA;AAAA,gCAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,8BAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BApCJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAlBJ,eA0FI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAAA,yCACI,QAAC,kBAAD;AACI,oBAAA,KAAK,EAAE1D,OADX;AAEI,oBAAA,QAAQ,EAAEC,UAFd;AAGI,oBAAA,QAAQ,EAAE2E,mBAHd;AAAA,8BAKK,CAAC;AAAC0B,sBAAAA,aAAD;AAAgBC,sBAAAA,WAAhB;AAA6BC,sBAAAA,sBAA7B;AAAqDC,sBAAAA;AAArD,qBAAD,kBACG;AAAA,8CACI,QAAC,SAAD;AAAW,wBAAA,OAAO,EAAC,UAAnB;AAA8B,wBAAA,QAAQ,EAAE,MAAMlG,eAAe,CAAC,KAAD,CAA7D;AAAsE,wBAAA,SAAS,EAAEkC,OAAO,CAACnE,WAAzF;AAAsG,wBAAA,QAAQ,MAA9G;AAAA,2BAAoHgI,aAAa,CAAC;AAC9HI,0BAAAA,KAAK,EAAE,SADuH;AAE9HC,0BAAAA,WAAW,EAAE;AAFiH,yBAAD;AAAjI;AAAA;AAAA;AAAA;AAAA,8BADJ,eAKI;AAAA,mCACKF,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAH,GAA8B,IAD1C,EAGKF,WAAW,CAACH,GAAZ,CAAgB,CAACQ,UAAD,EAAaC,CAAb,KAAmB;AAChC,gCAAM5J,KAAK,GAAG;AACV6J,4BAAAA,eAAe,EAAEF,UAAU,CAACG,MAAX,GAAoBlL,MAAM,CAACmL,KAA3B,GAAmC;AAD1C,2BAAd;AAGA,8CACI,oBAAiBR,sBAAsB,CAACI,UAAD,EAAa;AAAC3J,8BAAAA;AAAD,6BAAb,CAAvC;AAAA,sCACK2J,UAAU,CAACK;AADhB,6BAAUJ,CAAV;AAAA;AAAA;AAAA;AAAA,kCADJ;AAKH,yBATA,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,8BALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBA1FJ,eAwHI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAAA,0CACI,QAAC,WAAD;AAAa,oBAAA,OAAO,EAAC,UAArB;AAAgC,oBAAA,SAAS,EAAEpE,OAAO,CAACnE,WAAnD;AAAgE,oBAAA,QAAQ,EAAE,IAA1E;AACa,oBAAA,OAAO,EAAE,CADtB;AAAA,2CAEI,QAAC,SAAD;AACI,sBAAA,SAAS,EAAEmE,OAAO,CAACnE,WADvB;AAEI,sBAAA,EAAE,EAAC,SAFP;AAGI,sBAAA,KAAK,EAAC,mBAHV;AAII,sBAAA,QAAQ,MAJZ;AAKI,sBAAA,KAAK,EAAEuD,OALX;AAMI,sBAAA,QAAQ,EAAEoE,CAAC,IAAKnE,UAAU,CAACmE,CAAC,CAACvB,MAAF,CAASC,KAAV,CAN9B;AAOI,sBAAA,OAAO,EAAC;AAPZ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,0BADJ,eAaI,QAAC,WAAD;AAAa,oBAAA,OAAO,EAAC,UAArB;AAAgC,oBAAA,SAAS,EAAElC,OAAO,CAACnE,WAAnD;AAAgE,oBAAA,QAAQ,EAAE,IAA1E;AACa,oBAAA,OAAO,EAAE,CADtB;AAAA,2CAEI,QAAC,SAAD;AACI,sBAAA,SAAS,EAAEmE,OAAO,CAACnE,WADvB;AAEI,sBAAA,EAAE,EAAC,QAFP;AAGI,sBAAA,KAAK,EAAC,OAHV;AAII,sBAAA,QAAQ,MAJZ;AAKI,sBAAA,KAAK,EAAE2D,KALX;AAMI,sBAAA,IAAI,EAAC,OANT;AAOI,sBAAA,QAAQ,EAAE,UAASgE,CAAT,EAAW;AACjB/D,wBAAAA,QAAQ,CAAC+D,CAAC,CAACvB,MAAF,CAASC,KAAV,CAAR;AACAO,wBAAAA,oBAAoB,CAACe,CAAC,CAACvB,MAAF,CAASC,KAAV,CAApB;AACH,uBAVL;AAWI,sBAAA,OAAO,EAAC;AAXZ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,0BAbJ,eA6BI,QAAC,WAAD;AAAa,oBAAA,OAAO,EAAC,UAArB;AAAgC,oBAAA,SAAS,EAAElC,OAAO,CAACnE,WAAnD;AAAgE,oBAAA,QAAQ,EAAE,IAA1E;AACa,oBAAA,OAAO,EAAE,CADtB;AAAA,2CAEI,QAAC,SAAD;AACI,sBAAA,SAAS,EAAEmE,OAAO,CAACnE,WADvB;AAEI,sBAAA,EAAE,EAAC,OAFP;AAGI,sBAAA,KAAK,EAAC,iBAHV;AAII,sBAAA,IAAI,EAAC,KAJT;AAKI,sBAAA,QAAQ,MALZ;AAMI,sBAAA,KAAK,EAAEyD,KANX;AAOI,sBAAA,QAAQ,EAAEkE,CAAC,IAAKjE,QAAQ,CAACiE,CAAC,CAACvB,MAAF,CAASC,KAAV,CAP5B;AAQI,sBAAA,OAAO,EAAC;AARZ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,0BA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAxHJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAqKI,QAAC,IAAD;AAAM,gBAAA,SAAS,MAAf;AAAgB,gBAAA,IAAI,MAApB;AAAqB,gBAAA,EAAE,EAAE,EAAzB;AAA6B,gBAAA,OAAO,EAAE,CAAtC;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE;AAAvB;AAAA;AAAA;AAAA;AAAA,wBADJ,eAGI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE;AAAvB;AAAA;AAAA;AAAA;AAAA,wBAHJ,eAKI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAAA,6BACCvF,SAAS,gBAAG,QAAC,KAAD;AAAO,oBAAA,QAAQ,EAAC,OAAhB;AAAwB,oBAAA,SAAS,MAAjC;AAAA,8BAAmCA;AAAnC;AAAA;AAAA;AAAA;AAAA,0BAAH,gBAA2D,qCADrE,EAECE,iBAAiB,gBAAG,QAAC,KAAD;AAAO,oBAAA,QAAQ,EAAC,OAAhB;AAAA,8BAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,0BAAH,gBAAyD,qCAF3E,EAIIgB,YAAY,KAAK,KAAjB,IAA0Bd,QAAQ,KAAK,IAAvC,gBACI,QAAC,KAAD;AAAO,oBAAA,QAAQ,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,gBAC6D,qCALjE;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ,eAaI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAAA,yCACI,QAAC,MAAD;AAAQ,oBAAA,IAAI,EAAC,QAAb;AAAsB,oBAAA,OAAO,EAAC,WAA9B;AAA0C,oBAAA,KAAK,EAAE;AAACsH,sBAAAA,eAAe,EAAEjL,MAAM,CAACqL;AAAzB,qBAAjD;AACQ,oBAAA,SAAS,MADjB;AACkB,oBAAA,SAAS,EAAEzE,OAAO,CAACpE,SADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBArKJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,gBAAP;AAoMA;;AACJ,WAAK,CAAL;AACI,4BAAO,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAA,iCACH;AAAM,YAAA,SAAS,EAAEoE,OAAO,CAACuD,IAAzB;AAA+B,YAAA,QAAQ,EAAEJ,oBAAzC;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,OAAO,EAAE,CAAzB;AAAA,sCACI,QAAC,IAAD;AAAM,gBAAA,SAAS,MAAf;AAAgB,gBAAA,IAAI,MAApB;AAAqB,gBAAA,EAAE,EAAE,EAAzB;AAA6B,gBAAA,OAAO,EAAE,CAAtC;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,CAAf;AAAkB,kBAAA,EAAE,EAAE,CAAtB;AAAyB,kBAAA,EAAE,EAAE,EAA7B;AAAA,yCACI,QAAC,WAAD;AAAa,oBAAA,OAAO,EAAC,UAArB;AAAgC,oBAAA,SAAS,EAAEnD,OAAO,CAAC/D,eAAnD;AAAoE,oBAAA,QAAQ,EAAE,IAA9E;AACa,oBAAA,OAAO,EAAE,CADtB;AACyB,oBAAA,EAAE,EAAE,CAD7B;AAAA,2CAEI,QAAC,SAAD;AAAW,sBAAA,OAAO,EAAC,UAAnB;AAA8B,sBAAA,MAAM,EAAC,QAArC;AAA8C,sBAAA,QAAQ,MAAtD;AAAuD,sBAAA,SAAS,MAAhE;AAAiE,sBAAA,IAAI,EAAC,UAAtE;AAAiF,sBAAA,IAAI,EAAC,SAAtF;AAAgG,sBAAA,EAAE,EAAE,EAApG;AAAwG,sBAAA,EAAE,EAAE,EAA5G;AAAgH,sBAAA,EAAE,EAAE,EAApH;AACW,sBAAA,EAAE,EAAC,SADd;AACwB,sBAAA,KAAK,EAAC,qBAD9B;AACoD,sBAAA,QAAQ,EAAEuH,CAAC,IAAI7D,cAAc,CAAC6D,CAAC,CAACvB,MAAF,CAASC,KAAV,CADjF;AAEW,sBAAA,KAAK,EAAExC;AAFlB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eASI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,CAAf;AAAkB,kBAAA,EAAE,EAAE,CAAtB;AAAyB,kBAAA,EAAE,EAAE,EAA7B;AAAA,0CACI,QAAC,WAAD;AAAa,oBAAA,OAAO,EAAC,UAArB;AAAgC,oBAAA,SAAS,EAAEM,OAAO,CAAC/D,eAAnD;AAAoE,oBAAA,QAAQ,EAAE,IAA9E;AAAoF,oBAAA,OAAO,EAAE,CAA7F;AAAA,2CACI,QAAC,SAAD;AAAW,sBAAA,OAAO,EAAC,UAAnB;AAA8B,sBAAA,MAAM,EAAC,QAArC;AAA8C,sBAAA,QAAQ,MAAtD;AAAuD,sBAAA,SAAS,MAAhE;AAAiE,sBAAA,IAAI,EAAC,UAAtE;AAAiF,sBAAA,IAAI,EAAC,OAAtF;AACW,sBAAA,EAAE,EAAC,WADd;AAC0B,sBAAA,KAAK,EAAC,sBADhC;AACuD,sBAAA,QAAQ,EAAEuH,CAAC,IAAI3D,YAAY,CAAC2D,CAAC,CAACvB,MAAF,CAASC,KAAV,CADlF;AAEW,sBAAA,KAAK,EAAEtC;AAFlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BADJ,eAMI,QAAC,WAAD;AAAa,oBAAA,OAAO,EAAC,UAArB;AAAgC,oBAAA,SAAS,EAAEI,OAAO,CAAC/D,eAAnD;AAAoE,oBAAA,QAAQ,EAAE,IAA9E;AAAoF,oBAAA,OAAO,EAAE,CAA7F;AAAgG,oBAAA,EAAE,EAAE,CAApG;AAAA,2CACI,QAAC,SAAD;AAAW,sBAAA,OAAO,EAAC,UAAnB;AAA8B,sBAAA,MAAM,EAAC,QAArC;AAA8C,sBAAA,QAAQ,MAAtD;AAAuD,sBAAA,SAAS,MAAhE;AAAiE,sBAAA,IAAI,EAAC,UAAtE;AAAiF,sBAAA,IAAI,EAAC,OAAtF;AACW,sBAAA,EAAE,EAAC,WADd;AAC0B,sBAAA,KAAK,EAAC,mCADhC;AACoE,sBAAA,QAAQ,EAAEuH,CAAC,IAAIzD,YAAY,CAACyD,CAAC,CAACvB,MAAF,CAASC,KAAV,CAD/F;AAEW,sBAAA,KAAK,EAAEpC;AAFlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BANJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAuBI,QAAC,IAAD;AAAM,gBAAA,SAAS,MAAf;AAAgB,gBAAA,IAAI,MAApB;AAAqB,gBAAA,EAAE,EAAE,EAAzB;AAA6B,gBAAA,OAAO,EAAE,CAAtC;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE;AAAvB;AAAA;AAAA;AAAA;AAAA,wBADJ,eAGI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE;AAAvB;AAAA;AAAA;AAAA;AAAA,wBAHJ,eAKI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAAA,6BACKrD,KAAK,gBAAG,QAAC,KAAD;AAAO,oBAAA,QAAQ,EAAC,OAAhB;AAAA,8BAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,0BAAH,gBAA6C,qCADvD,EAEKE,SAAS,gBAAG,QAAC,KAAD;AAAO,oBAAA,QAAQ,EAAC,OAAhB;AAAwB,oBAAA,SAAS,MAAjC;AAAA,8BAAmCA;AAAnC;AAAA;AAAA;AAAA;AAAA,0BAAH,gBAA2D,qCAFzE,EAGKE,iBAAiB,gBAAG,QAAC,KAAD;AAAO,oBAAA,QAAQ,EAAC,OAAhB;AAAA,8BAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,0BAAH,gBAAyD,qCAH/E,EAKQgB,YAAY,KAAK,KAAjB,IAA0Bd,QAAQ,KAAK,IAAvC,gBACI,QAAC,KAAD;AAAO,oBAAA,QAAQ,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,gBAC6D,qCANrE;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ,eAcI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAAA,yCACI,QAAC,MAAD;AAAQ,oBAAA,IAAI,EAAC,QAAb;AAAsB,oBAAA,OAAO,EAAC,WAA9B;AAA0C,oBAAA,KAAK,EAAE;AAACsH,sBAAAA,eAAe,EAAEjL,MAAM,CAACqL;AAAzB,qBAAjD;AACQ,oBAAA,SAAS,EAAEzE,OAAO,CAACpE,SAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eA8CI,QAAC,QAAD;AAAU,cAAA,IAAI,EAAEW,SAAhB;AAA2B,cAAA,gBAAgB,EAAE,IAA7C;AAAmD,cAAA,YAAY,EAAE;AAAC1B,gBAAAA,QAAQ,EAAE,KAAX;AAAkBC,gBAAAA,UAAU,EAAE;AAA9B,eAAjE;AACU,cAAA,OAAO,EAAE,MAAM0B,YAAY,CAAC,KAAD,CADrC;AAAA,qCAEI,QAAC,KAAD;AAAO,gBAAA,QAAQ,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,oBA9CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,gBAAP;AAqDA;AAtUR;AAwUH;;AAED,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAA4B,QAAA,OAAO,EAAC,QAApC;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAEwD,OAAO,CAAC7E,GAA3B;AAAgC,YAAA,OAAO,EAAC,WAAxC;AACQ,YAAA,KAAK,EAAEkB,MAAM,KAAK,CAAX,GAAe;AAACgI,cAAAA,eAAe,EAAEjL,MAAM,CAACmL;AAAzB,aAAf,GAAiD;AAACF,cAAAA,eAAe,EAAEjL,MAAM,CAACsL;AAAzB,aADhE;AAEQ,YAAA,OAAO,EAAE,UAASlB,CAAT,EAAW;AAChBvD,cAAAA,kBAAkB;AAClB3D,cAAAA,SAAS,CAAC,CAAD,CAAT;AACH,aALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAE0D,OAAO,CAAC7E,GAA3B;AAAgC,YAAA,OAAO,EAAC,WAAxC;AACQ,YAAA,KAAK,EAAEkB,MAAM,KAAK,CAAX,GAAe;AAACgI,cAAAA,eAAe,EAAEjL,MAAM,CAACmL;AAAzB,aAAf,GAAiD;AAACF,cAAAA,eAAe,EAAEjL,MAAM,CAACsL;AAAzB,aADhE;AAEQ,YAAA,OAAO,EAAE,UAASlB,CAAT,EAAY;AACjBvD,cAAAA,kBAAkB;AAClB3D,cAAAA,SAAS,CAAC,CAAD,CAAT;AACH,aALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBATJ,eAiBI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAE0D,OAAO,CAAC7E,GAA3B;AAAgC,YAAA,OAAO,EAAC,WAAxC;AACQ,YAAA,KAAK,EAAEkB,MAAM,KAAK,CAAX,GAAe;AAACgI,cAAAA,eAAe,EAAEjL,MAAM,CAACmL;AAAzB,aAAf,GAAiD;AAACF,cAAAA,eAAe,EAAEjL,MAAM,CAACsL;AAAzB,aADhE;AAEQ,YAAA,OAAO,EAAE,UAASlB,CAAT,EAAY;AACjBvD,cAAAA,kBAAkB;AAClB3D,cAAAA,SAAS,CAAC,CAAD,CAAT;AACH,aALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eA4BI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,kBACKgH,cAAc;AADnB;AAAA;AAAA;AAAA;AAAA,cA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH;;GAtvBQlH,W;UAgCWrB,S;;;KAhCXqB,W;AAwvBT,eAAeA,WAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {makeStyles} from \"@material-ui/core\";\nimport {Header, Title} from \"../components\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport {colors} from \"../themes/colors\";\nimport misterCoockyApi from \"../constante/apiUrl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport PlacesAutocomplete, {geocodeByAddress, getLatLng} from \"react-places-autocomplete\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: 300,\n            maxWidth: 50\n        }\n    },\n    // Show dropdow at bottom of select\n    getContentAnchorEl: null,\n    anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n    }\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    btn: {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        width: '100%',\n        height: '0px',\n    },\n    btnSubmit: {\n        padding: theme.spacing(1),\n        color: \"#000\",\n        width: 140,\n    },\n    formControl: {\n        margin: theme.spacing.unit,\n        minWidth: 120,\n        maxWidth: 300\n    },\n    formControlPass: {\n        width:300,\n        margin: theme.spacing.unit,\n    },\n    grid: {\n        marginTop:'10px'\n    }\n}));\n\nfunction UserProfile() {\n    const[pageId, setPageId]= useState(0);\n    const[dataSaved, setDataSaved]= useState(false);\n    const [alert, setAlert] = useState(\"\");    //message d'alerte au niveau du mot de passe\n    const [alertMail, setAlertMail] = useState(\"\");    //message d'alerte au niveau de l'adresse mail\n    const [alertOrganization, setAlertOrganization] = useState(\"\");    //message d'alerte au niveau de l'organisation\n    const [submited, setSubmited] = useState(false);\n\n    const[userPro, setUserPro]= useState(\"\");\n    const[nomOrga, setNomOrga]= useState(\"\");\n    const[nomFournisseur, setNomFournisseur]= useState(\"\");\n    const[adresse, setAdresse]= useState(\"\");\n    const [coordinates, setCoordinates] = React.useState({ lat: null, lng: null });\n    const [validAdresse, setValidAdresse] = useState(true);\n    const[typesOrga, setTypesOrga]= useState();\n    const[typesOffres, setTypesOffres]= useState();\n    const [estArtisan, setEstArtisan] = useState(false);\n    const [estMagasinSpe, setEstMagasinSpe] = useState(false);\n    const [estMagasinGen, setEstMagasinGen] = useState(false);\n    const [estAsso, setEstAsso] = useState(false);\n    const [estMarque, setEstMarque] = useState(false);\n    const [estAlim, setEstAlim] = useState(false);\n    const [estAccess, setEstAccess] = useState(false);\n    const [nomsServicesCHoisis, setNomsServicesCHoisis] = useState([]);\n    const nomsServices = ['Cession d\\'animaux(don, échange, vente)'];\n    const[nomUser, setNomUser]= useState(\"\");\n    const[phone, setPhone]= useState(\"\");\n    const[email, setEmail]= useState(\"\");\n    const[oldPassword, setOldPassword]= useState(\"\");\n    const[password1, setPassword1]= useState(\"\");\n    const[password2, setPassword2]= useState(\"\");\n\n    const classes = useStyles();\n\n    function getUserProfileData() {\n        fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                query: `\n                    query{​​​​​​​\n                        userPro(id:\"${localStorage.getItem('userId')}\"){​​​​​​​\n                            organization{\n                                name\n                                supplier{\n                                    name\n                                }\n                                postalAddress{\n                                    street\n                                    geoLocation{\n                                        latitude\n                                        longitude\n                                    }\n                                }\n                            }\n                            user{\n                                name\n                                email\n                                phoneNumber\n                            }\n                        }​​​​​​​\n                    }`,\n            }),\n        })\n            .then((res) => res.json())\n            .then(function (result) {\n                setUserPro(result.data.userPro);\n                setNomOrga(result.data.userPro.organization.name);\n                setAdresse(result.data.userPro.organization.postalAddress.street);\n                setCoordinates({lat: result.data.userPro.organization.postalAddress.geoLocation.latitude, lng: result.data.userPro.organization.postalAddress.geoLocation.longitude});\n                setNomFournisseur(result.data.userPro.organization.supplier.name);\n                setNomUser(result.data.userPro.user.name);\n                setPhone(result.data.userPro.user.phoneNumber);\n                setEmail(result.data.userPro.user.email);;\n                fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        query: `\n                            query{​​​​​​​\n                                getTypesOrganizationByName(name: \"${result.data.userPro.organization.name}\")\n                            }`,\n                    }),\n                })\n                    .then((res) => res.json())\n                    .then(function (result) {\n                        result.data.getTypesOrganizationByName.forEach(type => {\n                            if (type === \"Artisan\"){\n                                setEstArtisan(true)\n                            }\n                            if (type === \"Magasin spécialisé\"){\n                                setEstMagasinSpe(true)\n                            }\n                            if (type === \"Magasin généraliste\"){\n                                setEstMagasinGen(true)\n                            }\n                            if (type === \"Association\"){\n                                setEstAsso(true)\n                            }\n                            if (type === \"Marque\"){\n                                setEstMarque(true)\n                            }\n                        });\n                        setTypesOrga(result.data.getTypesOrganizationByName.join(', '))\n                    });\n                    fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        body: JSON.stringify({\n                            query: `\n                                query{​​​​​​​\n                                    getOffersOrganizationByName(name: \"${result.data.userPro.organization.name}\")\n                                }`,\n                        }),\n                    })\n                    .then((res) => res.json())\n                    .then(function (result) {\n                        result.data.getOffersOrganizationByName.forEach(type => {\n                            if (type === \"Alimentation\"){\n                                setEstAlim(true)\n                            }\n                            if (type === \"Accessoire\"){\n                                setEstAccess(true)\n                            }\n                        });\n                        setTypesOffres(result.data.getOffersOrganizationByName.join(', '))\n                    })\n            });\n    }\n\n    useEffect(() => {\n        getUserProfileData();\n    }, []);\n\n    const handleChange = (event) => {\n        setNomsServicesCHoisis(event.target.value);\n    };\n\n    const handleAddressSelect = async value => {\n        const results = await geocodeByAddress(value);\n        const latLng = await getLatLng(results[0]);\n        setAdresse(value);\n        setCoordinates(latLng);\n        setValidAdresse(true)\n    };\n\n    function checkAvailableOrganization(orga){\n        fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                query: `\n                    query{​​​​​​​\n                        existsOrganizationByName(name:\"${orga}\")​​​​​​​\n                    }`,\n            }),\n        })\n            .then((res) => res.json())\n            .then(function (result) {\n                if (result.data.existsOrganizationByName === false) {\n                    setAlertOrganization(\"\");\n                } else {\n                    setAlertOrganization(\"Nom d'organisation déjà utilisé!\");\n                }\n            });\n    }\n    function checkAvailableAdress(mail){\n        fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                query: `\n                    query{​​​​​​​\n                        getMail(mail:\"${mail}\"){​​​​​​​\n                            id\n                        }​​​​​​​\n                    }`,\n            }),\n        })\n            .then((res) => res.json())\n            .then(function (result) {\n                if (result.data.getMail !== null) {\n                    setAlertMail(\"Email déjà utilisé!\");\n                }else {\n                    setAlertMail(\"\");\n                }\n            });\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n            if(validAdresse === true && alertOrganization===\"\" && alertMail===\"\") {\n                setSubmited(true);\n                let typesOrga = [];\n                if (estArtisan === true) {\n                    typesOrga.push(\"Artisan\")\n                }\n                if (estMagasinSpe === true) {\n                    typesOrga.push(\"Magasin spécialisé\")\n                }\n                if (estMagasinGen === true) {\n                    typesOrga.push(\"Magasin généraliste\")\n                }\n                if (estAsso === true) {\n                    typesOrga.push(\"Association\")\n                }\n                if (estMarque === true) {\n                    typesOrga.push(\"Marque\")\n                }\n                let typeOffre = [];\n                if (estAlim === true) {\n                    typeOffre.push(\"Alimentation\")\n                }\n                if (estAccess === true) {\n                    typeOffre.push(\"Accessoire\")\n                }\n                typeOffre.concat(nomsServicesCHoisis);\n                fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        query: `\n                        mutation($userProId: String, $organization: OrganizationInput!, $adress:AdressInput!, $user:UserIntput!){\n                            updateUserPro(userProId: $userProId, organization: $organization,  adress:$adress, user:$user)\n                            {​​​​​​\n                                id\n                                organization{\n                                    name\n                                }\n                                user{\n                                    name\n                                }\n                            }​​​​​​​\n                        }`,\n                        variables: {\n                            \"userProId\": localStorage.getItem(\"userId\"),\n                            \"organization\": {\n                                \"name\": nomOrga,\n                                \"orgas\": typesOrga,\n                                \"offers\": typeOffre\n                            },\n                            \"adress\": {\n                                \"street\": adresse,\n                                \"geoLocation\": {\n                                    \"latitude\": coordinates.lat,\n                                    \"longitude\": coordinates.lng\n                                }\n                            },\n                            \"user\": {\n                                \"name\": nomUser,\n                                \"email\": email,\n                                \"phone\": phone,\n                                \"password\": oldPassword\n                            }\n                        },\n                    }),\n                })\n                    .then((res) => res.json())\n                    .then(function (result) {\n                        if (result.data.saveUserPro !== []) {\n                            setDataSaved(true)\n                        }\n                    });\n            }\n\n    }\n    function handleSubmitPassword(event){\n        event.preventDefault();\n        if (password1 === password2 && password1.length >= 5) {\n            setAlert(\"\");\n            fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    query: `\n                        query{\n                            matchPassword(password:\"${oldPassword}\", userProId: \"${localStorage.getItem('userId')}\")\n                        }​​​​\n                    `,\n                }),\n            })\n            .then((res) => res.json())\n            .then(function (result) {\n                if(result.data.matchPassword === true){\n                    setDataSaved(true)\n\n                    if(validAdresse === true && alertOrganization===\"\" && alertMail===\"\") {\n                        setSubmited(true);\n                        let typesOrga = [];\n                        if (estArtisan === true) {\n                            typesOrga.push(\"Artisan\")\n                        }\n                        if (estMagasinSpe === true) {\n                            typesOrga.push(\"Magasin spécialisé\")\n                        }\n                        if (estMagasinGen === true) {\n                            typesOrga.push(\"Magasin généraliste\")\n                        }\n                        if (estAsso === true) {\n                            typesOrga.push(\"Association\")\n                        }\n                        if (estMarque === true) {\n                            typesOrga.push(\"Marque\")\n                        }\n                        let typeOffre = [];\n                        if (estAlim === true) {\n                            typeOffre.push(\"Alimentation\")\n                        }\n                        if (estAccess === true) {\n                            typeOffre.push(\"Accessoire\")\n                        }\n                        typeOffre.concat(nomsServicesCHoisis);\n                        fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json',\n                            },\n                            body: JSON.stringify({\n                                query: `\n                        mutation($userProId: String, $organization: OrganizationInput!, $adress:AdressInput!, $user:UserIntput!){\n                            updateUserPro(userProId: $userProId, organization: $organization,  adress:$adress, user:$user)\n                            {​​​​​​\n                                id\n                                organization{\n                                    name\n                                }\n                                user{\n                                    name\n                                }\n                            }​​​​​​​\n                        }`,\n                                variables: {\n                                    \"userProId\": localStorage.getItem(\"userId\"),\n                                    \"organization\": {\n                                        \"name\": nomOrga,\n                                        \"orgas\": typesOrga,\n                                        \"offers\": typeOffre\n                                    },\n                                    \"adress\": {\n                                        \"street\": adresse,\n                                        \"geoLocation\": {\n                                            \"latitude\": coordinates.lat,\n                                            \"longitude\": coordinates.lng\n                                        }\n                                    },\n                                    \"user\": {\n                                        \"name\": nomUser,\n                                        \"email\": email,\n                                        \"phone\": phone,\n                                        \"password\": password1\n                                    }\n                                },\n                            }),\n                        })\n                            .then((res) => res.json())\n                            .then(function (result) {\n                                if (result.data.saveUserPro !== []) {\n                                    setDataSaved(true)\n                                }\n                            });\n                    }\n\n\n\n                }else{\n                    setAlert(\"Ancien mot de passe incorrect\")\n                }\n            });\n\n        } else if (password1.length < 5) {\n            setAlert(\"La longueur des mots de passe doit excéder 5 caractères\")\n        } else if (password1 !== password2) {\n            setAlert(\"Mots de passe différents.\")\n        }\n    }\n    function getPageContent() {\n        switch (pageId) {\n            case 0:\n                return <Box mt={10}>\n                    {\n                        userPro ?\n                        <div>\n                            <Container>\n                                <h3>Organisation</h3>\n                                <Box ml={3}>\n                                    <Grid container className={classes.grid} >\n                                        <Grid item xs={6} sm={3}>\n                                            Nom\n                                        </Grid>\n                                        <Grid item xs={6} sm={3}>\n                                            {userPro.organization.name}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container className={classes.grid}>\n                                        <Grid item xs={6} sm={3}>\n                                            Types d'organisation\n                                        </Grid>\n                                        <Grid item xs={6} sm={3}>\n                                            {typesOrga}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container className={classes.grid}>\n                                        <Grid item xs={6} sm={3}>\n                                            Offres\n                                        </Grid>\n                                        <Grid item xs={6} sm={3}>\n                                            {typesOffres}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container className={classes.grid}>\n                                        <Grid item xs={6} sm={3}>\n                                            Adresse Postale\n                                        </Grid>\n                                        <Grid item xs={6} sm={6}>\n                                            {userPro.organization.postalAddress.street}\n                                        </Grid>\n                                    </Grid>\n                                </Box>\n                                <h3>Utilisateur</h3>\n                                <Box ml={3}>\n                                    <Grid container className={classes.grid}>\n                                        <Grid item xs={6} sm={3}>\n                                            Nom\n                                        </Grid>\n                                        <Grid item xs={6} sm={3}>\n                                            {userPro.user.name}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container className={classes.grid}>\n                                        <Grid item xs={6} sm={3}>\n                                            Téléphone\n                                        </Grid>\n                                        <Grid item xs={6} sm={3}>\n                                            {userPro.user.phoneNumber}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container className={classes.grid}>\n                                        <Grid item xs={6} sm={3}>\n                                            Email\n                                        </Grid>\n                                        <Grid item xs={6} sm={3}>\n                                            {userPro.user.email}\n                                        </Grid>\n                                    </Grid>\n                                </Box>\n                            </Container>\n                        </div> : null\n                    }\n                </Box>;\n                break;\n            case 1:\n                return <Box mt={10}>\n                    <form className={classes.form} onSubmit={handleSubmit}>\n                        {\n                            <Snackbar open={dataSaved} autoHideDuration={6000} anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}\n                                      onClose={() => setDataSaved(false)}>\n                                <Alert severity=\"success\">Informations enrengistrées</Alert>\n                            </Snackbar>\n                        }\n                        <Grid container spacing={1}>\n                            <Grid container item xs={12} spacing={2}>\n                                <Grid item xs={12} sm={3}>\n                                    <FormControl variant=\"outlined\" className={classes.formControl} required={true}\n                                                 spacing={3}>\n                                        <TextField\n                                        className={classes.formControl}\n                                        id=\"nomOrga\"\n                                        label=\"Nom de l'enseigne\"\n                                        value={nomOrga}\n                                        required\n                                        onChange={function(e){\n                                            setNomOrga(e.target.value);\n                                            checkAvailableOrganization(e.target.value);\n                                        }}\n                                        variant=\"outlined\"\n                                    />\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12} sm={3}>\n                                    <FormControl component=\"fieldset\" className={classes.formControl} required={true}>\n                                        <FormLabel component=\"legend\">Type de l'enseigne</FormLabel>\n                                        <FormGroup>\n                                            <FormControlLabel\n                                                control={<Checkbox checked={estArtisan}\n                                                                   onChange={e => (setEstArtisan(e.target.checked))}\n                                                                   name=\"estArtisan\" color=\"default\"/>}\n                                                label=\"Artisan\"\n                                            />\n                                            <FormControlLabel\n                                                control={<Checkbox checked={estMagasinSpe}\n                                                                   onChange={e => (setEstMagasinSpe(e.target.checked))}\n                                                                   name=\"estMagasinSpe\" color=\"default\"/>}\n                                                label=\"Magasin spécialisé\"\n                                            />\n                                            <FormControlLabel\n                                                control={<Checkbox checked={estMagasinGen}\n                                                                   onChange={e => (setEstMagasinGen(e.target.checked))}\n                                                                   name=\"estMagasinGen\" color=\"default\"/>}\n                                                label=\"Magasin généraliste\"\n                                            />\n                                            <FormControlLabel\n                                                control={<Checkbox checked={estAsso}\n                                                                   onChange={e => (setEstAsso(e.target.checked))} name=\"estAsso\"\n                                                                   color=\"default\"/>}\n                                                label=\"Association\"\n                                            />\n                                            <FormControlLabel\n                                                control={<Checkbox checked={estMarque}\n                                                                   onChange={e => (setEstMarque(e.target.checked))}\n                                                                   name=\"estMarque\" color=\"default\"/>}\n                                                label=\"Marque\"\n                                            />\n                                        </FormGroup>\n                                    </FormControl>\n                                    <FormControl required component=\"fieldset\" className={classes.formControl}>\n                                        <FormLabel component=\"legend\">Type de l'offre</FormLabel>\n                                        <FormGroup>\n                                            <FormControlLabel\n                                                control={<Checkbox checked={estAlim}\n                                                                   onChange={e => (setEstAlim(e.target.checked))}\n                                                                   name=\"Alimentation\" color=\"default\"/>}\n                                                label=\"Alimentation\"\n                                            />\n                                            <FormControlLabel\n                                                control={<Checkbox checked={estAccess}\n                                                                   onChange={e => (setEstAccess(e.target.checked))}\n                                                                   name=\"Accessoire\" color=\"default\"/>}\n                                                label=\"Accessoire\"\n                                            />\n                                            <FormControl >\n                                                <InputLabel>Services</InputLabel>\n                                                <Select\n                                                    multiple\n                                                    value={nomsServicesCHoisis}\n                                                    onChange={handleChange}\n                                                    input={<Input id=\"select-multiple-checkbox\"/>}\n                                                    renderValue={selected => selected.join(\", \")}\n                                                    MenuProps={MenuProps}\n                                                >\n                                                    {nomsServices.map((name) => (\n                                                        <MenuItem key={name} value={name}>\n                                                            <Checkbox checked={nomsServicesCHoisis.indexOf(name) > -1} />\n                                                            <ListItemText primary={name}/>\n                                                        </MenuItem>\n                                                    ))}\n                                                </Select>\n                                            </FormControl>\n                                        </FormGroup>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12} sm={3}>\n                                    <PlacesAutocomplete\n                                        value={adresse}\n                                        onChange={setAdresse}\n                                        onSelect={handleAddressSelect}\n                                    >\n                                        {({getInputProps, suggestions, getSuggestionItemProps, loading}) => (\n                                            <div>\n                                                <TextField variant=\"outlined\" onChange={() => setValidAdresse(false)} className={classes.formControl} required  {...getInputProps({\n                                                    label: \"Adresse\",\n                                                    placeholder: \"Entrez l'adresse\",\n                                                })} />\n                                                <div>\n                                                    {loading ? <div>Chargement...</div> : null}\n\n                                                    {suggestions.map((suggestion, i) => {\n                                                        const style = {\n                                                            backgroundColor: suggestion.active ? colors.brown : \"#fafafa\"\n                                                        };\n                                                        return (\n                                                            <div key={i} {...getSuggestionItemProps(suggestion, {style})}>\n                                                                {suggestion.description}\n                                                            </div>\n                                                        );\n                                                    })}\n                                                </div>\n                                            </div>\n                                        )}\n                                    </PlacesAutocomplete>\n                                </Grid>\n                                <Grid item xs={12} sm={3}>\n                                    <FormControl variant=\"outlined\" className={classes.formControl} required={true}\n                                                 spacing={3}>\n                                        <TextField\n                                            className={classes.formControl}\n                                            id=\"nomUser\"\n                                            label=\"Nom d'utilisateur\"\n                                            required\n                                            value={nomUser}\n                                            onChange={e => (setNomUser(e.target.value))}\n                                            variant=\"outlined\"\n                                        />\n                                    </FormControl>\n                                    <FormControl variant=\"outlined\" className={classes.formControl} required={true}\n                                                 spacing={3}>\n                                        <TextField\n                                            className={classes.formControl}\n                                            id=\"idRace\"\n                                            label=\"Email\"\n                                            required\n                                            value={email}\n                                            type=\"email\"\n                                            onChange={function(e){\n                                                setEmail(e.target.value);\n                                                checkAvailableAdress(e.target.value);\n                                            }}\n                                            variant=\"outlined\"\n                                        />\n                                    </FormControl>\n                                    <FormControl variant=\"outlined\" className={classes.formControl} required={true}\n                                                 spacing={3}>\n                                        <TextField\n                                            className={classes.formControl}\n                                            id=\"phone\"\n                                            label=\"Téléphone\"\n                                            type=\"tel\"\n                                            required\n                                            value={phone}\n                                            onChange={e => (setPhone(e.target.value))}\n                                            variant=\"outlined\"\n                                        />\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                            <Grid container item xs={12} spacing={2}>\n                                <Grid item xs={12} sm={3}>\n                                </Grid>\n                                <Grid item xs={12} sm={3}>\n                                </Grid>\n                                <Grid item xs={12} sm={3}>\n                                {alertMail ? <Alert severity=\"error\" fullwidth>{alertMail}</Alert> : <></>}\n                                {alertOrganization ? <Alert severity=\"error\">{alertOrganization}</Alert> : <></>}\n                                {\n                                    validAdresse === false && submited === true ?\n                                        <Alert severity=\"error\" >Adresse non complétée</Alert> : <></>\n                                }\n                                </Grid>\n                                <Grid item xs={12} sm={3}>\n                                    <Button type=\"submit\" variant=\"contained\" style={{backgroundColor: colors.red}}\n                                            fullwidth className={classes.btnSubmit}>\n                                        Sauvegarder\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </Box>;\n                break;\n            case 2:\n                return <Box mt={10}>\n                    <form className={classes.form} onSubmit={handleSubmitPassword}>\n                        <Grid container spacing={1}>\n                            <Grid container item xs={12} spacing={2}>\n                                <Grid item lg={4} md={6} sm={12}>\n                                    <FormControl variant=\"outlined\" className={classes.formControlPass} required={true}\n                                                 spacing={3} xs={6}>\n                                        <TextField variant=\"outlined\" margin=\"normal\" required fullWidth type=\"password\" name=\"oldPass\" sm={12} md={12} xs={12}\n                                                   id=\"oldPswd\" label=\"Ancien mot de passe\" onChange={e => setOldPassword(e.target.value)}\n                                                   value={oldPassword}/>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item lg={6} md={6} sm={12}>\n                                    <FormControl variant=\"outlined\" className={classes.formControlPass} required={true} spacing={3} >\n                                        <TextField variant=\"outlined\" margin=\"normal\" required fullWidth type=\"password\" name=\"pass1\"\n                                                   id=\"password1\" label=\"Nouveau mot de passe\" onChange={e => setPassword1(e.target.value)}\n                                                   value={password1}/>\n                                    </FormControl>\n                                    <FormControl variant=\"outlined\" className={classes.formControlPass} required={true} spacing={3} xs={6}>\n                                        <TextField variant=\"outlined\" margin=\"normal\" required fullWidth type=\"password\" name=\"pass2\"\n                                                   id=\"password2\" label=\"Confirmer le nouveau mot de passe\" onChange={e => setPassword2(e.target.value)}\n                                                   value={password2}/>\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                            <Grid container item xs={12} spacing={2}>\n                                <Grid item xs={12} sm={3}>\n                                </Grid>\n                                <Grid item xs={12} sm={3}>\n                                </Grid>\n                                <Grid item xs={12} sm={3}>\n                                    {alert ? <Alert severity=\"error\">{alert}</Alert> : <></>}\n                                    {alertMail ? <Alert severity=\"error\" fullwidth>{alertMail}</Alert> : <></>}\n                                    {alertOrganization ? <Alert severity=\"error\">{alertOrganization}</Alert> : <></>}\n                                    {\n                                        validAdresse === false && submited === true ?\n                                            <Alert severity=\"error\" >Adresse non complétée</Alert> : <></>\n                                    }\n                                </Grid>\n                                <Grid item xs={12} sm={3}>\n                                    <Button type=\"submit\" variant=\"contained\" style={{backgroundColor: colors.red}}\n                                            className={classes.btnSubmit}>\n                                        Sauvegarder\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Snackbar open={dataSaved} autoHideDuration={6000} anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}\n                                  onClose={() => setDataSaved(false)}>\n                            <Alert severity=\"success\">Informations enrengistrées</Alert>\n                        </Snackbar>\n                    </form>\n                </Box>;\n                break;\n        }\n    }\n\n    return (\n        <div>\n            <Header/>\n            <Container>\n                <Title name={\"Profile\"}/>\n                <Grid container spacing={5} justify=\"center\">\n                    <Grid item xs={12} sm={3}>\n                        <Button className={classes.btn} variant=\"contained\"\n                                style={pageId === 0 ? {backgroundColor: colors.brown} : {backgroundColor: colors.grey}}\n                                onClick={function(e){\n                                    getUserProfileData()\n                                    setPageId(0)\n                                }}>Mon profil</Button>\n                    </Grid>\n                    <Grid item xs={12} sm={3}>\n                        <Button className={classes.btn} variant=\"contained\"\n                                style={pageId === 1 ? {backgroundColor: colors.brown} : {backgroundColor: colors.grey}}\n                                onClick={function(e) {\n                                    getUserProfileData()\n                                    setPageId(1)\n                                }}>Modifier mon profil</Button>\n                    </Grid>\n                    <Grid item xs={12} sm={3}>\n                        <Button className={classes.btn} variant=\"contained\"\n                                style={pageId === 2 ? {backgroundColor: colors.brown} : {backgroundColor: colors.grey}}\n                                onClick={function(e) {\n                                    getUserProfileData()\n                                    setPageId(2)\n                                }}>Modifier mon mot de passe</Button>\n                    </Grid>\n                </Grid>\n                <Box mt={5}>\n                    {getPageContent()}\n                </Box>\n            </Container>\n        </div>\n\n    )\n}\n\nexport default UserProfile\n"]},"metadata":{},"sourceType":"module"}