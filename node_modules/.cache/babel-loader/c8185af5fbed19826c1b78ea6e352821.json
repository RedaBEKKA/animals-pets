{"ast":null,"code":"var requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar toString = require('../internals/to-string');\n\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$'); // `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\n\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = toString(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};","map":{"version":3,"sources":["C:/Users/PC/Desktop/BigNova-Projects/BigNova-Pets Animals/animals-pets/node_modules/core-js-pure/internals/string-trim.js"],"names":["requireObjectCoercible","require","toString","whitespaces","whitespace","ltrim","RegExp","rtrim","createMethod","TYPE","$this","string","replace","module","exports","start","end","trim"],"mappings":"AAAA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,uCAAD,CAApC;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,0BAAD,CAAzB;;AAEA,IAAIG,UAAU,GAAG,MAAMD,WAAN,GAAoB,GAArC;AACA,IAAIE,KAAK,GAAGC,MAAM,CAAC,MAAMF,UAAN,GAAmBA,UAAnB,GAAgC,GAAjC,CAAlB;AACA,IAAIG,KAAK,GAAGD,MAAM,CAACF,UAAU,GAAGA,UAAb,GAA0B,IAA3B,CAAlB,C,CAEA;;AACA,IAAII,YAAY,GAAG,UAAUC,IAAV,EAAgB;AACjC,SAAO,UAAUC,KAAV,EAAiB;AACtB,QAAIC,MAAM,GAAGT,QAAQ,CAACF,sBAAsB,CAACU,KAAD,CAAvB,CAArB;AACA,QAAID,IAAI,GAAG,CAAX,EAAcE,MAAM,GAAGA,MAAM,CAACC,OAAP,CAAeP,KAAf,EAAsB,EAAtB,CAAT;AACd,QAAII,IAAI,GAAG,CAAX,EAAcE,MAAM,GAAGA,MAAM,CAACC,OAAP,CAAeL,KAAf,EAAsB,EAAtB,CAAT;AACd,WAAOI,MAAP;AACD,GALD;AAMD,CAPD;;AASAE,MAAM,CAACC,OAAP,GAAiB;AACf;AACA;AACAC,EAAAA,KAAK,EAAEP,YAAY,CAAC,CAAD,CAHJ;AAIf;AACA;AACAQ,EAAAA,GAAG,EAAER,YAAY,CAAC,CAAD,CANF;AAOf;AACA;AACAS,EAAAA,IAAI,EAAET,YAAY,CAAC,CAAD;AATH,CAAjB","sourcesContent":["var requireObjectCoercible = require('../internals/require-object-coercible');\r\nvar toString = require('../internals/to-string');\r\nvar whitespaces = require('../internals/whitespaces');\r\n\r\nvar whitespace = '[' + whitespaces + ']';\r\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\r\nvar rtrim = RegExp(whitespace + whitespace + '*$');\r\n\r\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\r\nvar createMethod = function (TYPE) {\r\n  return function ($this) {\r\n    var string = toString(requireObjectCoercible($this));\r\n    if (TYPE & 1) string = string.replace(ltrim, '');\r\n    if (TYPE & 2) string = string.replace(rtrim, '');\r\n    return string;\r\n  };\r\n};\r\n\r\nmodule.exports = {\r\n  // `String.prototype.{ trimLeft, trimStart }` methods\r\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\r\n  start: createMethod(1),\r\n  // `String.prototype.{ trimRight, trimEnd }` methods\r\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\r\n  end: createMethod(2),\r\n  // `String.prototype.trim` method\r\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\r\n  trim: createMethod(3)\r\n};\r\n"]},"metadata":{},"sourceType":"script"}