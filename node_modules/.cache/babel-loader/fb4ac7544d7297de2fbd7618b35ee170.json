{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport * as Yup from \"yup\";\nimport { fr } from \"yup-locales\";\nimport { setLocale } from \"yup\";\nimport { useState } from \"react\";\nimport misterCoockyApi from \"../../../constante/apiUrl\";\nsetLocale(fr);\nexport function useForgot() {\n  _s();\n\n  const [pageId, setPageId] = useState(1); //numéro de page du formulaire d'inscription (0,1,2)\n\n  const [alerPassowrd, setAlerPassowrd] = useState(\"\"); //message d'alerte au niveau de l'adresse mail\n\n  const ForgotValues = {\n    email: \"\",\n    password: \"\"\n  };\n  const lowercaseRegEx = /(?=.*[a-z])/;\n  const uppercaseRegEx = /(?=.*[A-Z])/;\n  const numericRegEx = /(?=.*[0-9])/;\n  const specialsRegEx = /[^A-Za-z 0-9]/g;\n  const emailRegex = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n  let RegsiterSchema = Yup.object().shape({\n    email: Yup.string().matches(emailRegex, \"Doit être un email valide !\").max(25, \"email est trop long - doit être de 15 caractères maximum.\").required(\"email est requis\").min(4, \"email est trop court - doit comporter au moins 4 caractères.\"),\n    password: Yup.string().max(15, \"Le mot de passe est trop long - doit être de 15 caractères maximum.\").min(4, \"Le mot de passe est trop court - doit comporter au moins 4 caractères.\").matches(lowercaseRegEx, \"Doit contenir des lettres minuscules !\").matches(uppercaseRegEx, \"Doit contenir des lettres majuscule !\").matches(numericRegEx, \"Doit contenir des chiffres !\").matches(specialsRegEx, \"Doit contenir un caractère spécial !\").required(\"Mot de passe requis\")\n  });\n\n  const onSubmit = () => {\n    setPageId(pageId + 1);\n  };\n\n  const onReturn = () => {\n    setPageId(pageId - 1);\n  };\n\n  return {\n    ForgotValues,\n    RegsiterSchema,\n    alerPassowrd,\n    pageId,\n    onReturn,\n    onSubmit\n  };\n}\n\n_s(useForgot, \"jh2PoMJ4YE4/vDU88lRXG3Ejg5o=\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/BigNova-Projects/BigNova-Pets Animals/ClonedFromGitHub/animals-pets/src/pages/ForgotPass/Hooks/useForgot.js"],"names":["Yup","fr","setLocale","useState","misterCoockyApi","useForgot","pageId","setPageId","alerPassowrd","setAlerPassowrd","ForgotValues","email","password","lowercaseRegEx","uppercaseRegEx","numericRegEx","specialsRegEx","emailRegex","RegsiterSchema","object","shape","string","matches","max","required","min","onSubmit","onReturn"],"mappings":";;AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,SAASC,EAAT,QAAmB,aAAnB;AACA,SAASC,SAAT,QAA0B,KAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AAEAF,SAAS,CAACD,EAAD,CAAT;AAEA,OAAO,SAASI,SAAT,GAAqB;AAAA;;AAC1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,CAAD,CAApC,CAD0B,CACe;;AACzC,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD,CAF0B,CAE4B;;AAEtD,QAAMO,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,EADY;AAEnBC,IAAAA,QAAQ,EAAC;AAFU,GAArB;AAKA,QAAMC,cAAc,GAAG,aAAvB;AACA,QAAMC,cAAc,GAAG,aAAvB;AACA,QAAMC,YAAY,GAAG,aAArB;AACA,QAAMC,aAAa,GAAG,gBAAtB;AACA,QAAMC,UAAU,GACd,gcADF;AAGA,MAAIC,cAAc,GAAGlB,GAAG,CAACmB,MAAJ,GAAaC,KAAb,CAAmB;AACtCT,IAAAA,KAAK,EAAEX,GAAG,CAACqB,MAAJ,GACJC,OADI,CACIL,UADJ,EACgB,6BADhB,EAEJM,GAFI,CAEA,EAFA,EAEI,2DAFJ,EAGJC,QAHI,CAGK,kBAHL,EAIJC,GAJI,CAIA,CAJA,EAIG,8DAJH,CAD+B;AAMtCb,IAAAA,QAAQ,EAAEZ,GAAG,CAACqB,MAAJ,GACPE,GADO,CAEN,EAFM,EAGN,qEAHM,EAKPE,GALO,CAMN,CANM,EAON,wEAPM,EASPH,OATO,CASCT,cATD,EASiB,wCATjB,EAUPS,OAVO,CAUCR,cAVD,EAUiB,uCAVjB,EAWPQ,OAXO,CAWCP,YAXD,EAWe,8BAXf,EAYPO,OAZO,CAYCN,aAZD,EAYgB,sCAZhB,EAcPQ,QAdO,CAcE,qBAdF;AAN4B,GAAnB,CAArB;;AAuBA,QAAME,QAAQ,GAAG,MAAM;AACrBnB,IAAAA,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT;AACD,GAFD;;AAGA,QAAMqB,QAAQ,GAAG,MAAM;AACrBpB,IAAAA,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT;AACD,GAFD;;AAGA,SAAO;AACLI,IAAAA,YADK;AAELQ,IAAAA,cAFK;AAGLV,IAAAA,YAHK;AAILF,IAAAA,MAJK;AAKLqB,IAAAA,QALK;AAMLD,IAAAA;AANK,GAAP;AAQD;;GArDerB,S","sourcesContent":["import * as Yup from \"yup\";\r\nimport { fr } from \"yup-locales\";\r\nimport { setLocale } from \"yup\";\r\nimport { useState } from \"react\";\r\nimport misterCoockyApi from \"../../../constante/apiUrl\";\r\n\r\nsetLocale(fr);\r\n\r\nexport function useForgot() {\r\n  const [pageId, setPageId] = useState(1); //numéro de page du formulaire d'inscription (0,1,2)\r\n  const [alerPassowrd, setAlerPassowrd] = useState(\"\"); //message d'alerte au niveau de l'adresse mail\r\n\r\n  const ForgotValues = {\r\n    email: \"\",\r\n    password:\"\"\r\n  };\r\n\r\n  const lowercaseRegEx = /(?=.*[a-z])/;\r\n  const uppercaseRegEx = /(?=.*[A-Z])/;\r\n  const numericRegEx = /(?=.*[0-9])/;\r\n  const specialsRegEx = /[^A-Za-z 0-9]/g;\r\n  const emailRegex =\r\n    /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\r\n\r\n  let RegsiterSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .matches(emailRegex, \"Doit être un email valide !\")\r\n      .max(25, \"email est trop long - doit être de 15 caractères maximum.\")\r\n      .required(\"email est requis\")\r\n      .min(4, \"email est trop court - doit comporter au moins 4 caractères.\"),\r\n    password: Yup.string()\r\n      .max(\r\n        15,\r\n        \"Le mot de passe est trop long - doit être de 15 caractères maximum.\"\r\n      )\r\n      .min(\r\n        4,\r\n        \"Le mot de passe est trop court - doit comporter au moins 4 caractères.\"\r\n      )\r\n      .matches(lowercaseRegEx, \"Doit contenir des lettres minuscules !\")\r\n      .matches(uppercaseRegEx, \"Doit contenir des lettres majuscule !\")\r\n      .matches(numericRegEx, \"Doit contenir des chiffres !\")\r\n      .matches(specialsRegEx, \"Doit contenir un caractère spécial !\")\r\n\r\n      .required(\"Mot de passe requis\"),\r\n  });\r\n\r\n  const onSubmit = () => {\r\n    setPageId(pageId + 1);\r\n  };\r\n  const onReturn = () => {\r\n    setPageId(pageId - 1);\r\n  };\r\n  return {\r\n    ForgotValues,\r\n    RegsiterSchema,\r\n    alerPassowrd,\r\n    pageId,\r\n    onReturn,\r\n    onSubmit,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}