{"ast":null,"code":"var _jsxFileName = \"/media/reda/F4C8104CC810100A/Project/tech-instinct/mister-coocky-web-app-client/src/pages/FilesControlPanel.js\",\n    _s = $RefreshSig$();\n\nimport { Header, Title } from \"../components\";\nimport { Box, Container, createMuiTheme, makeStyles, MuiThemeProvider } from \"@material-ui/core\";\nimport { colors } from \"../themes/colors\";\nimport React, { useEffect, useState } from \"react\";\nimport misterCoockyApi from \"../constante/apiUrl\";\nimport MUIDataTable from \"mui-datatables\";\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Modal from 'react-modal';\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { HashLink as Link } from '../../node_modules/react-router-hash-link';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  }\n}));\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n/**\n * Page de gestion des fichiers importés par les utilisateurs pro\n * @returns {*}\n * @constructor\n */\n\nexport default function FilesControlPanel() {\n  _s();\n\n  const classes = useStyles();\n  const [data, setData] = useState([]); //ensemble des fichiers\n\n  const [selectedFileIdToDelete, setSelectedFileIdToDelete] = useState(null); //ensemble des fichiers\n\n  const [userAdmin, setUserAdmin] = useState(false);\n  const options = {\n    selectableRows: false,\n    customHeadRender: {\n      position: 'absolute'\n    },\n    textLabels: {\n      body: {\n        noMatch: 'Fichier trouvé'\n      }\n    }\n  };\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MuiTableHead: {\n        root: {\n          position: 'sticky'\n        }\n      }\n    }\n  });\n\n  const columns = [{\n    name: \"name\",\n    label: \"Nom fichier\"\n  }, {\n    name: \"sectionName\",\n    label: \"Section\"\n  }, {\n    name: \"orga\",\n    label: \"Organisation\",\n    options: {\n      customBodyRender: function (res) {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: \"/organizationInfos\",\n            state: {\n              organizationName: res\n            }\n          },\n          children: [\" \", res]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 28\n        }, this);\n      }\n    }\n  }, {\n    name: \"dateAjout\",\n    label: \"Date d'ajout\"\n  }, {\n    name: \"id\",\n    label: \"Actions\",\n    options: {\n      customBodyRender: function (res) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"Editer\",\n            style: {\n              padding: \"3px\"\n            },\n            onClick: () => downloadFile(res),\n            children: /*#__PURE__*/_jsxDEV(GetAppIcon, {\n              style: {\n                color: colors.grey\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"Supprimer\",\n            style: {\n              padding: \"3px\"\n            },\n            onClick: () => setSelectedFileIdToDelete(res),\n            children: /*#__PURE__*/_jsxDEV(DeleteOutlinedIcon, {\n              style: {\n                color: colors.grey\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 28\n        }, this);\n      }\n    }\n  }];\n  useEffect(() => {\n    //1 On récupère le rôle de l'utilisateur\n    fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: `\n                    query{​​​​​​​\n                        userPro(id:\"${localStorage.getItem('userId')}\"){​​​​​​​\n                            id\n                            user{\n                                name\n                                role{\n                                    name\n                                }\n                            }\n                        }​​​​​​​\n                    }`\n      })\n    }).then(res => res.json()).then(function (result) {\n      setUserAdmin(result.data.userPro.user.role.name === \"ROLE_ADMIN\");\n    });\n    refreshList();\n  }, []);\n  /**\n   * refresh de liste de fichiers\n   */\n\n  function refreshList() {\n    fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: `\n                    query{​​​​​​​\n                        getDbFiles{​​​​​​​\n                            id\n                            fileName\n                            sectionName\n                            userPro{\n                                organization{\n                                    name\n                                }\n                            }\n                            dateAjout\n                          }​​​​​​​\n                    }`\n      })\n    }).then(res => res.json()).then(function (result) {\n      arrangeParameters(result.data.getDbFiles);\n    });\n  }\n  /**\n   * On sélectionne les données des fichiers pour qu'ils soient interprétables par le tableau\n   * @param arr\n   */\n\n\n  function arrangeParameters(arr) {\n    var items = [];\n    arr.forEach(i => {\n      items.push({\n        'id': i.id,\n        'name': i.fileName,\n        'sectionName': i.sectionName,\n        'orga': i.userPro.organization.name,\n        'date': i.id,\n        'dateAjout': i.dateAjout\n      });\n    });\n    setData(items);\n  }\n  /**\n   * téléchargmnt du fichier choisi\n   * @param res\n   */\n\n\n  function downloadFile(res) {\n    fetch(`${misterCoockyApi.misterCoockyApi}/downloadFile/${res}`, {\n      method: 'GET'\n    }).then(res => res.blob()).then(blob => {\n      var file = window.URL.createObjectURL(blob);\n      window.location.assign(file);\n    }).catch(function (error) {\n      console.log('Erreur pendant le téléchargement : ' + error.message);\n    });\n  }\n  /**\n   * Suppression du fichier\n   * @param id\n   */\n\n\n  function deleteFile(id) {\n    fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: `\n                    mutation DeleteDbFileById($id: String!) {\n                      deleteDbFileById(id: $id){\n                          id\n                      }\n                    }`,\n        variables: {\n          \"id\": id\n        }\n      })\n    }).then(res => res.json()).then(function (result) {\n      refreshList();\n      setSelectedFileIdToDelete(null);\n    });\n  }\n\n  if (userAdmin === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: selectedFileIdToDelete !== null,\n          onRequestClose: () => setSelectedFileIdToDelete(null),\n          style: customStyles,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            children: \"Etes vous s\\xFBr de vouloir supprimer le document?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => deleteFile(selectedFileIdToDelete),\n            children: \"Oui\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setSelectedFileIdToDelete(null),\n            children: \"Non\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          name: \"Panneau de contrôle de fichiers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 5,\n          children: /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n            theme: getMuiTheme(),\n            children: /*#__PURE__*/_jsxDEV(MUIDataTable, {\n              title: \"Fichiers\",\n              data: data,\n              columns: columns,\n              options: options,\n              spacing: 10\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Access denied\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }, this), \"Vous n'avez pas acc\\xE8s \\xE0 cette page, veuillez contacter le support Datagrowb pour plus de renseignemnts\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(FilesControlPanel, \"OLFdKXhJLOsmyqw3ecsr5PL3LRY=\", false, function () {\n  return [useStyles];\n});\n\n_c = FilesControlPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilesControlPanel\");","map":{"version":3,"sources":["/media/reda/F4C8104CC810100A/Project/tech-instinct/mister-coocky-web-app-client/src/pages/FilesControlPanel.js"],"names":["Header","Title","Box","Container","createMuiTheme","makeStyles","MuiThemeProvider","colors","React","useEffect","useState","misterCoockyApi","MUIDataTable","GetAppIcon","DeleteOutlinedIcon","IconButton","Modal","Button","Grid","HashLink","Link","useStyles","theme","root","flexGrow","customStyles","content","top","left","right","bottom","marginRight","transform","FilesControlPanel","classes","data","setData","selectedFileIdToDelete","setSelectedFileIdToDelete","userAdmin","setUserAdmin","options","selectableRows","customHeadRender","position","textLabels","body","noMatch","getMuiTheme","overrides","MuiTableHead","columns","name","label","customBodyRender","res","pathname","state","organizationName","padding","downloadFile","color","grey","fetch","method","headers","JSON","stringify","query","localStorage","getItem","then","json","result","userPro","user","role","refreshList","arrangeParameters","getDbFiles","arr","items","forEach","i","push","id","fileName","sectionName","organization","dateAjout","blob","file","window","URL","createObjectURL","location","assign","catch","error","console","log","message","deleteFile","variables"],"mappings":"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","sourcesContent":["import {Header, Title} from \"../components\";\nimport {Box, Container, createMuiTheme, makeStyles, MuiThemeProvider} from \"@material-ui/core\";\nimport {colors} from \"../themes/colors\";\nimport React, {useEffect, useState} from \"react\";\nimport misterCoockyApi from \"../constante/apiUrl\";\nimport MUIDataTable from \"mui-datatables\";\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Modal from 'react-modal';\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {HashLink as Link} from '../../node_modules/react-router-hash-link';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n}));\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n    },\n};\n\n/**\n * Page de gestion des fichiers importés par les utilisateurs pro\n * @returns {*}\n * @constructor\n */\nexport default function FilesControlPanel() {\n    const classes = useStyles();\n    const [data, setData] = useState([]);   //ensemble des fichiers\n    const [selectedFileIdToDelete, setSelectedFileIdToDelete] = useState(null);   //ensemble des fichiers\n    const [userAdmin, setUserAdmin] = useState(false);\n\n    const options = {\n        selectableRows: false,\n        customHeadRender: {\n            position: 'absolute'\n        },\n        textLabels: {\n            body: {\n                noMatch: 'Fichier trouvé'\n            }\n        }\n    };\n    const getMuiTheme = () => createMuiTheme({\n        overrides: {\n            MuiTableHead: {\n                root: {\n                    position: 'sticky'\n                }\n            }\n        }\n    });\n\n    const columns = [\n        {\n            name: \"name\",\n            label: \"Nom fichier\"\n        },\n        {\n            name: \"sectionName\",\n            label: \"Section\"\n        },\n        {\n            name: \"orga\",\n            label: \"Organisation\",\n            options: {\n                customBodyRender: function (res) {\n                    return <Link to={{pathname: \"/organizationInfos\", state: {organizationName: res}}}> {res}</Link>\n                }\n            }\n        },\n        {\n            name: \"dateAjout\",\n            label: \"Date d'ajout\"\n        },\n        {\n            name: \"id\",\n            label: \"Actions\",\n            options: {\n                customBodyRender: function (res) {\n                    return <div>\n                        <IconButton aria-label=\"Editer\" style={{padding: \"3px\"}} onClick={() => downloadFile(res)}>\n                            <GetAppIcon style={{color: colors.grey}}/>\n                        </IconButton>\n                        <IconButton aria-label=\"Supprimer\" style={{padding: \"3px\"}}\n                                    onClick={() => setSelectedFileIdToDelete(res)}>\n                            <DeleteOutlinedIcon style={{color: colors.grey}}/>\n                        </IconButton>\n                    </div>\n                }\n            }\n        },\n    ];\n\n    useEffect(() => {\n        //1 On récupère le rôle de l'utilisateur\n        fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                query: `\n                    query{​​​​​​​\n                        userPro(id:\"${localStorage.getItem('userId')}\"){​​​​​​​\n                            id\n                            user{\n                                name\n                                role{\n                                    name\n                                }\n                            }\n                        }​​​​​​​\n                    }`,\n            }),\n        })\n            .then((res) => res.json())\n            .then(function (result) {\n                setUserAdmin(result.data.userPro.user.role.name === \"ROLE_ADMIN\")\n            });\n        refreshList()\n    }, []);\n\n    /**\n     * refresh de liste de fichiers\n     */\n    function refreshList() {\n        fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                query: `\n                    query{​​​​​​​\n                        getDbFiles{​​​​​​​\n                            id\n                            fileName\n                            sectionName\n                            userPro{\n                                organization{\n                                    name\n                                }\n                            }\n                            dateAjout\n                          }​​​​​​​\n                    }`,\n            }),\n        })\n            .then((res) => res.json())\n            .then(function (result) {\n                arrangeParameters(result.data.getDbFiles);\n            })\n    }\n\n    /**\n     * On sélectionne les données des fichiers pour qu'ils soient interprétables par le tableau\n     * @param arr\n     */\n    function arrangeParameters(arr) {\n        var items = [];\n        arr.forEach(i => {\n            items.push({\n                'id': i.id,\n                'name': i.fileName,\n                'sectionName': i.sectionName,\n                'orga': i.userPro.organization.name,\n                'date': i.id,\n                'dateAjout': i.dateAjout,\n            })\n        });\n        setData(items)\n    }\n\n    /**\n     * téléchargmnt du fichier choisi\n     * @param res\n     */\n    function downloadFile(res) {\n        fetch(`${misterCoockyApi.misterCoockyApi}/downloadFile/${res}`, {\n            method: 'GET',\n        })\n            .then(res => res.blob())\n            .then(blob => {\n                var file = window.URL.createObjectURL(blob);\n                window.location.assign(file);\n            }).catch(function (error) {\n            console.log('Erreur pendant le téléchargement : ' + error.message);\n        });\n    }\n\n    /**\n     * Suppression du fichier\n     * @param id\n     */\n    function deleteFile(id) {\n        fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                query: `\n                    mutation DeleteDbFileById($id: String!) {\n                      deleteDbFileById(id: $id){\n                          id\n                      }\n                    }`,\n                variables: {\n                    \"id\": id\n                }\n            }),\n        })\n            .then((res) => res.json())\n            .then(function (result) {\n                refreshList();\n                setSelectedFileIdToDelete(null)\n            });\n    }\n\n    if (userAdmin === true) {\n        return (\n            <div>\n                <Header/>\n                <Container>\n\n                    <Modal\n                        isOpen={selectedFileIdToDelete !== null}\n                        onRequestClose={() => setSelectedFileIdToDelete(null)}\n                        style={customStyles}\n                    >\n                        <Grid>Etes vous sûr de vouloir supprimer le document?</Grid>\n                        <Button onClick={() => deleteFile(selectedFileIdToDelete)}>Oui</Button>\n                        <Button onClick={() => setSelectedFileIdToDelete(null)}>Non</Button>\n                    </Modal>\n\n                    <Title name={\"Panneau de contrôle de fichiers\"}/>\n                    <Box mt={5}>\n                        <MuiThemeProvider theme={getMuiTheme()}>\n                            <MUIDataTable\n                                title={\"Fichiers\"}\n                                data={data}\n                                columns={columns}\n                                options={options}\n                                spacing={10}></MUIDataTable>\n                        </MuiThemeProvider>\n                    </Box>\n                </Container>\n            </div>\n        )\n    } else {\n        return <Container>\n            <h2>Access denied</h2>\n            Vous n'avez pas accès à cette page, veuillez contacter le support Datagrowb pour plus de renseignemnts\n        </Container>\n    }\n}\n"]},"metadata":{},"sourceType":"module"}