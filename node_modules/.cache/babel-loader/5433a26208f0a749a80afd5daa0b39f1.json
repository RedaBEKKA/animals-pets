{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\BigNova-Projects\\\\BigNova-Pets Animals\\\\ClonedFromGitHub\\\\animals-pets\\\\src\\\\pages\\\\StatisticsMrAdopt.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from \"@material-ui/core\";\nimport { Header, Title } from \"../components\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport { colors } from \"../themes/colors\";\nimport { Bar } from 'react-chartjs-2';\nimport Input from \"@material-ui/core/Input\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport misterCoockyApi from '../constante/apiUrl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: 300,\n      maxWidth: 50\n    }\n  },\n  // Show dropdow at bottom of select\n  getContentAnchorEl: null,\n  anchorOrigin: {\n    vertical: \"bottom\",\n    horizontal: \"left\"\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  btn: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    width: '100%',\n    height: '0px'\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n    maxWidth: 300\n  }\n}));\n/**\r\n * Page de statistiques des annonces\r\n * @returns {*}\r\n * @constructor\r\n */\n\nfunction StatistiqueMrAdopt() {\n  _s();\n\n  const classes = useStyles();\n  const [productsNames, setProductsNames] = useState([]);\n  const [productsClicks, setProductsClicks] = useState([]);\n  const [productsSelected, setProductsSelected] = useState([]);\n  /**\r\n   * Récupération des produits de utililsateur\r\n   */\n\n  useEffect(() => {\n    fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: `\n                    query{​​​​​​​\n                        getAnnouncementsByUserId(id:\"${localStorage.getItem('userId')}\"){​​​​​​​    \n                            id\n                            title\n                            numberOfClick\n                        }​​​​​​​\n                    }`\n      })\n    }).then(res => res.json()).then(json => {\n      let tmpProductsName = [];\n      let tmpProductsClicks = [];\n\n      if (json.data.getAnnouncementsByUserId) {\n        json.data.getAnnouncementsByUserId.forEach(produit => {\n          tmpProductsName.push(produit.title);\n          tmpProductsClicks.push(produit.numberOfClick);\n        });\n        setProductsNames(tmpProductsName);\n        setProductsClicks(tmpProductsClicks);\n        setProductsSelected([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]); //on n'affiche que les 20premiers\n      }\n    });\n  }, []);\n  /**\r\n   * Récupération des noms des produits/annonces\r\n   * @returns {Array}\r\n   */\n\n  function getSelectedNames() {\n    let selectedNames = [];\n\n    for (let i = 0; i < productsNames.length; i++) {\n      if (productsSelected.includes(i)) {\n        selectedNames.push(productsNames[i]);\n      }\n    }\n\n    return selectedNames;\n  }\n  /**\r\n   * Récupération des nombres de clicks sur les produits/annonces\r\n   * @returns {Array}\r\n   */\n\n\n  function getSelectedClicks() {\n    let selectedClicks = [];\n\n    for (let i = 0; i < productsClicks.length; i++) {\n      if (productsSelected.includes(i)) {\n        selectedClicks.push(productsClicks[i]);\n      }\n    }\n\n    return selectedClicks;\n  }\n  /**\r\n   * Lors du click sur un select\r\n   * @param event\r\n   */\n\n\n  function handleChange(event) {\n    let changeProductState = -1; //on récupère le produit changé\n\n    productsNames.map((product, index) => {\n      if (!event.target.value.includes(product)) {\n        changeProductState = index;\n      }\n    }); //on change le produit concerné\n\n    let tmpSelected = [];\n    productsSelected.map(selec => {\n      tmpSelected.push(selec);\n    }); //on rerempli par les valeurs initiales\n\n    if (tmpSelected.includes(changeProductState)) {\n      //lors d'une suppression\n      const index = tmpSelected.indexOf(changeProductState);\n\n      if (index > -1) {\n        tmpSelected.splice(index, 1);\n      }\n    } else {\n      //lors d'un ajout\n      tmpSelected.push(changeProductState);\n    }\n\n    setProductsSelected(tmpSelected);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        name: \"Mr.Adopt — Statistiques\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 10,\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => window.location.href = '/annonces',\n            className: classes.btn,\n            variant: \"contained\",\n            style: {\n              backgroundColor: colors.grey\n            },\n            children: \"Mes annonces\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => window.location.href = '/addAnnonce',\n            className: classes.btn,\n            variant: \"contained\",\n            style: {\n              backgroundColor: colors.grey\n            },\n            children: \"Ajouter une annonce\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => window.location.href = '/statisticsMrAdopt',\n            className: classes.btn,\n            variant: \"contained\",\n            style: {\n              backgroundColor: colors.brown\n            },\n            children: \"Statistiques\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 5,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"select-multiple-checkbox\",\n              children: \"Filtrer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              multiple: true,\n              value: productsNames,\n              onChange: handleChange,\n              input: /*#__PURE__*/_jsxDEV(Input, {\n                id: \"select-multiple-checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 40\n              }, this),\n              renderValue: selected => selected.join(\", \"),\n              MenuProps: MenuProps,\n              children: productsNames.map((name, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: name,\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: productsSelected.includes(index)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 41\n                }, this)]\n              }, name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: {\n            labels: getSelectedNames(),\n            datasets: [{\n              label: 'Nombre de vues',\n              data: getSelectedClicks(),\n              backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n              borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n              borderWidth: 1\n            }]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 9\n  }, this);\n}\n\n_s(StatistiqueMrAdopt, \"/HW2kwNCELDhlT6OafHeEZYAJic=\", false, function () {\n  return [useStyles];\n});\n\n_c = StatistiqueMrAdopt;\nexport default StatistiqueMrAdopt;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatistiqueMrAdopt\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/BigNova-Projects/BigNova-Pets Animals/ClonedFromGitHub/animals-pets/src/pages/StatisticsMrAdopt.js"],"names":["React","useEffect","useState","makeStyles","Header","Title","Container","Grid","Button","Box","colors","Bar","Input","FormControl","InputLabel","Select","ListItemText","Checkbox","MenuItem","misterCoockyApi","MenuProps","PaperProps","style","maxHeight","maxWidth","getContentAnchorEl","anchorOrigin","vertical","horizontal","useStyles","theme","root","flexGrow","btn","padding","spacing","color","palette","text","secondary","width","height","formControl","margin","unit","minWidth","StatistiqueMrAdopt","classes","productsNames","setProductsNames","productsClicks","setProductsClicks","productsSelected","setProductsSelected","fetch","method","headers","body","JSON","stringify","query","localStorage","getItem","then","res","json","tmpProductsName","tmpProductsClicks","data","getAnnouncementsByUserId","forEach","produit","push","title","numberOfClick","getSelectedNames","selectedNames","i","length","includes","getSelectedClicks","selectedClicks","handleChange","event","changeProductState","map","product","index","target","value","tmpSelected","selec","indexOf","splice","window","location","href","backgroundColor","grey","brown","selected","join","name","labels","datasets","label","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {Header, Title} from \"../components\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {colors} from \"../themes/colors\";\r\nimport {Bar} from 'react-chartjs-2';\r\nimport Input from \"@material-ui/core/Input\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport misterCoockyApi from '../constante/apiUrl'\r\n\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: 300,\r\n            maxWidth: 50\r\n        }\r\n    },\r\n    // Show dropdow at bottom of select\r\n    getContentAnchorEl: null,\r\n    anchorOrigin: {\r\n        vertical: \"bottom\",\r\n        horizontal: \"left\"\r\n    }\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    btn: {\r\n        padding: theme.spacing(2),\r\n        color: theme.palette.text.secondary,\r\n        width: '100%',\r\n        height: '0px',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing.unit,\r\n        minWidth: 120,\r\n        maxWidth: 300\r\n    }\r\n}));\r\n\r\n/**\r\n * Page de statistiques des annonces\r\n * @returns {*}\r\n * @constructor\r\n */\r\nfunction StatistiqueMrAdopt() {\r\n    const classes = useStyles();\r\n    const [productsNames, setProductsNames] = useState([]);\r\n    const [productsClicks, setProductsClicks] = useState([]);\r\n    const [productsSelected, setProductsSelected] = useState([]);\r\n\r\n    /**\r\n     * Récupération des produits de utililsateur\r\n     */\r\n    useEffect(() => {\r\n        fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                query: `\r\n                    query{​​​​​​​\r\n                        getAnnouncementsByUserId(id:\"${localStorage.getItem('userId')}\"){​​​​​​​    \r\n                            id\r\n                            title\r\n                            numberOfClick\r\n                        }​​​​​​​\r\n                    }`,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                let tmpProductsName = [];\r\n                let tmpProductsClicks = [];\r\n                if (json.data.getAnnouncementsByUserId) {\r\n                    json.data.getAnnouncementsByUserId.forEach((produit) => {\r\n                        tmpProductsName.push(produit.title);\r\n                        tmpProductsClicks.push(produit.numberOfClick);\r\n                    });\r\n                    setProductsNames(tmpProductsName);\r\n                    setProductsClicks(tmpProductsClicks);\r\n                    setProductsSelected([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])   //on n'affiche que les 20premiers\r\n                }\r\n            })\r\n    }, []);\r\n\r\n    /**\r\n     * Récupération des noms des produits/annonces\r\n     * @returns {Array}\r\n     */\r\n    function getSelectedNames() {\r\n        let selectedNames = [];\r\n        for (let i = 0; i < productsNames.length; i++) {\r\n            if (productsSelected.includes(i)) {\r\n                selectedNames.push(productsNames[i])\r\n            }\r\n        }\r\n        return selectedNames\r\n    }\r\n\r\n    /**\r\n     * Récupération des nombres de clicks sur les produits/annonces\r\n     * @returns {Array}\r\n     */\r\n    function getSelectedClicks() {\r\n        let selectedClicks = [];\r\n        for (let i = 0; i < productsClicks.length; i++) {\r\n            if (productsSelected.includes(i)) {\r\n                selectedClicks.push(productsClicks[i])\r\n            }\r\n        }\r\n        return selectedClicks\r\n    }\r\n\r\n    /**\r\n     * Lors du click sur un select\r\n     * @param event\r\n     */\r\n    function handleChange(event) {\r\n        let changeProductState = -1;\r\n        //on récupère le produit changé\r\n        productsNames.map((product, index) => {\r\n            if (!event.target.value.includes(product)) {\r\n                changeProductState = index\r\n            }\r\n        });\r\n        //on change le produit concerné\r\n        let tmpSelected = [];\r\n        productsSelected.map(selec => {\r\n            tmpSelected.push(selec)\r\n        });   //on rerempli par les valeurs initiales\r\n        if (tmpSelected.includes(changeProductState)) {  //lors d'une suppression\r\n            const index = tmpSelected.indexOf(changeProductState);\r\n            if (index > -1) {\r\n                tmpSelected.splice(index, 1);\r\n            }\r\n        } else {  //lors d'un ajout\r\n            tmpSelected.push(changeProductState)\r\n        }\r\n        setProductsSelected(tmpSelected)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <Container>\r\n                <Title name={\"Mr.Adopt — Statistiques\"}/>\r\n                <Grid container spacing={10} justify=\"center\">\r\n                    <Grid item xs>\r\n                        <Button onClick={() => window.location.href = '/annonces'} className={classes.btn}\r\n                                variant=\"contained\" style={{backgroundColor: colors.grey}}>Mes annonces</Button>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <Button onClick={() => window.location.href = '/addAnnonce'} className={classes.btn}\r\n                                variant=\"contained\" style={{backgroundColor: colors.grey}}>Ajouter une annonce</Button>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <Button onClick={() => window.location.href = '/statisticsMrAdopt'} className={classes.btn}\r\n                                variant=\"contained\" style={{backgroundColor: colors.brown}}>Statistiques</Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                <Box mt={5}>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel htmlFor=\"select-multiple-checkbox\">Filtrer</InputLabel>\r\n                            <Select\r\n                                multiple\r\n                                value={productsNames}\r\n                                onChange={handleChange}\r\n                                input={<Input id=\"select-multiple-checkbox\"/>}\r\n                                renderValue={selected => selected.join(\", \")}\r\n                                MenuProps={MenuProps}\r\n                            >\r\n                                {productsNames.map((name, index) => (\r\n                                    <MenuItem key={name} value={name}>\r\n                                        <Checkbox checked={productsSelected.includes(index)}/>\r\n                                        <ListItemText primary={name}/>\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Bar\r\n                        data={{\r\n                            labels: getSelectedNames(),\r\n                            datasets: [{\r\n                                label: 'Nombre de vues',\r\n                                data: getSelectedClicks(),\r\n                                backgroundColor: [\r\n                                    'rgba(255, 99, 132, 0.2)',\r\n                                    'rgba(54, 162, 235, 0.2)',\r\n                                    'rgba(255, 206, 86, 0.2)',\r\n                                    'rgba(75, 192, 192, 0.2)',\r\n                                    'rgba(153, 102, 255, 0.2)',\r\n                                    'rgba(255, 159, 64, 0.2)'\r\n                                ],\r\n                                borderColor: [\r\n                                    'rgba(255, 99, 132, 1)',\r\n                                    'rgba(54, 162, 235, 1)',\r\n                                    'rgba(255, 206, 86, 1)',\r\n                                    'rgba(75, 192, 192, 1)',\r\n                                    'rgba(153, 102, 255, 1)',\r\n                                    'rgba(255, 159, 64, 1)'\r\n                                ],\r\n                                borderWidth: 1\r\n                            }]\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default StatistiqueMrAdopt;\r\n"]},"metadata":{},"sourceType":"module"}