{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport * as Yup from \"yup\";\nimport { fr } from \"yup-locales\";\nimport { setLocale } from \"yup\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { GET_VALIDATION } from \"../../../Redux/Types\";\nsetLocale(fr);\nexport function useForgot() {\n  _s();\n\n  const [pageId, setPageId] = useState(0); //numéro de page du formulaire d'inscription (0,1,2)\n\n  const [alerPassowrd, setAlerPassowrd] = useState(\"\"); //message d'alerte au niveau de l'adresse mail\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const ForgotValues = {\n    email: \"\"\n  };\n  const emailRegex = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n  let RegsiterSchema = Yup.object().shape({\n    email: Yup.string().matches(emailRegex, \"Doit être un email valide !\").max(35, \"email est trop long - doit être de 35 caractères maximum.\").required(\"email est requis\").min(4, \"email est trop court - doit comporter au moins 4 caractères.\")\n  });\n\n  const onSubmit = value => {\n    // console.log('onSubmit value', value)\n    dispatch({\n      type: GET_VALIDATION\n    });\n    history.push(\"/reset-password\", {\n      data: value\n    });\n  };\n\n  const onReturn = () => {\n    history.push(\"/forgot\");\n  };\n\n  return {\n    ForgotValues,\n    RegsiterSchema,\n    alerPassowrd,\n    pageId,\n    onReturn,\n    onSubmit\n  };\n}\n\n_s(useForgot, \"Aj4gsYxLCtys5LGWLMButL2HZAY=\", false, function () {\n  return [useHistory, useDispatch];\n});","map":{"version":3,"sources":["C:/Users/PC/Desktop/BigNova-Projects/Project - 12 - BigNova-Pets Animals-web/ClonedFromGitHub/animals-pets/src/pages/ForgotPass/Hooks/useForgot.js"],"names":["Yup","fr","setLocale","useState","useHistory","useDispatch","GET_VALIDATION","useForgot","pageId","setPageId","alerPassowrd","setAlerPassowrd","history","dispatch","ForgotValues","email","emailRegex","RegsiterSchema","object","shape","string","matches","max","required","min","onSubmit","value","type","push","data","onReturn"],"mappings":";;AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,SAASC,EAAT,QAAmB,aAAnB;AACA,SAASC,SAAT,QAA0B,KAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,sBAA/B;AAEAJ,SAAS,CAACD,EAAD,CAAT;AAEA,OAAO,SAASM,SAAT,GAAqB;AAAA;;AAC1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,CAAD,CAApC,CAD0B,CACe;;AACzC,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD,CAF0B,CAE4B;;AACtD,QAAMS,OAAO,GAAGR,UAAU,EAA1B;AACA,QAAMS,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAMS,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE;AADY,GAArB;AAIA,QAAMC,UAAU,GACd,gcADF;AAGA,MAAIC,cAAc,GAAGjB,GAAG,CAACkB,MAAJ,GAAaC,KAAb,CAAmB;AACtCJ,IAAAA,KAAK,EAAEf,GAAG,CAACoB,MAAJ,GACJC,OADI,CACIL,UADJ,EACgB,6BADhB,EAEJM,GAFI,CAEA,EAFA,EAEI,2DAFJ,EAGJC,QAHI,CAGK,kBAHL,EAIJC,GAJI,CAIA,CAJA,EAIG,8DAJH;AAD+B,GAAnB,CAArB;;AAQA,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B;AACAb,IAAAA,QAAQ,CAAC;AAAEc,MAAAA,IAAI,EAAErB;AAAR,KAAD,CAAR;AACAM,IAAAA,OAAO,CAACgB,IAAR,CAAa,iBAAb,EAAgC;AAAEC,MAAAA,IAAI,EAACH;AAAP,KAAhC;AAED,GALD;;AAMA,QAAMI,QAAQ,GAAG,MAAM;AACrBlB,IAAAA,OAAO,CAACgB,IAAR,CAAa,SAAb;AACD,GAFD;;AAGA,SAAO;AACLd,IAAAA,YADK;AAELG,IAAAA,cAFK;AAGLP,IAAAA,YAHK;AAILF,IAAAA,MAJK;AAKLsB,IAAAA,QALK;AAMLL,IAAAA;AANK,GAAP;AAQD;;GAtCelB,S;UAGEH,U,EACCC,W","sourcesContent":["import * as Yup from \"yup\";\r\nimport { fr } from \"yup-locales\";\r\nimport { setLocale } from \"yup\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { GET_VALIDATION } from \"../../../Redux/Types\";\r\n\r\nsetLocale(fr);\r\n\r\nexport function useForgot() {\r\n  const [pageId, setPageId] = useState(0); //numéro de page du formulaire d'inscription (0,1,2)\r\n  const [alerPassowrd, setAlerPassowrd] = useState(\"\"); //message d'alerte au niveau de l'adresse mail\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const ForgotValues = {\r\n    email: \"\",\r\n  };\r\n\r\n  const emailRegex =\r\n    /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\r\n\r\n  let RegsiterSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .matches(emailRegex, \"Doit être un email valide !\")\r\n      .max(35, \"email est trop long - doit être de 35 caractères maximum.\")\r\n      .required(\"email est requis\")\r\n      .min(4, \"email est trop court - doit comporter au moins 4 caractères.\"),\r\n  });\r\n\r\n  const onSubmit = (value) => {\r\n    // console.log('onSubmit value', value)\r\n    dispatch({ type: GET_VALIDATION });\r\n    history.push(\"/reset-password\", { data:value });\r\n\r\n  };\r\n  const onReturn = () => {\r\n    history.push(\"/forgot\");\r\n  };\r\n  return {\r\n    ForgotValues,\r\n    RegsiterSchema,\r\n    alerPassowrd,\r\n    pageId,\r\n    onReturn,\r\n    onSubmit,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}