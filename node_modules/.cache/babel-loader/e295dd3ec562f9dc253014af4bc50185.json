{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\BigNova-Projects\\\\BigNova-Pets Animals\\\\ClonedFromGitHub\\\\animals-pets\\\\src\\\\pages\\\\Register\\\\Components\\\\Form2\\\\Components\\\\CheckboxGroup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Field, ErrorMessage } from \"formik\";\nimport TextError from \"../../TextError\";\nimport { Box, Checkbox, FormControlLabel, FormGroup, FormLabel, Paper } from \"@material-ui/core\";\nimport { useStyles } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CheckboxGroup(props) {\n  _s();\n\n  var _error$touched, _error$touched2, _error$touched3, _error$touched4;\n\n  const {\n    label,\n    name,\n    options,\n    error\n  } = props;\n  const classes = useStyles(); // console.log(\"error.touched TypeLenseigne\", error.touched.TypeLenseigne);\n  // console.log(\"error.values TypeLenseigne\", error.values.TypeLenseigne);\n  // console.log(\"error.touched offre\", error.touched.offre);\n  // console.log(\"error.values offre\", error.values.offre);\n\n  let getErrorEns = ((_error$touched = error.touched) === null || _error$touched === void 0 ? void 0 : _error$touched.TypeLenseigne) ? true : false;\n  let getErrorValEns = ((_error$touched2 = error.touched) === null || _error$touched2 === void 0 ? void 0 : _error$touched2.TypeLenseigne.length) >= 1 ? true : false;\n  let getErroroffre = ((_error$touched3 = error.touched) === null || _error$touched3 === void 0 ? void 0 : _error$touched3.offre) ? true : false;\n  let getErrorValoffre = ((_error$touched4 = error.touched) === null || _error$touched4 === void 0 ? void 0 : _error$touched4.offre.length) >= 1 ? true : false;\n  let errorEns = getErrorEns && getErrorValEns ? true : false;\n  let errorOffre = getErroroffre && getErrorValoffre ? true : false;\n  console.log('errorEns', errorEns);\n  console.log('errorOffre', errorOffre);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.containercheckbox,\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      component: \"legend\",\n      style: {\n        fontWeight: \"800\",\n        color: \"#000\",\n        paddingBottom: 10\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), options.map(option => {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.item,\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          type: \"checkbox\",\n          name: name,\n          value: option.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          className: classes.textLabel,\n          children: option.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      component: TextError,\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckboxGroup, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CheckboxGroup;\nexport default CheckboxGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxGroup\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/BigNova-Projects/BigNova-Pets Animals/ClonedFromGitHub/animals-pets/src/pages/Register/Components/Form2/Components/CheckboxGroup.js"],"names":["React","Field","ErrorMessage","TextError","Box","Checkbox","FormControlLabel","FormGroup","FormLabel","Paper","useStyles","CheckboxGroup","props","label","name","options","error","classes","getErrorEns","touched","TypeLenseigne","getErrorValEns","length","getErroroffre","offre","getErrorValoffre","errorEns","errorOffre","console","log","containercheckbox","fontWeight","color","paddingBottom","map","option","item","value","textLabel"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,QAApC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SACEC,GADF,EAEEC,QAFF,EAGEC,gBAHF,EAIEC,SAJF,EAKEC,SALF,EAMEC,KANF,QAOO,mBAPP;AAQA,SAASC,SAAT,QAA0B,UAA1B;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA;AAAxB,MAAkCJ,KAAxC;AACA,QAAMK,OAAO,GAAGP,SAAS,EAAzB,CAF4B,CAG5B;AACA;AACA;AACA;;AAEA,MAAIQ,WAAW,GAAG,mBAAAF,KAAK,CAACG,OAAN,kEAAeC,aAAf,IAA+B,IAA/B,GAAsC,KAAxD;AACA,MAAIC,cAAc,GAAG,oBAAAL,KAAK,CAACG,OAAN,oEAAeC,aAAf,CAA6BE,MAA7B,KAAuC,CAAvC,GAA2C,IAA3C,GAAkD,KAAvE;AACA,MAAIC,aAAa,GAAG,oBAAAP,KAAK,CAACG,OAAN,oEAAeK,KAAf,IAAuB,IAAvB,GAA8B,KAAlD;AACA,MAAIC,gBAAgB,GAAG,oBAAAT,KAAK,CAACG,OAAN,oEAAeK,KAAf,CAAqBF,MAArB,KAA+B,CAA/B,GAAmC,IAAnC,GAA0C,KAAjE;AAEA,MAAII,QAAQ,GAAGR,WAAW,IAAIG,cAAf,GAAgC,IAAhC,GAAuC,KAAtD;AACA,MAAIM,UAAU,GAAGJ,aAAa,IAAIE,gBAAjB,GAAoC,IAApC,GAA2C,KAA5D;AAECG,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,UAA1B;AACD,sBACE,QAAC,GAAD;AAAK,IAAA,SAAS,EAAEV,OAAO,CAACa,iBAAxB;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,KAAd;AAAqBC,QAAAA,KAAK,EAAE,MAA5B;AAAoCC,QAAAA,aAAa,EAAE;AAAnD,OAFT;AAAA,gBAIGpB;AAJH;AAAA;AAAA;AAAA;AAAA,YADF,EAOGE,OAAO,CAACmB,GAAR,CAAaC,MAAD,IAAY;AACvB,0BACE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAElB,OAAO,CAACmB,IAAxB;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,IAAI,EAAEtB,IAA7B;AAAmC,UAAA,KAAK,EAAEqB,MAAM,CAACE;AAAjD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAEpB,OAAO,CAACqB,SAA9B;AAAA,oBAA0CH,MAAM,CAACE;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPA,CAPH,eAeE,QAAC,YAAD;AAAc,MAAA,SAAS,EAAElC,SAAzB;AAAoC,MAAA,IAAI,EAAEW;AAA1C;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GArCQH,a;UAESD,S;;;KAFTC,a;AAuCT,eAAeA,aAAf","sourcesContent":["import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport TextError from \"../../TextError\";\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  FormLabel,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nfunction CheckboxGroup(props) {\r\n  const { label, name, options, error } = props;\r\n  const classes = useStyles();\r\n  // console.log(\"error.touched TypeLenseigne\", error.touched.TypeLenseigne);\r\n  // console.log(\"error.values TypeLenseigne\", error.values.TypeLenseigne);\r\n  // console.log(\"error.touched offre\", error.touched.offre);\r\n  // console.log(\"error.values offre\", error.values.offre);\r\n\r\n  let getErrorEns = error.touched?.TypeLenseigne ? true : false;\r\n  let getErrorValEns = error.touched?.TypeLenseigne.length >= 1 ? true : false;\r\n  let getErroroffre = error.touched?.offre ? true : false;\r\n  let getErrorValoffre = error.touched?.offre.length >= 1 ? true : false;\r\n\r\n  let errorEns = getErrorEns && getErrorValEns ? true : false\r\n  let errorOffre = getErroroffre && getErrorValoffre ? true : false\r\n\r\n   console.log('errorEns', errorEns)\r\n   console.log('errorOffre', errorOffre)\r\n  return (\r\n    <Box className={classes.containercheckbox}>\r\n      <FormLabel\r\n        component=\"legend\"\r\n        style={{ fontWeight: \"800\", color: \"#000\", paddingBottom: 10 }}\r\n      >\r\n        {label}\r\n      </FormLabel>\r\n      {options.map((option) => {\r\n        return (\r\n          <Box className={classes.item}>\r\n            <Field type=\"checkbox\" name={name} value={option.value} />\r\n            <FormLabel className={classes.textLabel}>{option.value}</FormLabel>\r\n          </Box>\r\n        );\r\n      })}\r\n      <ErrorMessage component={TextError} name={name} />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CheckboxGroup;\r\n"]},"metadata":{},"sourceType":"module"}