{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\BigNova-Projects\\\\BigNova-Pets Animals\\\\ClonedFromGitHub\\\\animals-pets\\\\src\\\\pages\\\\Register\\\\Components\\\\Form2\\\\Components\\\\CheckboxGroup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Field, ErrorMessage } from \"formik\";\nimport TextError from \"../../TextError\";\nimport { Box, Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, Paper } from \"@material-ui/core\";\nimport { useStyles } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CheckboxGroup(props) {\n  _s();\n\n  var _error$touched, _error$value, _error$value$TypeLens;\n\n  const {\n    label,\n    name,\n    options,\n    error\n  } = props;\n  const classes = useStyles();\n  let colorr = ((_error$touched = error.touched) === null || _error$touched === void 0 ? void 0 : _error$touched.TypeLenseigne) && (error === null || error === void 0 ? void 0 : (_error$value = error.value) === null || _error$value === void 0 ? void 0 : (_error$value$TypeLens = _error$value.TypeLenseigne) === null || _error$value$TypeLens === void 0 ? void 0 : _error$value$TypeLens.length) === 0 ? \"#d77\" : \"#000\";\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.containercheckbox,\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      error: error,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        style: {\n          fontWeight: \"800\",\n          color: \"#000\",\n          paddingBottom: 10\n        },\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), options.map(option => {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.item,\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            type: \"checkbox\",\n            name: name,\n            value: option.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n            className: classes.textLabel,\n            children: option.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckboxGroup, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CheckboxGroup;\nexport default CheckboxGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxGroup\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/BigNova-Projects/BigNova-Pets Animals/ClonedFromGitHub/animals-pets/src/pages/Register/Components/Form2/Components/CheckboxGroup.js"],"names":["React","Field","ErrorMessage","TextError","Box","Checkbox","FormControl","FormControlLabel","FormGroup","FormLabel","Paper","useStyles","CheckboxGroup","props","label","name","options","error","classes","colorr","touched","TypeLenseigne","value","length","containercheckbox","fontWeight","color","paddingBottom","map","option","item","textLabel"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,QAApC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SACEC,GADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,gBAJF,EAKEC,SALF,EAMEC,SANF,EAOEC,KAPF,QAQO,mBARP;AASA,SAASC,SAAT,QAA0B,UAA1B;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA;AAAxB,MAAkCJ,KAAxC;AACA,QAAMK,OAAO,GAAGP,SAAS,EAAzB;AAEA,MAAIQ,MAAM,GACR,mBAAAF,KAAK,CAACG,OAAN,kEAAeC,aAAf,KAAgC,CAAAJ,KAAK,SAAL,IAAAA,KAAK,WAAL,4BAAAA,KAAK,CAAEK,KAAP,uFAAcD,aAAd,gFAA6BE,MAA7B,MAAwC,CAAxE,GACI,MADJ,GAEI,MAHN;AAIA,sBACE,QAAC,GAAD;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACM,iBAAxB;AAAA,2BACE,QAAC,WAAD;AACE,MAAA,KAAK,EACHP,KAFJ;AAAA,8BAKE,QAAC,SAAD;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,KAAK,EAAE;AAAEQ,UAAAA,UAAU,EAAE,KAAd;AAAqBC,UAAAA,KAAK,EAAE,MAA5B;AAAoCC,UAAAA,aAAa,EAAE;AAAnD,SAFT;AAAA,kBAIGb;AAJH;AAAA;AAAA;AAAA;AAAA,cALF,EAYGE,OAAO,CAACY,GAAR,CAAaC,MAAD,IAAY;AACvB,4BACE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAEX,OAAO,CAACY,IAAxB;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,IAAI,EAAEf,IAA7B;AAAmC,YAAA,KAAK,EAAEc,MAAM,CAACP;AAAjD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD;AAAW,YAAA,SAAS,EAAEJ,OAAO,CAACa,SAA9B;AAAA,sBACGF,MAAM,CAACP;AADV;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OATA,CAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GAnCQV,a;UAESD,S;;;KAFTC,a;AAqCT,eAAeA,aAAf","sourcesContent":["import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport TextError from \"../../TextError\";\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  FormLabel,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nfunction CheckboxGroup(props) {\r\n  const { label, name, options, error } = props;\r\n  const classes = useStyles();\r\n\r\n  let colorr =\r\n    error.touched?.TypeLenseigne && error?.value?.TypeLenseigne?.length === 0\r\n      ? \"#d77\"\r\n      : \"#000\";\r\n  return (\r\n    <Box className={classes.containercheckbox}>\r\n      <FormControl\r\n        error={\r\n          error\r\n        }\r\n      >\r\n        <FormLabel\r\n          component=\"legend\"\r\n          style={{ fontWeight: \"800\", color: \"#000\", paddingBottom: 10 }}\r\n        >\r\n          {label}\r\n        </FormLabel>\r\n\r\n        {options.map((option) => {\r\n          return (\r\n            <Box className={classes.item}>\r\n              <Field type=\"checkbox\" name={name} value={option.value} />\r\n              <FormLabel className={classes.textLabel}>\r\n                {option.value}\r\n              </FormLabel>\r\n            </Box>\r\n          );\r\n        })}\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CheckboxGroup;\r\n"]},"metadata":{},"sourceType":"module"}