{"ast":null,"code":"var _jsxFileName = \"D:\\\\All - Projects\\\\PROJECTS - Gitkraken\\\\Project-12 - BigNova PetsAnimals\\\\animals-pets\\\\src\\\\pages\\\\Register\\\\Components\\\\From2.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, Grid, Input, InputLabel, Select, TextField } from '@material-ui/core';\nimport React from 'react';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport { Field } from \"formik\";\nimport { colors } from '../../../themes/colors';\nimport { useStyles } from '../hooks/Styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction From2() {\n  _s();\n\n  const classes = useStyles();\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: 48 * 4.5 + 8,\n        width: 400\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        variant: \"outlined\",\n        required: true,\n        fullWidth: true,\n        id: \"enseigne\",\n        label: \"Nom de l'enseigne\",\n        name: \"enseigne\" // value={companyName}\n        // onChange={(e) => setCompanyName(e.target.value)}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(PlacesAutocomplete //   value={adresse}\n    //   onChange={setAdresse}\n    //   onSelect={handleAddressSelect}\n    , {\n      children: ({\n        getInputProps,\n        suggestions,\n        getSuggestionItemProps,\n        loading\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          variant: \"outlined\",\n          required: true,\n          fullWidth: true,\n          ...getInputProps({\n            label: \"Adresse\",\n            placeholder: \"Entrez l'adresse\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Chargement...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 24\n          }, this) : null, suggestions.map((suggestion, i) => {\n            const style = {\n              backgroundColor: suggestion.active ? colors.brown : \"#fafafa\"\n            };\n            return /*#__PURE__*/_jsxDEV(\"div\", { ...getSuggestionItemProps(suggestion, {\n                style\n              }),\n              children: suggestion.description\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          className: classes.formControl,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            children: \"Type de l'enseigne\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox //   checked={estArtisan}\n              //   onChange={(e) => setEstArtisan(e.target.checked)}\n              , {\n                name: \"estArtisan\",\n                color: \"default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this),\n              label: \"Artisan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox //   checked={estMagasinSpe}\n              //   onChange={(e) => setEstMagasinSpe(e.target.checked)}\n              , {\n                name: \"estMagasinSpe\",\n                color: \"default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this),\n              label: \"Magasin sp\\xE9cialis\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox //   checked={estMagasinGen}\n              //   onChange={(e) => setEstMagasinGen(e.target.checked)}\n              , {\n                name: \"estMagasinGen\",\n                color: \"default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this),\n              label: \"Magasin g\\xE9n\\xE9raliste\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox //   checked={estAsso}\n              //   onChange={(e) => setEstAsso(e.target.checked)}\n              , {\n                name: \"estAsso\",\n                color: \"default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this),\n              label: \"Association\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox //   checked={estMarque}\n              //   onChange={(e) => setEstMarque(e.target.checked)}\n              , {\n                name: \"estMarque\",\n                color: \"default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this),\n              label: \"Marque\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          required: true,\n          component: \"fieldset\",\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            children: \"Type de l'offre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox //   checked={estAlim}\n              //   onChange={(e) => setEstAlim(e.target.checked)}\n              , {\n                name: \"Alimentation\",\n                color: \"default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this),\n              label: \"Alimentation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox //   checked={estAccess}\n              //   onChange={(e) => setEstAccess(e.target.checked)}\n              , {\n                name: \"Accessoire\",\n                color: \"default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this),\n              label: \"Accessoire\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Services\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                multiple: true // value={nomsServicesCHoisis}\n                // onChange={handleChange}\n                ,\n                input: /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"select-multiple-checkbox\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 24\n                }, this) // renderValue={(selected) => selected.join(\", \")}\n                ,\n                MenuProps: MenuProps\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 10,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 10,\n        justify: \"space-around\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          style: {\n            backgroundColor: colors.red\n          },\n          className: classes.btn //   onClick={() => setPageId(pageId - 1)}\n          ,\n          children: \"Pr\\xE9c\\xE9dent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          style: {\n            backgroundColor: colors.red\n          },\n          className: classes.btn,\n          children: \"Suivant >\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(From2, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = From2;\nexport default From2;\n\nvar _c;\n\n$RefreshReg$(_c, \"From2\");","map":{"version":3,"sources":["D:/All - Projects/PROJECTS - Gitkraken/Project-12 - BigNova PetsAnimals/animals-pets/src/pages/Register/Components/From2.js"],"names":["Box","Checkbox","FormControl","FormControlLabel","FormGroup","FormLabel","Grid","Input","InputLabel","Select","TextField","React","PlacesAutocomplete","Field","colors","useStyles","From2","classes","MenuProps","PaperProps","style","maxHeight","width","getInputProps","suggestions","getSuggestionItemProps","loading","label","placeholder","map","suggestion","i","backgroundColor","active","brown","description","formControl","red","btn"],"mappings":"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","sourcesContent":["import { Box, Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, Grid, Input, InputLabel, Select, TextField } from '@material-ui/core';\r\nimport React from 'react'\r\nimport PlacesAutocomplete from 'react-places-autocomplete';\r\nimport { Field } from \"formik\";\r\nimport { colors } from '../../../themes/colors';\r\nimport { useStyles } from '../hooks/Styles';\r\n\r\nfunction From2() {\r\n    const classes = useStyles();\r\n    const MenuProps = {\r\n        PaperProps: {\r\n          style: {\r\n            maxHeight: 48 * 4.5 + 8,\r\n            width: 400,\r\n          },\r\n        },\r\n      };\r\n  return (\r\n    <>\r\n    <Box mb={2}>\r\n      <Field\r\n        variant=\"outlined\"\r\n        required\r\n        fullWidth\r\n        id=\"enseigne\"\r\n        label=\"Nom de l'enseigne\"\r\n        name=\"enseigne\"\r\n        // value={companyName}\r\n        // onChange={(e) => setCompanyName(e.target.value)}\r\n      />\r\n    </Box>\r\n    <PlacesAutocomplete\r\n    //   value={adresse}\r\n    //   onChange={setAdresse}\r\n    //   onSelect={handleAddressSelect}\r\n    >\r\n      {({\r\n        getInputProps,\r\n        suggestions,\r\n        getSuggestionItemProps,\r\n        loading,\r\n      }) => (\r\n        <div>\r\n          <Field\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            {...getInputProps({\r\n              label: \"Adresse\",\r\n              placeholder: \"Entrez l'adresse\",\r\n            })}\r\n          />\r\n          <div>\r\n            {loading ? <div>Chargement...</div> : null}\r\n\r\n            {suggestions.map((suggestion, i) => {\r\n              const style = {\r\n                backgroundColor: suggestion.active\r\n                  ? colors.brown\r\n                  : \"#fafafa\",\r\n              };\r\n              return (\r\n                <div\r\n                  key={i}\r\n                  {...getSuggestionItemProps(suggestion, { style })}\r\n                >\r\n                  {suggestion.description}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </PlacesAutocomplete>\r\n    <Grid container>\r\n      <Grid container item xs={12} sm={6} md={6}>\r\n        <FormControl\r\n          component=\"fieldset\"\r\n          className={classes.formControl}\r\n          required={true}\r\n        >\r\n          <FormLabel component=\"legend\">Type de l'enseigne</FormLabel>\r\n          <FormGroup>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                //   checked={estArtisan}\r\n                //   onChange={(e) => setEstArtisan(e.target.checked)}\r\n                  name=\"estArtisan\"\r\n                  color=\"default\"\r\n                />\r\n              }\r\n              label=\"Artisan\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                //   checked={estMagasinSpe}\r\n                //   onChange={(e) => setEstMagasinSpe(e.target.checked)}\r\n                  name=\"estMagasinSpe\"\r\n                  color=\"default\"\r\n                />\r\n              }\r\n              label=\"Magasin spécialisé\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                //   checked={estMagasinGen}\r\n                //   onChange={(e) => setEstMagasinGen(e.target.checked)}\r\n                  name=\"estMagasinGen\"\r\n                  color=\"default\"\r\n                />\r\n              }\r\n              label=\"Magasin généraliste\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                //   checked={estAsso}\r\n                //   onChange={(e) => setEstAsso(e.target.checked)}\r\n                  name=\"estAsso\"\r\n                  color=\"default\"\r\n                />\r\n              }\r\n              label=\"Association\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                //   checked={estMarque}\r\n                //   onChange={(e) => setEstMarque(e.target.checked)}\r\n                  name=\"estMarque\"\r\n                  color=\"default\"\r\n                />\r\n              }\r\n              label=\"Marque\"\r\n            />\r\n          </FormGroup>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6} md={6}>\r\n        <FormControl\r\n          required\r\n          component=\"fieldset\"\r\n          className={classes.formControl}\r\n        >\r\n          <FormLabel component=\"legend\">Type de l'offre</FormLabel>\r\n          <FormGroup>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                //   checked={estAlim}\r\n                //   onChange={(e) => setEstAlim(e.target.checked)}\r\n                  name=\"Alimentation\"\r\n                  color=\"default\"\r\n                />\r\n              }\r\n              label=\"Alimentation\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                //   checked={estAccess}\r\n                //   onChange={(e) => setEstAccess(e.target.checked)}\r\n                  name=\"Accessoire\"\r\n                  color=\"default\"\r\n                />\r\n              }\r\n              label=\"Accessoire\"\r\n            />\r\n            <FormControl>\r\n              <InputLabel>Services</InputLabel>\r\n              <Select\r\n                multiple\r\n                // value={nomsServicesCHoisis}\r\n                // onChange={handleChange}\r\n                input={<Input id=\"select-multiple-checkbox\" />}\r\n                // renderValue={(selected) => selected.join(\", \")}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {/* {nomsServices.map((name) => (\r\n                  <MenuItem key={name} value={name}>\r\n                    <Checkbox\r\n                      checked={nomsServicesCHoisis.indexOf(name) > -1}\r\n                    />\r\n                    <ListItemText primary={name} />\r\n                  </MenuItem>\r\n                ))} */}\r\n              </Select>\r\n            </FormControl>\r\n          </FormGroup>\r\n        </FormControl>\r\n      </Grid>\r\n    </Grid>\r\n    {/* {alertOrganization ? (\r\n      <Alert severity=\"error\">{alertOrganization}</Alert>\r\n    ) : (\r\n      <></>\r\n    )} */}\r\n    {/* {validAdresse === false && submited === true ? (\r\n      <Alert severity=\"error\">Adresse non complétée</Alert>\r\n    ) : (\r\n      <></>\r\n    )} */}\r\n    <Box mt={10}>\r\n      <Grid container spacing={10} justify=\"space-around\">\r\n        <Button\r\n          variant=\"contained\"\r\n          style={{ backgroundColor: colors.red }}\r\n          className={classes.btn}\r\n        //   onClick={() => setPageId(pageId - 1)}\r\n        >\r\n          Précédent\r\n        </Button>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          style={{ backgroundColor: colors.red }}\r\n          className={classes.btn}\r\n        >\r\n          Suivant &gt;\r\n        </Button>\r\n      </Grid>\r\n    </Box>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default From2"]},"metadata":{},"sourceType":"module"}