{"ast":null,"code":"var _jsxFileName = \"D:\\\\All - Projects\\\\PROJECTS - Gitkraken\\\\Project-12 - BigNova PetsAnimals\\\\animals-pets\\\\src\\\\pages\\\\Register\\\\Components\\\\FormRegister.js\",\n    _s = $RefreshSig$();\n\n/*eslint-disable*/\nimport { Box, Paper } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { Form, Formik } from \"formik\";\nimport { UseRegister } from \"../hooks/useForm\";\nimport From1 from \"./From1\";\nimport From2 from \"./From2\";\nimport { useStyles } from \"../hooks/Styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormRegister(props) {\n  _s();\n\n  const {\n    RegsiterSchema,\n    registerValues\n  } = UseRegister();\n  const [pageId, setPageId] = useState(0); //numéro de page du formulaire d'inscription (0,1,2)\n\n  const classes = useStyles();\n\n  const GetFormContent = ({\n    formik\n  }) => {\n    switch (pageId) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(From1, {\n          formik: formik\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 16\n        }, this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(From2, {\n          formik: formik\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 16\n        }, this);\n\n      default:\n        break;\n    }\n  };\n\n  const [Values, setValues] = useState(false); //   const handelFormik = (values)=>{\n  //       setValues(values)\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.IndexPanier,\n    elevation: 0,\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      className: classes.Form,\n      initialValues: registerValues,\n      validationSchema: RegsiterSchema,\n      children: formik => {\n        console.log(\"formik---------\", formik);\n\n        if (formik.errors) {\n          setValues(true);\n          console.log(\"values\", Values);\n        } else {\n          setValues(false);\n          console.log(\"values\", Values);\n        }\n\n        return [/*#__PURE__*/_jsxDEV(Form, {\n          autoComplete: \"on\",\n          name: \"hotel\" // className={classes.FormikHotelInfoForm}\n          ,\n          children: /*#__PURE__*/_jsxDEV(GetFormContent, {\n            formik: formik\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)];\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormRegister, \"LQYNigTJ5XBGdrH7MaRJPwQmq7Q=\", false, function () {\n  return [useStyles];\n});\n\n_c = FormRegister;\nexport default FormRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormRegister\");","map":{"version":3,"sources":["D:/All - Projects/PROJECTS - Gitkraken/Project-12 - BigNova PetsAnimals/animals-pets/src/pages/Register/Components/FormRegister.js"],"names":["Box","Paper","React","useState","Form","Formik","UseRegister","From1","From2","useStyles","FormRegister","props","RegsiterSchema","registerValues","pageId","setPageId","classes","GetFormContent","formik","Values","setValues","IndexPanier","console","log","errors"],"mappings":";;;AAAA;AACA,SAASA,GAAT,EAAcC,KAAd,QAA2B,mBAA3B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAqCP,WAAW,EAAtD;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,CAAD,CAApC,CAF2B,CAEc;;AACzC,QAAMa,OAAO,GAAGP,SAAS,EAAzB;;AAEA,QAAMQ,cAAc,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AACrC,YAAQJ,MAAR;AACE,WAAK,CAAL;AACE,4BAAO,QAAC,KAAD;AAAO,UAAA,MAAM,EAAEI;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACF,WAAK,CAAL;AACE,4BAAO,QAAC,KAAD;AAAO,UAAA,MAAM,EAAEA;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;;AAEF;AACE;AAPJ;AASD,GAVD;;AAWA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,KAAD,CAApC,CAhB2B,CAiB3B;AACA;AAEA;;AAEA,sBACE,QAAC,KAAD;AAAO,IAAA,SAAS,EAAEa,OAAO,CAACK,WAA1B;AAAuC,IAAA,SAAS,EAAE,CAAlD;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,SAAS,EAAEL,OAAO,CAACZ,IADrB;AAEE,MAAA,aAAa,EAAES,cAFjB;AAGE,MAAA,gBAAgB,EAAED,cAHpB;AAAA,gBAOMM,MAAD,IAAY;AACXI,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,MAA/B;;AACA,YAAIA,MAAM,CAACM,MAAX,EAAmB;AACjBJ,UAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,MAAtB;AACD,SAHD,MAGO;AACLC,UAAAA,SAAS,CAAC,KAAD,CAAT;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,MAAtB;AACD;;AAED,eAAO,cACL,QAAC,IAAD;AACE,UAAA,YAAY,EAAC,IADf;AAEE,UAAA,IAAI,EAAC,OAFP,CAGE;AAHF;AAAA,iCAKE,QAAC,cAAD;AAAgB,YAAA,MAAM,EAAED;AAAxB;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBADK,CAAP;AASD;AA1BL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GAzDQR,Y;UAGSD,S;;;KAHTC,Y;AA2DT,eAAeA,YAAf","sourcesContent":["/*eslint-disable*/\r\nimport { Box, Paper } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport { Form, Formik } from \"formik\";\r\nimport { UseRegister } from \"../hooks/useForm\";\r\nimport From1 from \"./From1\";\r\nimport From2 from \"./From2\";\r\nimport { useStyles } from \"../hooks/Styles\";\r\n\r\nfunction FormRegister(props) {\r\n  const { RegsiterSchema, registerValues } = UseRegister();\r\n  const [pageId, setPageId] = useState(0); //numéro de page du formulaire d'inscription (0,1,2)\r\n  const classes = useStyles();\r\n\r\n  const GetFormContent = ({ formik }) => {\r\n    switch (pageId) {\r\n      case 0:\r\n        return <From1 formik={formik} />;\r\n      case 1:\r\n        return <From2 formik={formik} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const [Values, setValues] = useState(false);\r\n  //   const handelFormik = (values)=>{\r\n  //       setValues(values)\r\n\r\n  //   }\r\n\r\n  return (\r\n    <Paper className={classes.IndexPanier} elevation={0}>\r\n      <Formik\r\n        className={classes.Form}\r\n        initialValues={registerValues}\r\n        validationSchema={RegsiterSchema}\r\n      >\r\n     \r\n     \r\n          {(formik) => {\r\n            console.log(\"formik---------\", formik);\r\n            if (formik.errors) {\r\n              setValues(true);\r\n              console.log(\"values\", Values);\r\n            } else {\r\n              setValues(false);\r\n              console.log(\"values\", Values);\r\n            }\r\n\r\n            return [\r\n              <Form\r\n                autoComplete=\"on\"\r\n                name=\"hotel\"\r\n                // className={classes.FormikHotelInfoForm}\r\n              >\r\n                <GetFormContent formik={formik} />\r\n              </Form>\r\n            ];\r\n          }}\r\n\r\n          \r\n      \r\n      </Formik>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default FormRegister;\r\n"]},"metadata":{},"sourceType":"module"}