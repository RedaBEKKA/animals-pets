{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\BigNova-Projects\\\\BigNova-Pets Animals\\\\ClonedFromGitHub\\\\animals-pets\\\\src\\\\pages\\\\Register\\\\Components\\\\Form2\\\\Components\\\\CheckboxGroup.js\";\nimport React from \"react\";\nimport { Field, ErrorMessage } from \"formik\";\nimport TextError from \"../../TextError\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CheckboxGroup(props) {\n  const {\n    label,\n    name,\n    options,\n    ...rest\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-control\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Field, {\n      name: name,\n      children: field => {\n        console.log(\"field\", field);\n        return options.map(option => {\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: option.value,\n              ...field,\n              ...rest,\n              value: option.value // checked={field?.value.includes(option.value)}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: option.value,\n              children: option.key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this)]\n          }, option.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this);\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      component: TextError,\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = CheckboxGroup;\nexport default CheckboxGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxGroup\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/BigNova-Projects/BigNova-Pets Animals/ClonedFromGitHub/animals-pets/src/pages/Register/Components/Form2/Components/CheckboxGroup.js"],"names":["React","Field","ErrorMessage","TextError","CheckboxGroup","props","label","name","options","rest","field","console","log","map","option","value","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,QAApC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,OAAf;AAAwB,OAAGC;AAA3B,MAAoCJ,KAA1C;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAA,gBAAQC;AAAR;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEC,IAAb;AAAA,gBACIG,KAAD,IAAW;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AAEA,eAAOF,OAAO,CAACK,GAAR,CAAaC,MAAD,IAAY;AAC7B,8BACE,QAAC,KAAD,CAAO,QAAP;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,EAAE,EAAEA,MAAM,CAACC,KAFb;AAAA,iBAGML,KAHN;AAAA,iBAIMD,IAJN;AAKE,cAAA,KAAK,EAAEK,MAAM,CAACC,KALhB,CAME;;AANF;AAAA;AAAA;AAAA;AAAA,oBADF,eASE;AAAO,cAAA,OAAO,EAAED,MAAM,CAACC,KAAvB;AAAA,wBAA+BD,MAAM,CAACE;AAAtC;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA,aAAqBF,MAAM,CAACE,GAA5B;AAAA;AAAA;AAAA;AAAA,kBADF;AAaD,SAdM,CAAP;AAeD;AAnBH;AAAA;AAAA;AAAA;AAAA,YAFF,eAuBE,QAAC,YAAD;AAAc,MAAA,SAAS,EAAEb,SAAzB;AAAoC,MAAA,IAAI,EAAEI;AAA1C;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;KA7BQH,a;AA+BT,eAAeA,aAAf","sourcesContent":["import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport TextError from \"../../TextError\";\r\n\r\nfunction CheckboxGroup(props) {\r\n  const { label, name, options, ...rest } = props;\r\n  return (\r\n    <div className=\"form-control\">\r\n      <label>{label}</label>\r\n      <Field name={name}>\r\n        {(field) => {\r\n          console.log(\"field\", field);\r\n\r\n          return options.map((option) => {\r\n            return (\r\n              <React.Fragment key={option.key}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id={option.value}\r\n                  {...field}\r\n                  {...rest}\r\n                  value={option.value}\r\n                  // checked={field?.value.includes(option.value)}\r\n                />\r\n                <label htmlFor={option.value}>{option.key}</label>\r\n              </React.Fragment>\r\n            );\r\n          });\r\n        }}\r\n      </Field>\r\n      <ErrorMessage component={TextError} name={name} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckboxGroup;\r\n"]},"metadata":{},"sourceType":"module"}