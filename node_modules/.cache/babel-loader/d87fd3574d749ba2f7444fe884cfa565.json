{"ast":null,"code":"var _jsxFileName = \"/media/reda/F4C8104CC810100A/Project/tech-instinct/mister-coocky-web-app-client/src/pages/Statistics.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from \"@material-ui/core\";\nimport { Header, Title } from \"../components\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport { colors } from \"../themes/colors\";\nimport { Bar } from 'react-chartjs-2';\nimport Input from \"@material-ui/core/Input\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { Link } from \"react-router-dom\";\nimport misterCoockyApi from '../constante/apiUrl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: 300,\n      maxWidth: 50\n    }\n  },\n  // Show dropdow at bottom of select\n  getContentAnchorEl: null,\n  anchorOrigin: {\n    vertical: \"bottom\",\n    horizontal: \"left\"\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  btn: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    width: '100%',\n    height: '0px'\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n    maxWidth: 300\n  }\n}));\n/**\n * Page de statistiques de produits\n * @returns {*}\n * @constructor\n */\n\nfunction Statistics() {\n  _s();\n\n  const classes = useStyles();\n  const [productsNames, setProductsNames] = useState([]);\n  const [productsClicks, setProductsClicks] = useState([]);\n  const [productsSelected, setProductsSelected] = useState([]);\n  /**\n   * Récupération des produits de l'utilisateur\n   */\n\n  useEffect(() => {\n    fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: `\n                    query{​​​​​​​\n                        getItemsBySupplierId(id:\"${localStorage.getItem('supplierId')}\"){​​​​​​​\n                            id\n                            product{\n                                name\n                            }\n                            numberOfClick\n                        }​​​​​​​\n                    }`\n      })\n    }).then(res => res.json()).then(json => {\n      let tmpProductsName = [];\n      let tmpProductsClicks = [];\n      if (json.data.getItemsBySupplierId) json.data.getItemsBySupplierId.forEach(produit => {\n        tmpProductsName.push(produit.product.name);\n        tmpProductsClicks.push(produit.numberOfClick);\n      });\n      setProductsNames(tmpProductsName);\n      setProductsClicks(tmpProductsClicks);\n      setProductsSelected([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]); //on n'affiche que les 20premiers\n    });\n  }, []);\n  /**\n   * Récupération des noms des produits\n   * @returns {Array}\n   */\n\n  function getSelectedNames() {\n    let selectedNames = [];\n\n    for (let i = 0; i < productsNames.length; i++) {\n      if (productsSelected.includes(i)) {\n        selectedNames.push(productsNames[i]);\n      }\n    }\n\n    return selectedNames;\n  }\n  /**\n   * Récupération des nombres de clicks des produits\n   * @returns {Array}\n   */\n\n\n  function getSelectedClicks() {\n    let selectedClicks = [];\n\n    for (let i = 0; i < productsClicks.length; i++) {\n      if (productsSelected.includes(i)) {\n        selectedClicks.push(productsClicks[i]);\n      }\n    }\n\n    return selectedClicks;\n  }\n  /**\n   * Lors du click sur un select\n   * @param event\n   */\n\n\n  function handleChange(event) {\n    let changeProductState = -1; //on récupère le produit changé\n\n    productsNames.map((product, index) => {\n      if (!event.target.value.includes(product)) {\n        changeProductState = index;\n      }\n    }); //on change le produit concerné\n\n    let tmpSelected = [];\n    productsSelected.map(selec => {\n      tmpSelected.push(selec);\n    }); //on rerempli par les valeurs initiales\n\n    if (tmpSelected.includes(changeProductState)) {\n      //lors d'une suppression\n      const index = tmpSelected.indexOf(changeProductState);\n\n      if (index > -1) {\n        tmpSelected.splice(index, 1);\n      }\n    } else {\n      //lors d'un ajout\n      tmpSelected.push(changeProductState);\n    }\n\n    setProductsSelected(tmpSelected);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        name: \"SMR — Statistiques\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 5,\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            component: Link,\n            to: \"/products\",\n            className: classes.btn,\n            variant: \"contained\",\n            style: {\n              backgroundColor: colors.grey\n            },\n            children: \"Produits ajout\\xE9s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            component: Link,\n            to: \"/addproduct\",\n            className: classes.btn,\n            variant: \"contained\",\n            style: {\n              backgroundColor: colors.grey\n            },\n            children: \"Ajout d'un produit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            component: Link,\n            to: \"/statistics\",\n            className: classes.btn,\n            variant: \"contained\",\n            style: {\n              backgroundColor: colors.brown\n            },\n            children: \"Statistiques\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"select-multiple-checkbox\",\n              children: \"Filtrer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              multiple: true,\n              value: productsNames,\n              onChange: handleChange,\n              input: /*#__PURE__*/_jsxDEV(Input, {\n                id: \"select-multiple-checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 40\n              }, this),\n              renderValue: selected => selected.join(\", \"),\n              MenuProps: MenuProps,\n              children: productsNames.map((name, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: name,\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: productsSelected.includes(name)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 41\n                }, this)]\n              }, name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: {\n            labels: getSelectedNames(),\n            datasets: [{\n              label: 'Nombre de vues',\n              data: getSelectedClicks(),\n              backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n              borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n              borderWidth: 1\n            }]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Statistics, \"/HW2kwNCELDhlT6OafHeEZYAJic=\", false, function () {\n  return [useStyles];\n});\n\n_c = Statistics;\nexport default Statistics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["/media/reda/F4C8104CC810100A/Project/tech-instinct/mister-coocky-web-app-client/src/pages/Statistics.js"],"names":["React","useEffect","useState","makeStyles","Header","Title","Container","Grid","Button","Box","colors","Bar","Input","FormControl","InputLabel","Select","ListItemText","Checkbox","MenuItem","Link","misterCoockyApi","MenuProps","PaperProps","style","maxHeight","maxWidth","getContentAnchorEl","anchorOrigin","vertical","horizontal","useStyles","theme","root","flexGrow","btn","padding","spacing","color","palette","text","secondary","width","height","formControl","margin","unit","minWidth","Statistics","classes","productsNames","setProductsNames","productsClicks","setProductsClicks","productsSelected","setProductsSelected","fetch","method","headers","body","JSON","stringify","query","localStorage","getItem","then","res","json","tmpProductsName","tmpProductsClicks","data","getItemsBySupplierId","forEach","produit","push","product","name","numberOfClick","getSelectedNames","selectedNames","i","length","includes","getSelectedClicks","selectedClicks","handleChange","event","changeProductState","map","index","target","value","tmpSelected","selec","indexOf","splice","backgroundColor","grey","brown","selected","join","labels","datasets","label","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {makeStyles} from \"@material-ui/core\";\nimport {Header, Title} from \"../components\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport {colors} from \"../themes/colors\";\nimport {Bar} from 'react-chartjs-2';\nimport Input from \"@material-ui/core/Input\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {Link} from \"react-router-dom\";\nimport misterCoockyApi from '../constante/apiUrl'\n\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: 300,\n            maxWidth: 50\n        }\n    },\n    // Show dropdow at bottom of select\n    getContentAnchorEl: null,\n    anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n    }\n};\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    btn: {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        width: '100%',\n        height: '0px',\n    },\n    formControl: {\n        margin: theme.spacing.unit,\n        minWidth: 120,\n        maxWidth: 300\n    }\n}));\n\n/**\n * Page de statistiques de produits\n * @returns {*}\n * @constructor\n */\nfunction Statistics() {\n    const classes = useStyles();\n    const [productsNames, setProductsNames] = useState([]);\n    const [productsClicks, setProductsClicks] = useState([]);\n    const [productsSelected, setProductsSelected] = useState([]);\n\n    /**\n     * Récupération des produits de l'utilisateur\n     */\n    useEffect(() => {\n        fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                query: `\n                    query{​​​​​​​\n                        getItemsBySupplierId(id:\"${localStorage.getItem('supplierId')}\"){​​​​​​​\n                            id\n                            product{\n                                name\n                            }\n                            numberOfClick\n                        }​​​​​​​\n                    }`,\n            }),\n        })\n            .then((res) => res.json())\n            .then((json) => {\n                let tmpProductsName = [];\n                let tmpProductsClicks = [];\n                if (json.data.getItemsBySupplierId)\n                    json.data.getItemsBySupplierId.forEach((produit) => {\n                        tmpProductsName.push(produit.product.name);\n                        tmpProductsClicks.push(produit.numberOfClick)\n                    });\n                setProductsNames(tmpProductsName);\n                setProductsClicks(tmpProductsClicks);\n                setProductsSelected([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])   //on n'affiche que les 20premiers\n            })\n    }, []);\n\n    /**\n     * Récupération des noms des produits\n     * @returns {Array}\n     */\n    function getSelectedNames() {\n        let selectedNames = [];\n        for (let i = 0; i < productsNames.length; i++) {\n            if (productsSelected.includes(i)) {\n                selectedNames.push(productsNames[i])\n            }\n        }\n        return selectedNames\n    }\n\n    /**\n     * Récupération des nombres de clicks des produits\n     * @returns {Array}\n     */\n    function getSelectedClicks() {\n        let selectedClicks = [];\n        for (let i = 0; i < productsClicks.length; i++) {\n            if (productsSelected.includes(i)) {\n                selectedClicks.push(productsClicks[i])\n            }\n        }\n        return selectedClicks\n    }\n\n    /**\n     * Lors du click sur un select\n     * @param event\n     */\n    function handleChange(event) {\n        let changeProductState = -1;\n        //on récupère le produit changé\n        productsNames.map((product, index) => {\n            if (!event.target.value.includes(product)) {\n                changeProductState = index\n            }\n        });\n        //on change le produit concerné\n        let tmpSelected = [];\n        productsSelected.map(selec => {\n            tmpSelected.push(selec)\n        });   //on rerempli par les valeurs initiales\n        if (tmpSelected.includes(changeProductState)) {  //lors d'une suppression\n            const index = tmpSelected.indexOf(changeProductState);\n            if (index > -1) {\n                tmpSelected.splice(index, 1);\n            }\n        } else {  //lors d'un ajout\n            tmpSelected.push(changeProductState)\n        }\n        setProductsSelected(tmpSelected)\n    }\n\n    return (\n        <div>\n            <Header/>\n            <Container>\n                <Title name={\"SMR — Statistiques\"}/>\n                <Grid container spacing={5} justify=\"center\">\n                    <Grid item xs={12} sm={3}>\n                        <Button component={Link} to=\"/products\" className={classes.btn} variant=\"contained\"\n                                style={{backgroundColor: colors.grey}}>Produits ajoutés</Button>\n                    </Grid>\n\n                    <Grid item xs={12} sm={3}>\n                        <Button component={Link} to=\"/addproduct\" className={classes.btn} variant=\"contained\"\n                                style={{backgroundColor: colors.grey}}>Ajout d'un produit</Button>\n                    </Grid>\n                    <Grid item xs={12} sm={3}>\n                        <Button component={Link} to=\"/statistics\" className={classes.btn} variant=\"contained\"\n                                style={{backgroundColor: colors.brown}}>Statistiques</Button>\n                    </Grid>\n                </Grid>\n\n                <Box mt={3}>\n                    <Grid container justify=\"flex-end\">\n                        <FormControl className={classes.formControl}>\n                            <InputLabel htmlFor=\"select-multiple-checkbox\">Filtrer</InputLabel>\n                            <Select\n                                multiple\n                                value={productsNames}\n                                onChange={handleChange}\n                                input={<Input id=\"select-multiple-checkbox\"/>}\n                                renderValue={selected => selected.join(\", \")}\n                                MenuProps={MenuProps}\n                            >\n                                {productsNames.map((name, index) => (\n                                    <MenuItem key={name} value={name}>\n                                        <Checkbox checked={productsSelected.includes(name)}/>\n                                        <ListItemText primary={name}/>\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Bar\n                        data={{\n                            labels: getSelectedNames(),\n                            datasets: [{\n                                label: 'Nombre de vues',\n                                data: getSelectedClicks(),\n                                backgroundColor: [\n                                    'rgba(255, 99, 132, 0.2)',\n                                    'rgba(54, 162, 235, 0.2)',\n                                    'rgba(255, 206, 86, 0.2)',\n                                    'rgba(75, 192, 192, 0.2)',\n                                    'rgba(153, 102, 255, 0.2)',\n                                    'rgba(255, 159, 64, 0.2)'\n                                ],\n                                borderColor: [\n                                    'rgba(255, 99, 132, 1)',\n                                    'rgba(54, 162, 235, 1)',\n                                    'rgba(255, 206, 86, 1)',\n                                    'rgba(75, 192, 192, 1)',\n                                    'rgba(153, 102, 255, 1)',\n                                    'rgba(255, 159, 64, 1)'\n                                ],\n                                borderWidth: 1\n                            }]\n                        }}\n                    />\n                </Box>\n            </Container>\n        </div>\n\n    )\n}\n\nexport default Statistics\n"]},"metadata":{},"sourceType":"module"}