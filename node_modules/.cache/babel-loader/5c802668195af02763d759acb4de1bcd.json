{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\BigNova-Projects\\\\BigNova-Pets Animals\\\\ClonedFromGitHub\\\\animals-pets\\\\src\\\\pages\\\\Addproduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from \"@material-ui/core\";\nimport { Header, Title } from \"../components\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport { colors } from \"../themes/colors\";\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { Link } from 'react-router-dom';\nimport misterCoockyApi from '../constante/apiUrl';\nimport Alert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: 300,\n      maxWidth: 50\n    }\n  },\n  getContentAnchorEl: null,\n  anchorOrigin: {\n    vertical: \"bottom\",\n    horizontal: \"left\"\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  btn: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    width: '100%',\n    height: '0px'\n  },\n  btn2: {\n    fontSize: \"0.7em\",\n    marginTop: \"10px\"\n  },\n  formControl: {\n    width: 200,\n    margin: \"5px 0 5px 0\"\n  },\n  descriptionControl: {\n    width: 200,\n    height: 300,\n    margin: \"5px 0 5px 0\"\n  },\n  item: {\n    maxWidth: 400,\n    padding: theme.spacing(2)\n  },\n  typotext: {\n    fontSize: '1.4em'\n  }\n}));\n/**\r\n * Composant de page d'ajout d'un produit\r\n * @param props\r\n * @returns {*}\r\n * @constructor\r\n */\n\nfunction AddProduct(props) {\n  _s();\n\n  const classes = useStyles();\n  const [selectedItemToEdit, setSelectedItemToEdit] = useState(props.itemId);\n  const [pageId, setPageId] = useState(0);\n  const [prix, setPrix] = useState(\"\");\n  const [nomProduit, setNomProduit] = useState(\"\");\n  const [marque, setMarque] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [estSain, setEstSain] = useState(false);\n  const [estMalin, setEstMalin] = useState(false);\n  const [estResponsable, setEstResponsable] = useState(false);\n  const [typeProduitId, setTypeProduitId] = useState([]);\n  const [typeProduitList, setTypeProduitList] = useState([]);\n  const [lienProduit, setLienProduit] = useState(\"\");\n  const [animalId, setAnimalId] = useState(\"\");\n  const [animalList, setAnimalList] = useState([]);\n  const [fileTransmited, setFileTransmited] = useState(false);\n  const [discount, setDiscount] = useState(\"\");\n  const [categoryList, setCategoryList] = useState([]);\n  const [categoryId, setCategoryId] = useState(\"\");\n  const [sousCateroriesList, setSousCateroriesList] = useState([]);\n  const [sousCategorieId, setSousCategorieId] = useState(\"\");\n  /**\r\n   * récupère l'item si en mode édition produit\r\n   * et récupère la liste des animaux\r\n   * et récupère les offres\r\n   */\n\n  useEffect(() => {\n    if (selectedItemToEdit) {\n      //si mode configuration\n      fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n        //on récupère l'item\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: `\n                    query{​​​​​​​\n                      item(id:\"${selectedItemToEdit}\"){​​​​​​​\n                        id\n                        ttcPrice\n                        mark{\n                            id\n                            name\n                        }\n                        isHealthy\n                        isSmart\n                        isResponsible\n                        discount\n                        pet{\n                            id\n                            name\n                        }\n                        product{\n                            id\n                            name\n                        }\n                        offer{\n                            id\n                            name\n                        }\n                        comment\n                        link\n                        uri\n                        category{\n                            id\n                            name\n                        }\n                        subCategories{\n                            id\n                            name\n                        }\n                      }​​​​​​​\n                    }`\n        })\n      }).then(res => res.json()).then(function (result) {\n        setDescription(result.data.item.comment);\n        setEstMalin(result.data.item.isSmart);\n        setEstResponsable(result.data.item.isResponsible);\n        setEstSain(result.data.item.isHealthy);\n        setPrix(Math.round(result.data.item.ttcPrice / (1 - Math.abs(result.data.item.discount / 100))));\n        setImage(result.data.item.uri);\n        setMarque(result.data.item.mark.name);\n        setDiscount(result.data.item.discount);\n        setNomProduit(result.data.item.product.name);\n        setLienProduit(result.data.item.link);\n        setTypeProduitId(result.data.item.offer.id);\n        setAnimalId(result.data.item.pet.id);\n\n        if (result.data.item.subCategories[0] != null) {\n          setSousCategorieId(result.data.item.subCategories[0].id);\n        }\n\n        generateCategories(result.data.item.pet.id, result.data.item.offer.id);\n        onCategorySelected(result.data.item.pet.id, result.data.item.category.id);\n      });\n    } //récupérations de la liste des animaux\n\n\n    fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: `\n                    query{​​​​​​​\n                        pets{​​​​​​​\n                            id\n                            name\n                        }​​​​​​​\n                    }`\n      })\n    }).then(res => res.json()).then(function (result) {\n      setAnimalList(result.data.pets);\n    });\n    fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: `\n                    query{​​​​​​​\n                        getOffers{​​​​​​​\n                            id\n                            name\n                        }​​​​​​​\n                    }`\n      })\n    }).then(res => res.json()).then(function (result) {\n      setTypeProduitList(result.data.getOffers);\n    });\n  }, []);\n  /**\r\n   * Lors de l'import d'un fichier\r\n   * @param event\r\n   */\n\n  function handleFile(event) {\n    const file = event.target.files[0];\n    let data = new FormData();\n    data.append(\"file\", file);\n    const userId = localStorage.getItem('userId');\n    fetch(`${misterCoockyApi.misterCoockyApi}/uploadFile?sectionName=smr&userId=${userId}`, {\n      method: 'POST',\n      body: data\n    }).then(res => res.json()).then(function (result) {\n      setFileTransmited(true);\n    }).catch(function (error) {\n      console.log('Erreur pendant l\\'upload : ' + error.message);\n    });\n  }\n  /**\r\n   * Lors de la sélection d'un animal\r\n   * @param animalId\r\n   */\n\n\n  function handleAnimalChange(animalId) {\n    setAnimalId(animalId);\n    generateCategories(animalId, typeProduitId);\n  }\n  /**\r\n   * Lors de la sélection d'un type\r\n   * @param type\r\n   */\n\n\n  function handleTypeChange(type) {\n    setTypeProduitId(type);\n    generateCategories(animalId, type);\n  }\n  /**\r\n   * récupération des catégories\r\n   * @param animal\r\n   * @param offer\r\n   */\n\n\n  function generateCategories(animal, offer) {\n    setCategoryList([]);\n    setSousCateroriesList([]);\n\n    if (animal && offer) {\n      fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: `\n                    query{​​​​​​​\n                         getCategoriesByPetIdAndOfferId(petId:\"${animal}\", offerId:\"${offer}\"){\n                            id\n                            name\n                        }​​​​​​​    \n                    }`\n        })\n      }).then(res => res.json()).then(function (result) {\n        setCategoryList(result.data.getCategoriesByPetIdAndOfferId);\n      });\n    }\n  }\n  /**\r\n   * Lors de la sélection d'une catégorie\r\n   * @param pet\r\n   * @param category\r\n   */\n\n\n  function onCategorySelected(pet, category) {\n    setSousCateroriesList([]);\n    setCategoryId(category);\n    fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: `\n                    query{​​​​​​​\n                        getSubCategoriesByPetAndCategoryIds(petId:\"${pet}\", categoryId:\"${category}\"){\n                            id\n                            name\n                        }​​​​​​​\n                    }`\n      })\n    }).then(res => res.json()).then(function (result) {\n      setSousCateroriesList(arrUnique(result.data.getSubCategoriesByPetAndCategoryIds));\n    });\n  }\n  /**\r\n   * fonction permettant de supprimer les doublons d'une liste\r\n   * @param array\r\n   * @returns {*}\r\n   */\n\n\n  function arrUnique(array) {\n    var clean = array.filter((arr, index, self) => index === self.findIndex(t => t.name === arr.name));\n    return clean;\n  }\n  /**\r\n   * Lors de l'ajout d'une image / mise en base64\r\n   * @param file\r\n   */\n\n\n  function imageUploaded(file) {\n    let base64String = \"\";\n    let reader = new FileReader();\n\n    reader.onload = function () {\n      base64String = reader.result.replace(\"data:\", \"\").replace(/^.+,/, \"\");\n      setImage(base64String);\n    };\n\n    reader.readAsDataURL(file);\n  }\n  /**\r\n   * Prévisiualisation de l'image impotée\r\n   * @param e\r\n   */\n\n\n  function handleImagePreview(e) {\n    if (e.target.files[0]) {\n      imageUploaded(e.target.files[0]);\n    }\n  }\n  /**\r\n   * Lors de l'envoi du formulaire de création\r\n   * @param e\r\n   */\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    let tmpDiscount = discount;\n\n    if (discount === \"\") {\n      tmpDiscount = 0;\n    }\n\n    if (selectedItemToEdit) {\n      //si mode d'édition\n      fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: `\n                        mutation updateItem($input: ItemInput){\n                            updateItem(id: \"${selectedItemToEdit}\", item: $input) {​​​​​​\n                            id\n                          }​​​​​​​\n                        }`,\n          variables: {\n            \"input\": {\n              \"price\": prix,\n              \"comment\": description,\n              \"isHealthy\": Boolean(estSain),\n              \"isSmart\": Boolean(estMalin),\n              \"isResponsible\": Boolean(estResponsable),\n              \"link\": lienProduit,\n              \"uri\": image,\n              \"discount\": tmpDiscount,\n              \"productName\": nomProduit,\n              \"markName\": marque,\n              \"petId\": animalId,\n              \"offerId\": typeProduitId,\n              \"categoryId\": categoryId,\n              \"subCategoryId\": sousCategorieId\n            }\n          }\n        })\n      }).then(res => res.json()).then(function (result) {\n        if (result.data.updateItem.id !== null) {\n          window.location.href = '/products';\n        }\n      });\n    } else {\n      let tmpDiscount = discount;\n\n      if (discount === \"\") {\n        tmpDiscount = 0;\n      }\n\n      fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: `\n                        mutation CreateItem($input: ItemInput){\n                            createItem(item: $input) {​​​​​​\n                            id\n                          }​​​​​​​\n                        }`,\n          variables: {\n            \"input\": {\n              \"price\": prix,\n              \"comment\": description,\n              \"isHealthy\": estSain,\n              \"isSmart\": estMalin,\n              \"isResponsible\": estResponsable,\n              \"link\": lienProduit,\n              \"uri\": image,\n              \"userId\": localStorage.getItem('userId'),\n              \"productName\": nomProduit,\n              \"discount\": tmpDiscount,\n              \"markName\": marque,\n              \"supplierId\": localStorage.getItem('supplierId'),\n              \"petId\": animalId,\n              \"offerId\": typeProduitId,\n              \"categoryId\": categoryId,\n              \"subCategoryId\": sousCategorieId,\n              \"organizationId\": localStorage.getItem('organizationId')\n            }\n          }\n        })\n      }).then(res => res.json()).then(function (result) {\n        if (result.data.createItem.id !== null) {\n          window.location.href = '/products';\n        }\n      });\n    }\n  }\n\n  function handlePriceChanges(value) {\n    setPrix(value);\n  }\n  /**\r\n       * Renvoi du contenu de la page\r\n       * @returns {*}\r\n   */\n\n\n  function getAddProductContent() {\n    const dataImg = \"data:image/png;base64,\" + image;\n\n    switch (pageId) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(Box, {\n          mt: 10,\n          children: [selectedItemToEdit ? /*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              color: colors.brown\n            },\n            children: \"Mode \\xE9dition produit \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 50\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.form,\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 1,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                item: true,\n                xs: 12,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  align: 'center',\n                  sm: 12,\n                  md: 6,\n                  lg: 3,\n                  children: [image ? /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: dataImg,\n                    width: 200\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 478,\n                    columnNumber: 49\n                  }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    component: \"label\",\n                    size: 'small',\n                    children: [image ? \"Remplacer l'image\" : \"Ajouter une image\", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"file\",\n                      accept: \"image/*\",\n                      hidden: true,\n                      onChange: handleImagePreview\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 483,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  sm: 12,\n                  md: 6,\n                  lg: 3,\n                  children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    required: true,\n                    spacing: 3,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      id: \"select-animal\",\n                      children: \"Animal\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 489,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      labelId: \"select-animal\",\n                      id: \"select-animal\",\n                      value: animalId,\n                      onChange: event => {\n                        handleAnimalChange(event.target.value);\n                      },\n                      label: \"Animal\",\n                      children: animalList ? animalList.map(array => {\n                        return /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: array.id,\n                          children: array.name\n                        }, array.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 500,\n                          columnNumber: 64\n                        }, this);\n                      }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 490,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 487,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    required: true,\n                    className: classes.formControl,\n                    id: \"idnNom\",\n                    label: \"Nom du produit\",\n                    value: nomProduit,\n                    onChange: e => setNomProduit(e.target.value),\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 506,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    component: \"fieldset\",\n                    className: classes.formControl,\n                    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                      component: \"legend\",\n                      children: \"SMR\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 516,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                          checked: estSain,\n                          color: \"default\",\n                          onChange: e => setEstSain(e.target.checked),\n                          name: \"Sain\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 519,\n                          columnNumber: 62\n                        }, this),\n                        label: \"Sain\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 518,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                          checked: estMalin,\n                          color: \"default\",\n                          onChange: e => setEstMalin(e.target.checked),\n                          name: \"Malin\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 525,\n                          columnNumber: 62\n                        }, this),\n                        label: \"Malin\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 524,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                          checked: estResponsable,\n                          color: \"default\",\n                          onChange: e => setEstResponsable(e.target.checked),\n                          name: \"Responsable\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 531,\n                          columnNumber: 62\n                        }, this),\n                        label: \"Responsable\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 530,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                        className: classes.formControl,\n                        id: \"idnNom\",\n                        label: \"Discount (%)\",\n                        value: discount,\n                        type: \"number\",\n                        InputProps: {\n                          inputProps: {\n                            min: -99,\n                            max: 0,\n                            step: \"0.01\"\n                          }\n                        },\n                        placeholder: \"-0%\",\n                        onChange: e => setDiscount(e.target.value),\n                        variant: \"outlined\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 537,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 517,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 515,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  sm: 12,\n                  md: 6,\n                  lg: 3,\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    required: true,\n                    className: classes.formControl,\n                    id: \"idMarque\",\n                    label: \"Marque\",\n                    value: marque,\n                    onChange: e => setMarque(e.target.value),\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 552,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    required: true,\n                    className: classes.formControl,\n                    id: \"idPrix\",\n                    label: \"Prix\",\n                    type: \"number\",\n                    InputProps: {\n                      inputProps: {\n                        min: 0.0,\n                        step: \"0.01\"\n                      }\n                    },\n                    value: prix,\n                    onChange: e => handlePriceChanges(e.target.value),\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 562,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    required: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      id: \"select-typeProduit\",\n                      children: \"Type de produit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 574,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      labelId: \"select-typeProduit\",\n                      id: \"select-typeProduit\",\n                      value: typeProduitId,\n                      onChange: e => handleTypeChange(e.target.value),\n                      label: \"Type de produit\",\n                      children: typeProduitList ? typeProduitList.map(function (type) {\n                        return /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: type.id,\n                          children: type.name\n                        }, type.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 583,\n                          columnNumber: 64\n                        }, this);\n                      }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 575,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 573,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    required: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      id: \"select-categorie\",\n                      children: \"Cat\\xE9gorie\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 590,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      labelId: \"select-categorie\",\n                      id: \"select-categorie\",\n                      value: categoryId,\n                      onChange: function (event) {\n                        onCategorySelected(animalId, event.target.value);\n                      },\n                      label: \"Cat\\xE9gorie\",\n                      children: categoryList ? categoryList.map(function (cat) {\n                        if (cat) {\n                          return /*#__PURE__*/_jsxDEV(MenuItem, {\n                            value: cat.id,\n                            children: cat.name\n                          }, cat.id, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 602,\n                            columnNumber: 68\n                          }, this);\n                        }\n                      }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 591,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 589,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      id: \"select-sousCategorie\",\n                      children: \"Sous cat\\xE9gorie\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 611,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      labelId: \"select-sousCategorie\",\n                      id: \"select-sousCategorie\",\n                      value: sousCategorieId,\n                      onChange: e => setSousCategorieId(e.target.value),\n                      label: \"Animal\",\n                      children: sousCateroriesList ? sousCateroriesList.map(function (sousCat) {\n                        return /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: sousCat.id,\n                          children: sousCat.name\n                        }, sousCat.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 620,\n                          columnNumber: 64\n                        }, this);\n                      }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 612,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 610,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  sm: 12,\n                  md: 6,\n                  lg: 3,\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    id: \"description\",\n                    label: \"Description\",\n                    multiline: true,\n                    rows: 8,\n                    defaultValue: \"\",\n                    onChange: e => setDescription(e.target.value),\n                    value: description,\n                    className: classes.formControl,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 628,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    required: true,\n                    className: classes.formControl,\n                    id: \"idLien\",\n                    label: \"Lien du produit\",\n                    value: lienProduit,\n                    onChange: e => setLienProduit(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 639,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                item: true,\n                xs: 12,\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 3,\n                  align: 'center'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 651,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 3\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 653,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 3\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 655,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 3,\n                  align: 'center',\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    variant: \"contained\",\n                    style: {\n                      backgroundColor: colors.brown\n                    },\n                    children: \"Valider\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 658,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 657,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 28\n        }, this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          direction: \"column\",\n          align: \"center\",\n          className: classes.root,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            className: classes.paper,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              className: classes.item,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 670,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: true,\n                zeroMinWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.typotext,\n                  children: \"T\\xE9l\\xE9charger le template\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 673,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  href: \"files/formulaire_produits.xlsx\",\n                  className: classes.btn2,\n                  style: {\n                    backgroundColor: colors.red\n                  },\n                  download: true,\n                  target: \"_blank\",\n                  startIcon: /*#__PURE__*/_jsxDEV(GetAppIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 676,\n                    columnNumber: 56\n                  }, this),\n                  children: \"T\\xE9l\\xE9charger le template\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 672,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            className: classes.paper,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              className: classes.item,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 683,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: true,\n                zeroMinWidth: true,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: classes.typotext,\n                  children: \"Remplir le document Excel avec vos diff\\xE9rents produits\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 686,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            className: classes.paper,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              className: classes.item,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 693,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: true,\n                zeroMinWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.typotext,\n                  children: \"Importer votre fichier en .xlxs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 696,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: classes.btn2,\n                  variant: \"contained\",\n                  style: {\n                    backgroundColor: colors.red\n                  },\n                  component: \"label\",\n                  startIcon: /*#__PURE__*/_jsxDEV(GetAppIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 700,\n                    columnNumber: 56\n                  }, this),\n                  children: [\"D\\xE9poser le template \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    accept: \".xlsx\",\n                    type: \"file\",\n                    onChange: e => handleFile(e),\n                    hidden: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 700,\n                    columnNumber: 91\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 698,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n            open: fileTransmited,\n            autoHideDuration: 6000,\n            anchorOrigin: {\n              vertical: \"top\",\n              horizontal: \"center\"\n            },\n            onClose: () => setFileTransmited(false),\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"success\",\n              children: \"Fichier transmis, il sera bient\\xF4t tra\\xEEt\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 28\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          className: classes.paper,\n          align: 'center',\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            className: classes.item,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true,\n              zeroMinWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.typotext,\n                children: \"Importer votre fichier en .xlxs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.btn2,\n                variant: \"contained\",\n                style: {\n                  backgroundColor: colors.red\n                },\n                component: \"label\",\n                startIcon: /*#__PURE__*/_jsxDEV(GetAppIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 725,\n                  columnNumber: 70\n                }, this),\n                children: [\"D\\xE9poser le template \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  accept: \".xlsx\",\n                  type: \"file\",\n                  onChange: e => handleFile(e),\n                  hidden: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 725,\n                  columnNumber: 105\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 723,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n            open: fileTransmited,\n            autoHideDuration: 6000,\n            anchorOrigin: {\n              vertical: \"top\",\n              horizontal: \"center\"\n            },\n            onClose: () => setFileTransmited(false),\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"success\",\n              children: \"Fichier transmis, il sera bient\\xF4t tra\\xEEt\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 28\n        }, this);\n\n      default:\n        break;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        name: \"SMR — Ajouter des Produits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 5,\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            component: Link,\n            to: \"/products\",\n            className: classes.btn,\n            variant: \"contained\",\n            style: {\n              backgroundColor: colors.grey\n            },\n            children: \"Produits ajout\\xE9s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            component: Link,\n            to: \"/addproduct\",\n            className: classes.btn,\n            variant: \"contained\",\n            style: {\n              backgroundColor: colors.brown\n            },\n            children: \"Ajout d'un produit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 755,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            component: Link,\n            to: \"/statistics\",\n            className: classes.btn,\n            variant: \"contained\",\n            style: {\n              backgroundColor: colors.grey\n            },\n            children: \"Statistiques\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 5,\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.btn,\n            variant: \"contained\",\n            style: pageId === 0 ? {\n              backgroundColor: colors.brown\n            } : {\n              backgroundColor: colors.grey\n            },\n            onClick: e => setPageId(0),\n            children: \"Remplir un formulaire\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.btn,\n            variant: \"contained\",\n            style: pageId === 1 ? {\n              backgroundColor: colors.brown\n            } : {\n              backgroundColor: colors.grey\n            },\n            startIcon: /*#__PURE__*/_jsxDEV(GetAppIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 772,\n              columnNumber: 48\n            }, this),\n            onClick: e => setPageId(1),\n            children: \"Remplir un template\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.btn,\n            variant: \"contained\",\n            style: pageId === 2 ? {\n              backgroundColor: colors.brown\n            } : {\n              backgroundColor: colors.grey\n            },\n            startIcon: /*#__PURE__*/_jsxDEV(GetAppIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 778,\n              columnNumber: 48\n            }, this),\n            onClick: e => setPageId(2),\n            children: \"Importer un fichier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 5,\n        children: getAddProductContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 744,\n    columnNumber: 13\n  }, this);\n}\n\n_s(AddProduct, \"fYBNAb4yrEbRPcxG9Dnl6YLuDnU=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddProduct;\nexport default AddProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/BigNova-Projects/BigNova-Pets Animals/ClonedFromGitHub/animals-pets/src/pages/Addproduct.js"],"names":["React","useEffect","useState","makeStyles","Header","Title","Container","Grid","Button","colors","GetAppIcon","Avatar","Typography","Box","InputLabel","FormControl","MenuItem","Select","TextField","Checkbox","FormControlLabel","FormGroup","FormLabel","Link","misterCoockyApi","Alert","Snackbar","MenuProps","PaperProps","style","maxHeight","maxWidth","getContentAnchorEl","anchorOrigin","vertical","horizontal","useStyles","theme","root","flexGrow","btn","padding","spacing","color","palette","text","secondary","width","height","btn2","fontSize","marginTop","formControl","margin","descriptionControl","item","typotext","AddProduct","props","classes","selectedItemToEdit","setSelectedItemToEdit","itemId","pageId","setPageId","prix","setPrix","nomProduit","setNomProduit","marque","setMarque","description","setDescription","image","setImage","estSain","setEstSain","estMalin","setEstMalin","estResponsable","setEstResponsable","typeProduitId","setTypeProduitId","typeProduitList","setTypeProduitList","lienProduit","setLienProduit","animalId","setAnimalId","animalList","setAnimalList","fileTransmited","setFileTransmited","discount","setDiscount","categoryList","setCategoryList","categoryId","setCategoryId","sousCateroriesList","setSousCateroriesList","sousCategorieId","setSousCategorieId","fetch","method","headers","body","JSON","stringify","query","then","res","json","result","data","comment","isSmart","isResponsible","isHealthy","Math","round","ttcPrice","abs","uri","mark","name","product","link","offer","id","pet","subCategories","generateCategories","onCategorySelected","category","pets","getOffers","handleFile","event","file","target","files","FormData","append","userId","localStorage","getItem","catch","error","console","log","message","handleAnimalChange","handleTypeChange","type","animal","getCategoriesByPetIdAndOfferId","arrUnique","getSubCategoriesByPetAndCategoryIds","array","clean","filter","arr","index","self","findIndex","t","imageUploaded","base64String","reader","FileReader","onload","replace","readAsDataURL","handleImagePreview","e","handleSubmit","preventDefault","tmpDiscount","variables","Boolean","updateItem","window","location","href","createItem","handlePriceChanges","value","getAddProductContent","dataImg","brown","form","map","checked","inputProps","min","max","step","cat","sousCat","backgroundColor","paper","red","grey"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,eAA5B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAQC,MAAR,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,eAAP,MAA4B,qBAA5B;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;;AAGA,MAAMC,SAAS,GAAG;AACdC,EAAAA,UAAU,EAAE;AACRC,IAAAA,KAAK,EAAE;AACHC,MAAAA,SAAS,EAAE,GADR;AAEHC,MAAAA,QAAQ,EAAE;AAFP;AADC,GADE;AAOdC,EAAAA,kBAAkB,EAAE,IAPN;AAQdC,EAAAA,YAAY,EAAE;AACVC,IAAAA,QAAQ,EAAE,QADA;AAEVC,IAAAA,UAAU,EAAE;AAFF;AARA,CAAlB;AAcA,MAAMC,SAAS,GAAGjC,UAAU,CAAEkC,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR,GAD+B;AAIrCC,EAAAA,GAAG,EAAE;AACDC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADR;AAEDC,IAAAA,KAAK,EAAEN,KAAK,CAACO,OAAN,CAAcC,IAAd,CAAmBC,SAFzB;AAGDC,IAAAA,KAAK,EAAE,MAHN;AAIDC,IAAAA,MAAM,EAAE;AAJP,GAJgC;AAUrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE,OADR;AAEFC,IAAAA,SAAS,EAAE;AAFT,GAV+B;AAcrCC,EAAAA,WAAW,EAAE;AACTL,IAAAA,KAAK,EAAE,GADE;AAETM,IAAAA,MAAM,EAAE;AAFC,GAdwB;AAkBrCC,EAAAA,kBAAkB,EAAE;AAChBP,IAAAA,KAAK,EAAE,GADS;AAEhBC,IAAAA,MAAM,EAAE,GAFQ;AAGhBK,IAAAA,MAAM,EAAE;AAHQ,GAlBiB;AAuBrCE,EAAAA,IAAI,EAAE;AACFxB,IAAAA,QAAQ,EAAE,GADR;AAEFU,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd;AAFP,GAvB+B;AA2BrCc,EAAAA,QAAQ,EAAE;AACNN,IAAAA,QAAQ,EAAE;AADJ;AA3B2B,CAAZ,CAAD,CAA5B;AAiCA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASO,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAMC,OAAO,GAAGvB,SAAS,EAAzB;AACA,QAAM,CAACwB,kBAAD,EAAqBC,qBAArB,IAA8C3D,QAAQ,CAACwD,KAAK,CAACI,MAAP,CAA5D;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB9D,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAAC+D,IAAD,EAAOC,OAAP,IAAkBhE,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACiE,UAAD,EAAaC,aAAb,IAA8BlE,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACmE,MAAD,EAASC,SAAT,IAAsBpE,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACqE,WAAD,EAAcC,cAAd,IAAgCtE,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACuE,KAAD,EAAQC,QAAR,IAAoBxE,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACyE,OAAD,EAAUC,UAAV,IAAwB1E,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAAC2E,QAAD,EAAWC,WAAX,IAA0B5E,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAC6E,cAAD,EAAiBC,iBAAjB,IAAsC9E,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAAC+E,aAAD,EAAgBC,gBAAhB,IAAoChF,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACiF,eAAD,EAAkBC,kBAAlB,IAAwClF,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACmF,WAAD,EAAcC,cAAd,IAAgCpF,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACqF,QAAD,EAAWC,WAAX,IAA0BtF,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACuF,UAAD,EAAaC,aAAb,IAA8BxF,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACyF,cAAD,EAAiBC,iBAAjB,IAAsC1F,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAAC2F,QAAD,EAAWC,WAAX,IAA0B5F,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAAC6F,YAAD,EAAeC,eAAf,IAAkC9F,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC+F,UAAD,EAAaC,aAAb,IAA8BhG,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACiG,kBAAD,EAAqBC,qBAArB,IAA8ClG,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACmG,eAAD,EAAkBC,kBAAlB,IAAwCpG,QAAQ,CAAC,EAAD,CAAtD;AAEA;AACJ;AACA;AACA;AACA;;AACID,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI2D,kBAAJ,EAAwB;AAAK;AACzB2C,MAAAA,KAAK,CAAE,GAAE/E,eAAe,CAACA,eAAgB,UAApC,EAA+C;AAAK;AACrDgF,QAAAA,MAAM,EAAE,MADwC;AAEhDC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFuC;AAKhDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,KAAK,EAAG;AAC5B;AACA,iCAAiCjD,kBAAmB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtCqC,SAAf;AAL0C,OAA/C,CAAL,CA8CKkD,IA9CL,CA8CWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EA9CnB,EA+CKF,IA/CL,CA+CU,UAAUG,MAAV,EAAkB;AACpBzC,QAAAA,cAAc,CAACyC,MAAM,CAACC,IAAP,CAAY3D,IAAZ,CAAiB4D,OAAlB,CAAd;AACArC,QAAAA,WAAW,CAACmC,MAAM,CAACC,IAAP,CAAY3D,IAAZ,CAAiB6D,OAAlB,CAAX;AACApC,QAAAA,iBAAiB,CAACiC,MAAM,CAACC,IAAP,CAAY3D,IAAZ,CAAiB8D,aAAlB,CAAjB;AACAzC,QAAAA,UAAU,CAACqC,MAAM,CAACC,IAAP,CAAY3D,IAAZ,CAAiB+D,SAAlB,CAAV;AACApD,QAAAA,OAAO,CAACqD,IAAI,CAACC,KAAL,CAAWP,MAAM,CAACC,IAAP,CAAY3D,IAAZ,CAAiBkE,QAAjB,IAA6B,IAAIF,IAAI,CAACG,GAAL,CAAST,MAAM,CAACC,IAAP,CAAY3D,IAAZ,CAAiBsC,QAAjB,GAA4B,GAArC,CAAjC,CAAX,CAAD,CAAP;AACAnB,QAAAA,QAAQ,CAAEuC,MAAM,CAACC,IAAP,CAAY3D,IAAZ,CAAiBoE,GAAnB,CAAR;AACArD,QAAAA,SAAS,CAAC2C,MAAM,CAACC,IAAP,CAAY3D,IAAZ,CAAiBqE,IAAjB,CAAsBC,IAAvB,CAAT;AACA/B,QAAAA,WAAW,CAACmB,MAAM,CAACC,IAAP,CAAY3D,IAAZ,CAAiBsC,QAAlB,CAAX;AACAzB,QAAAA,aAAa,CAAC6C,MAAM,CAACC,IAAP,CAAY3D,IAAZ,CAAiBuE,OAAjB,CAAyBD,IAA1B,CAAb;AACAvC,QAAAA,cAAc,CAAC2B,MAAM,CAACC,IAAP,CAAY3D,IAAZ,CAAiBwE,IAAlB,CAAd;AACA7C,QAAAA,gBAAgB,CAAC+B,MAAM,CAACC,IAAP,CAAY3D,IAAZ,CAAiByE,KAAjB,CAAuBC,EAAxB,CAAhB;AACAzC,QAAAA,WAAW,CAACyB,MAAM,CAACC,IAAP,CAAY3D,IAAZ,CAAiB2E,GAAjB,CAAqBD,EAAtB,CAAX;;AACA,YAAIhB,MAAM,CAACC,IAAP,CAAY3D,IAAZ,CAAiB4E,aAAjB,CAA+B,CAA/B,KAAqC,IAAzC,EAA+C;AAC3C7B,UAAAA,kBAAkB,CAACW,MAAM,CAACC,IAAP,CAAY3D,IAAZ,CAAiB4E,aAAjB,CAA+B,CAA/B,EAAkCF,EAAnC,CAAlB;AACH;;AACDG,QAAAA,kBAAkB,CAACnB,MAAM,CAACC,IAAP,CAAY3D,IAAZ,CAAiB2E,GAAjB,CAAqBD,EAAtB,EAA0BhB,MAAM,CAACC,IAAP,CAAY3D,IAAZ,CAAiByE,KAAjB,CAAuBC,EAAjD,CAAlB;AACAI,QAAAA,kBAAkB,CAACpB,MAAM,CAACC,IAAP,CAAY3D,IAAZ,CAAiB2E,GAAjB,CAAqBD,EAAtB,EAA0BhB,MAAM,CAACC,IAAP,CAAY3D,IAAZ,CAAiB+E,QAAjB,CAA0BL,EAApD,CAAlB;AACH,OAjEL;AAkEH,KApEW,CAqEZ;;;AACA1B,IAAAA,KAAK,CAAE,GAAE/E,eAAe,CAACA,eAAgB,UAApC,EAA+C;AAChDgF,MAAAA,MAAM,EAAE,MADwC;AAEhDC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFuC;AAKhDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,KAAK,EAAG;AACxB;AACA;AACA;AACA;AACA;AACA;AAPiC,OAAf;AAL0C,KAA/C,CAAL,CAeKC,IAfL,CAeWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAfnB,EAgBKF,IAhBL,CAgBU,UAAUG,MAAV,EAAkB;AACpBvB,MAAAA,aAAa,CAACuB,MAAM,CAACC,IAAP,CAAYqB,IAAb,CAAb;AACH,KAlBL;AAoBAhC,IAAAA,KAAK,CAAE,GAAE/E,eAAe,CAACA,eAAgB,UAApC,EAA+C;AAChDgF,MAAAA,MAAM,EAAE,MADwC;AAEhDC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFuC;AAKhDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,KAAK,EAAG;AACxB;AACA;AACA;AACA;AACA;AACA;AAPiC,OAAf;AAL0C,KAA/C,CAAL,CAeKC,IAfL,CAeWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAfnB,EAgBKF,IAhBL,CAgBU,UAAUG,MAAV,EAAkB;AACpB7B,MAAAA,kBAAkB,CAAC6B,MAAM,CAACC,IAAP,CAAYsB,SAAb,CAAlB;AACH,KAlBL;AAmBH,GA7GQ,EA6GN,EA7GM,CAAT;AA+GA;AACJ;AACA;AACA;;AACI,WAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,UAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACA,QAAI3B,IAAI,GAAG,IAAI4B,QAAJ,EAAX;AACA5B,IAAAA,IAAI,CAAC6B,MAAL,CAAY,MAAZ,EAAoBJ,IAApB;AACA,UAAMK,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf;AACA3C,IAAAA,KAAK,CAAE,GAAE/E,eAAe,CAACA,eAAgB,sCAAqCwH,MAAO,EAAhF,EAAmF;AACpFxC,MAAAA,MAAM,EAAE,MAD4E;AAEpFE,MAAAA,IAAI,EAAEQ;AAF8E,KAAnF,CAAL,CAIKJ,IAJL,CAIWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAJnB,EAKKF,IALL,CAKU,UAAUG,MAAV,EAAkB;AACpBrB,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,KAPL,EAOOuD,KAPP,CAOa,UAAUC,KAAV,EAAiB;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAgCF,KAAK,CAACG,OAAlD;AACH,KATD;AAUH;AAED;AACJ;AACA;AACA;;;AACI,WAASC,kBAAT,CAA4BjE,QAA5B,EAAsC;AAClCC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACA6C,IAAAA,kBAAkB,CAAC7C,QAAD,EAAWN,aAAX,CAAlB;AACH;AAED;AACJ;AACA;AACA;;;AACI,WAASwE,gBAAT,CAA0BC,IAA1B,EAAgC;AAC5BxE,IAAAA,gBAAgB,CAACwE,IAAD,CAAhB;AACAtB,IAAAA,kBAAkB,CAAC7C,QAAD,EAAWmE,IAAX,CAAlB;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACI,WAAStB,kBAAT,CAA4BuB,MAA5B,EAAoC3B,KAApC,EAA2C;AACvChC,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAI,IAAAA,qBAAqB,CAAC,EAAD,CAArB;;AACA,QAAKuD,MAAM,IAAI3B,KAAf,EAAuB;AACnBzB,MAAAA,KAAK,CAAE,GAAE/E,eAAe,CAACA,eAAgB,UAApC,EAA+C;AAChDgF,QAAAA,MAAM,EAAE,MADwC;AAEhDC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFuC;AAKhDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,KAAK,EAAG;AAC5B;AACA,iEAAiE8C,MAAO,eAAc3B,KAAM;AAC5F;AACA;AACA;AACA;AAPqC,SAAf;AAL0C,OAA/C,CAAL,CAeKlB,IAfL,CAeWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAfnB,EAgBKF,IAhBL,CAgBU,UAAUG,MAAV,EAAkB;AACpBjB,QAAAA,eAAe,CAACiB,MAAM,CAACC,IAAP,CAAY0C,8BAAb,CAAf;AACH,OAlBL;AAmBH;AACJ;AAED;AACJ;AACA;AACA;AACA;;;AACI,WAASvB,kBAAT,CAA4BH,GAA5B,EAAiCI,QAAjC,EAA2C;AACvClC,IAAAA,qBAAqB,CAAC,EAAD,CAArB;AACAF,IAAAA,aAAa,CAACoC,QAAD,CAAb;AACA/B,IAAAA,KAAK,CAAE,GAAE/E,eAAe,CAACA,eAAgB,UAApC,EAA+C;AAChDgF,MAAAA,MAAM,EAAE,MADwC;AAEhDC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFuC;AAKhDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,KAAK,EAAG;AACxB;AACA,qEAAqEqB,GAAI,kBAAiBI,QAAS;AACnG;AACA;AACA;AACA;AAPiC,OAAf;AAL0C,KAA/C,CAAL,CAeKxB,IAfL,CAeWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAfnB,EAgBKF,IAhBL,CAgBU,UAAUG,MAAV,EAAkB;AACpBb,MAAAA,qBAAqB,CAACyD,SAAS,CAAC5C,MAAM,CAACC,IAAP,CAAY4C,mCAAb,CAAV,CAArB;AACH,KAlBL;AAmBH;AAED;AACJ;AACA;AACA;AACA;;;AACI,WAASD,SAAT,CAAmBE,KAAnB,EAA0B;AACtB,QAAIC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAa,CAACC,GAAD,EAAMC,KAAN,EAAaC,IAAb,KACrBD,KAAK,KAAKC,IAAI,CAACC,SAAL,CAAgBC,CAAD,IAAQA,CAAC,CAACzC,IAAF,KAAWqC,GAAG,CAACrC,IAAtC,CADF,CAAZ;AAEA,WAAOmC,KAAP;AACH;AAED;AACJ;AACA;AACA;;;AACI,WAASO,aAAT,CAAuB5B,IAAvB,EAA6B;AACzB,QAAI6B,YAAY,GAAG,EAAnB;AACA,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,YAAY;AACxBH,MAAAA,YAAY,GAAGC,MAAM,CAACxD,MAAP,CAAc2D,OAAd,CAAsB,OAAtB,EAA+B,EAA/B,EACVA,OADU,CACF,MADE,EACM,EADN,CAAf;AAEAlG,MAAAA,QAAQ,CAAC8F,YAAD,CAAR;AACH,KAJD;;AAKAC,IAAAA,MAAM,CAACI,aAAP,CAAqBlC,IAArB;AACH;AAED;AACJ;AACA;AACA;;;AACI,WAASmC,kBAAT,CAA4BC,CAA5B,EAA+B;AAC3B,QAAIA,CAAC,CAACnC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAJ,EAAuB;AACnB0B,MAAAA,aAAa,CAACQ,CAAC,CAACnC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAb;AACH;AACJ;AAGD;AACJ;AACA;AACA;;;AACI,WAASmC,YAAT,CAAsBD,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACE,cAAF;AACA,QAAIC,WAAW,GAAGrF,QAAlB;;AACA,QAAIA,QAAQ,KAAK,EAAjB,EAAqB;AACjBqF,MAAAA,WAAW,GAAG,CAAd;AACH;;AACD,QAAItH,kBAAJ,EAAwB;AAAE;AACtB2C,MAAAA,KAAK,CAAE,GAAE/E,eAAe,CAACA,eAAgB,UAApC,EAA+C;AAChDgF,QAAAA,MAAM,EAAE,MADwC;AAEhDC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFuC;AAKhDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,KAAK,EAAG;AAC5B;AACA,8CAA8CjD,kBAAmB;AACjE;AACA;AACA,0BANqC;AAOjBuH,UAAAA,SAAS,EAAE;AACP,qBAAS;AACL,uBAASlH,IADJ;AAEL,yBAAWM,WAFN;AAGL,2BAAa6G,OAAO,CAACzG,OAAD,CAHf;AAIL,yBAAWyG,OAAO,CAACvG,QAAD,CAJb;AAKL,+BAAiBuG,OAAO,CAACrG,cAAD,CALnB;AAML,sBAAQM,WANH;AAOL,qBAAOZ,KAPF;AAQL,0BAAYyG,WARP;AASL,6BAAe/G,UATV;AAUL,0BAAYE,MAVP;AAWL,uBAASkB,QAXJ;AAYL,yBAAWN,aAZN;AAaL,4BAAcgB,UAbT;AAcL,+BAAiBI;AAdZ;AADF;AAPM,SAAf;AAL0C,OAA/C,CAAL,CAgCKS,IAhCL,CAgCWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAhCnB,EAiCKF,IAjCL,CAiCU,UAAUG,MAAV,EAAkB;AACpB,YAAIA,MAAM,CAACC,IAAP,CAAYmE,UAAZ,CAAuBpD,EAAvB,KAA8B,IAAlC,EAAwC;AACpCqD,UAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,WAAvB;AACH;AACJ,OArCL;AAsCH,KAvCD,MAuCO;AACH,UAAIN,WAAW,GAAGrF,QAAlB;;AACA,UAAIA,QAAQ,KAAK,EAAjB,EAAqB;AACjBqF,QAAAA,WAAW,GAAG,CAAd;AACH;;AACD3E,MAAAA,KAAK,CAAE,GAAE/E,eAAe,CAACA,eAAgB,UAApC,EAA+C;AAChDgF,QAAAA,MAAM,EAAE,MADwC;AAEhDC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFuC;AAKhDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,KAAK,EAAG;AAC5B;AACA;AACA;AACA;AACA,0BANqC;AAOjBsE,UAAAA,SAAS,EAAE;AACP,qBAAS;AACL,uBAASlH,IADJ;AAEL,yBAAWM,WAFN;AAGL,2BAAaI,OAHR;AAIL,yBAAWE,QAJN;AAKL,+BAAiBE,cALZ;AAML,sBAAQM,WANH;AAOL,qBAAOZ,KAPF;AAQL,wBAAUwE,YAAY,CAACC,OAAb,CAAqB,QAArB,CARL;AASL,6BAAe/E,UATV;AAUL,0BAAY+G,WAVP;AAWL,0BAAY7G,MAXP;AAYL,4BAAc4E,YAAY,CAACC,OAAb,CAAqB,YAArB,CAZT;AAaL,uBAAS3D,QAbJ;AAcL,yBAAWN,aAdN;AAeL,4BAAcgB,UAfT;AAgBL,+BAAiBI,eAhBZ;AAiBL,gCAAkB4C,YAAY,CAACC,OAAb,CAAqB,gBAArB;AAjBb;AADF;AAPM,SAAf;AAL0C,OAA/C,CAAL,CAmCKpC,IAnCL,CAmCWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAnCnB,EAoCKF,IApCL,CAoCU,UAAUG,MAAV,EAAkB;AACpB,YAAIA,MAAM,CAACC,IAAP,CAAYuE,UAAZ,CAAuBxD,EAAvB,KAA8B,IAAlC,EAAwC;AACpCqD,UAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,WAAvB;AACH;AACJ,OAxCL;AAyCH;AACJ;;AAGD,WAASE,kBAAT,CAA4BC,KAA5B,EAAmC;AAC/BzH,IAAAA,OAAO,CAACyH,KAAD,CAAP;AACH;AACG;AACR;AACA;AACA;;;AACQ,WAASC,oBAAT,GAAgC;AAC5B,UAAMC,OAAO,GAAG,2BAA2BpH,KAA3C;;AACA,YAAQV,MAAR;AACI,WAAK,CAAL;AACI,4BAAO,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAA,qBAECH,kBAAkB,gBAAG;AAAI,YAAA,KAAK,EAAE;AAACjB,cAAAA,KAAK,EAAElC,MAAM,CAACqL;AAAf,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,gBAAkE,qCAFrF,eAIH;AAAM,YAAA,SAAS,EAAEnI,OAAO,CAACoI,IAAzB;AAA+B,YAAA,QAAQ,EAAEf,YAAzC;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,OAAO,EAAE,CAAzB;AAAA,sCACI,QAAC,IAAD;AAAM,gBAAA,SAAS,MAAf;AAAgB,gBAAA,IAAI,MAApB;AAAqB,gBAAA,EAAE,EAAE,EAAzB;AAA6B,gBAAA,OAAO,EAAE,CAAtC;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,KAAK,EAAE,QAAlB;AAA4B,kBAAA,EAAE,EAAE,EAAhC;AAAoC,kBAAA,EAAE,EAAE,CAAxC;AAA2C,kBAAA,EAAE,EAAE,CAA/C;AAAA,6BAEQvG,KAAK,gBACD;AAAK,oBAAA,GAAG,EAAEoH,OAAV;AAAmB,oBAAA,KAAK,EAAE;AAA1B;AAAA;AAAA;AAAA;AAAA,0BADC,GAED,IAJZ,eAMI,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAC,UAAhB;AAA2B,oBAAA,SAAS,EAAC,OAArC;AAA6C,oBAAA,IAAI,EAAE,OAAnD;AAAA,+BACKpH,KAAK,GAAG,mBAAH,GAAyB,mBADnC,eAEI;AAAO,sBAAA,IAAI,EAAC,MAAZ;AAAmB,sBAAA,MAAM,EAAC,SAA1B;AAAoC,sBAAA,MAAM,MAA1C;AAA2C,sBAAA,QAAQ,EAAEqG;AAArD;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BANJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAYI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAA0B,kBAAA,EAAE,EAAE,CAA9B;AAAA,0CACI,QAAC,WAAD;AAAa,oBAAA,OAAO,EAAC,UAArB;AAAgC,oBAAA,SAAS,EAAEnH,OAAO,CAACP,WAAnD;AAAgE,oBAAA,QAAQ,EAAE,IAA1E;AACa,oBAAA,OAAO,EAAE,CADtB;AAAA,4CAEI,QAAC,UAAD;AAAY,sBAAA,EAAE,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,eAGI,QAAC,MAAD;AACI,sBAAA,OAAO,EAAC,eADZ;AAEI,sBAAA,EAAE,EAAC,eAFP;AAGI,sBAAA,KAAK,EAAEmC,QAHX;AAII,sBAAA,QAAQ,EAAEmD,KAAK,IAAI;AACfc,wBAAAA,kBAAkB,CAACd,KAAK,CAACE,MAAN,CAAa+C,KAAd,CAAlB;AACH,uBANL;AAOI,sBAAA,KAAK,EAAC,QAPV;AAAA,gCASQlG,UAAU,GAAGA,UAAU,CAACuG,GAAX,CAAgBjC,KAAD,IAAW;AACnC,4CAAO,QAAC,QAAD;AACU,0BAAA,KAAK,EAAEA,KAAK,CAAC9B,EADvB;AAAA,oCAC4B8B,KAAK,CAAClC;AADlC,2BAAekC,KAAK,CAAC9B,EAArB;AAAA;AAAA;AAAA;AAAA,gCAAP;AAEH,uBAHY,CAAH,gBAGL;AAZb;AAAA;AAAA;AAAA;AAAA,4BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAoBI,QAAC,SAAD;AACI,oBAAA,QAAQ,MADZ;AAEI,oBAAA,SAAS,EAAEtE,OAAO,CAACP,WAFvB;AAGI,oBAAA,EAAE,EAAC,QAHP;AAII,oBAAA,KAAK,EAAC,gBAJV;AAKI,oBAAA,KAAK,EAAEe,UALX;AAMI,oBAAA,QAAQ,EAAE4G,CAAC,IAAK3G,aAAa,CAAC2G,CAAC,CAACnC,MAAF,CAAS+C,KAAV,CANjC;AAOI,oBAAA,OAAO,EAAC;AAPZ;AAAA;AAAA;AAAA;AAAA,0BApBJ,eA6BI,QAAC,WAAD;AAAa,oBAAA,SAAS,EAAC,UAAvB;AAAkC,oBAAA,SAAS,EAAEhI,OAAO,CAACP,WAArD;AAAA,4CACI,QAAC,SAAD;AAAW,sBAAA,SAAS,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI,QAAC,SAAD;AAAA,8CACI,QAAC,gBAAD;AACI,wBAAA,OAAO,eAAE,QAAC,QAAD;AAAU,0BAAA,OAAO,EAAEuB,OAAnB;AAA4B,0BAAA,KAAK,EAAE,SAAnC;AACU,0BAAA,QAAQ,EAAEoG,CAAC,IAAKnG,UAAU,CAACmG,CAAC,CAACnC,MAAF,CAASqD,OAAV,CADpC;AAEU,0BAAA,IAAI,EAAC;AAFf;AAAA;AAAA;AAAA;AAAA,gCADb;AAII,wBAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,8BADJ,eAOI,QAAC,gBAAD;AACI,wBAAA,OAAO,eAAE,QAAC,QAAD;AAAU,0BAAA,OAAO,EAAEpH,QAAnB;AAA6B,0BAAA,KAAK,EAAE,SAApC;AACU,0BAAA,QAAQ,EAAEkG,CAAC,IAAKjG,WAAW,CAACiG,CAAC,CAACnC,MAAF,CAASqD,OAAV,CADrC;AAEU,0BAAA,IAAI,EAAC;AAFf;AAAA;AAAA;AAAA;AAAA,gCADb;AAII,wBAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,8BAPJ,eAaI,QAAC,gBAAD;AACI,wBAAA,OAAO,eAAE,QAAC,QAAD;AAAU,0BAAA,OAAO,EAAElH,cAAnB;AAAmC,0BAAA,KAAK,EAAE,SAA1C;AACU,0BAAA,QAAQ,EAAEgG,CAAC,IAAK/F,iBAAiB,CAAC+F,CAAC,CAACnC,MAAF,CAASqD,OAAV,CAD3C;AAEU,0BAAA,IAAI,EAAC;AAFf;AAAA;AAAA;AAAA;AAAA,gCADb;AAII,wBAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,8BAbJ,eAoBI,QAAC,SAAD;AACI,wBAAA,SAAS,EAAEtI,OAAO,CAACP,WADvB;AAEI,wBAAA,EAAE,EAAC,QAFP;AAGI,wBAAA,KAAK,EAAC,cAHV;AAII,wBAAA,KAAK,EAAEyC,QAJX;AAKI,wBAAA,IAAI,EAAC,QALT;AAMI,wBAAA,UAAU,EAAE;AAACqG,0BAAAA,UAAU,EAAE;AAACC,4BAAAA,GAAG,EAAE,CAAC,EAAP;AAAWC,4BAAAA,GAAG,EAAE,CAAhB;AAAmBC,4BAAAA,IAAI,EAAE;AAAzB;AAAb,yBANhB;AAOI,wBAAA,WAAW,EAAE,KAPjB;AAQI,wBAAA,QAAQ,EAAEtB,CAAC,IAAKjF,WAAW,CAACiF,CAAC,CAACnC,MAAF,CAAS+C,KAAV,CAR/B;AASI,wBAAA,OAAO,EAAC;AATZ;AAAA;AAAA;AAAA;AAAA,8BApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZJ,eA6EI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAA0B,kBAAA,EAAE,EAAE,CAA9B;AAAA,0CACI,QAAC,SAAD;AACI,oBAAA,QAAQ,MADZ;AAEI,oBAAA,SAAS,EAAEhI,OAAO,CAACP,WAFvB;AAGI,oBAAA,EAAE,EAAC,UAHP;AAII,oBAAA,KAAK,EAAC,QAJV;AAKI,oBAAA,KAAK,EAAEiB,MALX;AAMI,oBAAA,QAAQ,EAAE0G,CAAC,IAAKzG,SAAS,CAACyG,CAAC,CAACnC,MAAF,CAAS+C,KAAV,CAN7B;AAOI,oBAAA,OAAO,EAAC;AAPZ;AAAA;AAAA;AAAA;AAAA,0BADJ,eAWI,QAAC,SAAD;AACI,oBAAA,QAAQ,MADZ;AAEI,oBAAA,SAAS,EAAEhI,OAAO,CAACP,WAFvB;AAGI,oBAAA,EAAE,EAAC,QAHP;AAII,oBAAA,KAAK,EAAC,MAJV;AAKI,oBAAA,IAAI,EAAC,QALT;AAMI,oBAAA,UAAU,EAAE;AAAC8I,sBAAAA,UAAU,EAAE;AAACC,wBAAAA,GAAG,EAAE,GAAN;AAAWE,wBAAAA,IAAI,EAAE;AAAjB;AAAb,qBANhB;AAOI,oBAAA,KAAK,EAAEpI,IAPX;AAQI,oBAAA,QAAQ,EAAE8G,CAAC,IAAIW,kBAAkB,CAACX,CAAC,CAACnC,MAAF,CAAS+C,KAAV,CARrC;AASI,oBAAA,OAAO,EAAC;AATZ;AAAA;AAAA;AAAA;AAAA,0BAXJ,eAsBI,QAAC,WAAD;AAAa,oBAAA,OAAO,EAAC,UAArB;AAAgC,oBAAA,SAAS,EAAEhI,OAAO,CAACP,WAAnD;AAAgE,oBAAA,QAAQ,EAAE,IAA1E;AAAA,4CACI,QAAC,UAAD;AAAY,sBAAA,EAAE,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI,QAAC,MAAD;AACI,sBAAA,OAAO,EAAC,oBADZ;AAEI,sBAAA,EAAE,EAAC,oBAFP;AAGI,sBAAA,KAAK,EAAE6B,aAHX;AAII,sBAAA,QAAQ,EAAE8F,CAAC,IAAKtB,gBAAgB,CAACsB,CAAC,CAACnC,MAAF,CAAS+C,KAAV,CAJpC;AAKI,sBAAA,KAAK,EAAC,iBALV;AAAA,gCAOQxG,eAAe,GAAGA,eAAe,CAAC6G,GAAhB,CAAoB,UAAUtC,IAAV,EAAgB;AAClD,4CAAO,QAAC,QAAD;AACU,0BAAA,KAAK,EAAEA,IAAI,CAACzB,EADtB;AAAA,oCAC2ByB,IAAI,CAAC7B;AADhC,2BAAe6B,IAAI,CAACzB,EAApB;AAAA;AAAA;AAAA;AAAA,gCAAP;AAEH,uBAHiB,CAAH,gBAGV;AAVb;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAtBJ,eAsCI,QAAC,WAAD;AAAa,oBAAA,OAAO,EAAC,UAArB;AAAgC,oBAAA,SAAS,EAAEtE,OAAO,CAACP,WAAnD;AAAgE,oBAAA,QAAQ,MAAxE;AAAA,4CACI,QAAC,UAAD;AAAY,sBAAA,EAAE,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI,QAAC,MAAD;AACI,sBAAA,OAAO,EAAC,kBADZ;AAEI,sBAAA,EAAE,EAAC,kBAFP;AAGI,sBAAA,KAAK,EAAE6C,UAHX;AAII,sBAAA,QAAQ,EAAE,UAAUyC,KAAV,EAAiB;AACvBL,wBAAAA,kBAAkB,CAAC9C,QAAD,EAAWmD,KAAK,CAACE,MAAN,CAAa+C,KAAxB,CAAlB;AACH,uBANL;AAOI,sBAAA,KAAK,EAAC,cAPV;AAAA,gCASQ5F,YAAY,GAAGA,YAAY,CAACiG,GAAb,CAAiB,UAAUM,GAAV,EAAe;AAC3C,4BAAIA,GAAJ,EAAS;AACL,8CAAO,QAAC,QAAD;AACU,4BAAA,KAAK,EAAEA,GAAG,CAACrE,EADrB;AAAA,sCAC0BqE,GAAG,CAACzE;AAD9B,6BAAeyE,GAAG,CAACrE,EAAnB;AAAA;AAAA;AAAA;AAAA,kCAAP;AAEH;AACJ,uBALc,CAAH,gBAKP;AAdb;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAtCJ,eA2DI,QAAC,WAAD;AAAa,oBAAA,OAAO,EAAC,UAArB;AAAgC,oBAAA,SAAS,EAAEtE,OAAO,CAACP,WAAnD;AAAA,4CACI,QAAC,UAAD;AAAY,sBAAA,EAAE,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI,QAAC,MAAD;AACI,sBAAA,OAAO,EAAC,sBADZ;AAEI,sBAAA,EAAE,EAAC,sBAFP;AAGI,sBAAA,KAAK,EAAEiD,eAHX;AAII,sBAAA,QAAQ,EAAE0E,CAAC,IAAIzE,kBAAkB,CAACyE,CAAC,CAACnC,MAAF,CAAS+C,KAAV,CAJrC;AAKI,sBAAA,KAAK,EAAC,QALV;AAAA,gCAOQxF,kBAAkB,GAAGA,kBAAkB,CAAC6F,GAAnB,CAAuB,UAAUO,OAAV,EAAmB;AAC3D,4CAAO,QAAC,QAAD;AACU,0BAAA,KAAK,EAAEA,OAAO,CAACtE,EADzB;AAAA,oCAC8BsE,OAAO,CAAC1E;AADtC,2BAAe0E,OAAO,CAACtE,EAAvB;AAAA;AAAA;AAAA;AAAA,gCAAP;AAEH,uBAHoB,CAAH,gBAGb;AAVb;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BA3DJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBA7EJ,eAyJI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAA0B,kBAAA,EAAE,EAAE,CAA9B;AAAA,0CACI,QAAC,SAAD;AACI,oBAAA,EAAE,EAAC,aADP;AAEI,oBAAA,KAAK,EAAC,aAFV;AAGI,oBAAA,SAAS,MAHb;AAII,oBAAA,IAAI,EAAE,CAJV;AAKI,oBAAA,YAAY,EAAC,EALjB;AAMI,oBAAA,QAAQ,EAAE8C,CAAC,IAAIvG,cAAc,CAACuG,CAAC,CAACnC,MAAF,CAAS+C,KAAV,CANjC;AAOI,oBAAA,KAAK,EAAEpH,WAPX;AAQI,oBAAA,SAAS,EAAEZ,OAAO,CAACP,WARvB;AASI,oBAAA,OAAO,EAAC;AATZ;AAAA;AAAA;AAAA;AAAA,0BADJ,eAYI,QAAC,SAAD;AACI,oBAAA,QAAQ,MADZ;AAEI,oBAAA,SAAS,EAAEO,OAAO,CAACP,WAFvB;AAGI,oBAAA,EAAE,EAAC,QAHP;AAII,oBAAA,KAAK,EAAC,iBAJV;AAKI,oBAAA,KAAK,EAAEiC,WALX;AAMI,oBAAA,QAAQ,EAAE0F,CAAC,IAAKzF,cAAc,CAACyF,CAAC,CAACnC,MAAF,CAAS+C,KAAV;AANlC;AAAA;AAAA;AAAA;AAAA,0BAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAzJJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAiLI,QAAC,IAAD;AAAM,gBAAA,SAAS,MAAf;AAAgB,gBAAA,IAAI,MAApB;AAAqB,gBAAA,EAAE,EAAE,EAAzB;AAA6B,gBAAA,OAAO,EAAE,CAAtC;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAA0B,kBAAA,KAAK,EAAE;AAAjC;AAAA;AAAA;AAAA;AAAA,wBADJ,eAGI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE;AAAvB;AAAA;AAAA;AAAA;AAAA,wBAHJ,eAKI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE;AAAvB;AAAA;AAAA;AAAA;AAAA,wBALJ,eAOI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAmB,kBAAA,EAAE,EAAE,CAAvB;AAA0B,kBAAA,KAAK,EAAE,QAAjC;AAAA,yCACI,QAAC,MAAD;AAAQ,oBAAA,IAAI,EAAC,QAAb;AAAsB,oBAAA,OAAO,EAAC,WAA9B;AACQ,oBAAA,KAAK,EAAE;AAACa,sBAAAA,eAAe,EAAE/L,MAAM,CAACqL;AAAzB,qBADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjLJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJG;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;;AAqMJ,WAAK,CAAL;AACI,4BAAO,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAA4B,UAAA,SAAS,EAAE,QAAvC;AAAiD,UAAA,KAAK,EAAE,QAAxD;AAAkE,UAAA,SAAS,EAAEnI,OAAO,CAACrB,IAArF;AAAA,kCACH,QAAC,IAAD;AAAM,YAAA,SAAS,EAAEqB,OAAO,CAAC8I,KAAzB;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,OAAO,EAAE,CAAzB;AAA4B,cAAA,SAAS,EAAE9I,OAAO,CAACJ,IAA/C;AAAA,sCACI,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,uCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,MAAb;AAAc,gBAAA,YAAY,MAA1B;AAAA,wCACI,QAAC,UAAD;AAAY,kBAAA,SAAS,EAAEI,OAAO,CAACH,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,QAAC,MAAD;AAAQ,kBAAA,IAAI,EAAE,gCAAd;AAAgD,kBAAA,SAAS,EAAEG,OAAO,CAACV,IAAnE;AACQ,kBAAA,KAAK,EAAE;AAACuJ,oBAAAA,eAAe,EAAE/L,MAAM,CAACiM;AAAzB,mBADf;AAC8C,kBAAA,QAAQ,MADtD;AACuD,kBAAA,MAAM,EAAC,QAD9D;AAEQ,kBAAA,SAAS,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,0BAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADG,eAcH,QAAC,IAAD;AAAM,YAAA,SAAS,EAAE/I,OAAO,CAAC8I,KAAzB;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,OAAO,EAAE,CAAzB;AAA4B,cAAA,SAAS,EAAE9I,OAAO,CAACJ,IAA/C;AAAA,sCACI,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,uCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,MAAb;AAAc,gBAAA,YAAY,MAA1B;AAAA,uCACI;AAAM,kBAAA,SAAS,EAAEI,OAAO,CAACH,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAdG,eAwBH,QAAC,IAAD;AAAM,YAAA,SAAS,EAAEG,OAAO,CAAC8I,KAAzB;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,OAAO,EAAE,CAAzB;AAA4B,cAAA,SAAS,EAAE9I,OAAO,CAACJ,IAA/C;AAAA,sCACI,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,uCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,MAAb;AAAc,gBAAA,YAAY,MAA1B;AAAA,wCACI,QAAC,UAAD;AAAY,kBAAA,SAAS,EAAEI,OAAO,CAACH,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAGI,QAAC,MAAD;AAAQ,kBAAA,SAAS,EAAEG,OAAO,CAACV,IAA3B;AAAiC,kBAAA,OAAO,EAAC,WAAzC;AACQ,kBAAA,KAAK,EAAE;AAACuJ,oBAAAA,eAAe,EAAE/L,MAAM,CAACiM;AAAzB,mBADf;AAC8C,kBAAA,SAAS,EAAC,OADxD;AAEQ,kBAAA,SAAS,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,0BAFnB;AAAA,qEAEsD;AAAO,oBAAA,MAAM,EAAC,OAAd;AACO,oBAAA,IAAI,EAAC,MADZ;AAEO,oBAAA,QAAQ,EAAE3B,CAAC,IAAKtC,UAAU,CAACsC,CAAD,CAFjC;AAGO,oBAAA,MAAM;AAHb;AAAA;AAAA;AAAA;AAAA,0BAFtD;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAxBG,eA0CC,QAAC,QAAD;AAAU,YAAA,IAAI,EAAEpF,cAAhB;AAAgC,YAAA,gBAAgB,EAAE,IAAlD;AACU,YAAA,YAAY,EAAE;AAACzD,cAAAA,QAAQ,EAAE,KAAX;AAAkBC,cAAAA,UAAU,EAAE;AAA9B,aADxB;AAEU,YAAA,OAAO,EAAE,MAAMyD,iBAAiB,CAAC,KAAD,CAF1C;AAAA,mCAGI,QAAC,KAAD;AAAO,cAAA,QAAQ,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,kBA1CD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;;AAiDJ,WAAK,CAAL;AACI,4BAAO,QAAC,IAAD;AAAM,UAAA,SAAS,EAAEjC,OAAO,CAAC8I,KAAzB;AAAgC,UAAA,KAAK,EAAE,QAAvC;AAAA,kCACH,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAA4B,YAAA,SAAS,EAAE9I,OAAO,CAACJ,IAA/C;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,qCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,MAAb;AAAc,cAAA,YAAY,MAA1B;AAAA,sCACI,QAAC,UAAD;AAAY,gBAAA,SAAS,EAAEI,OAAO,CAACH,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAEG,OAAO,CAACV,IAA3B;AAAiC,gBAAA,OAAO,EAAC,WAAzC;AACQ,gBAAA,KAAK,EAAE;AAACuJ,kBAAAA,eAAe,EAAE/L,MAAM,CAACiM;AAAzB,iBADf;AAEQ,gBAAA,SAAS,EAAC,OAFlB;AAE0B,gBAAA,SAAS,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,wBAFrC;AAAA,mEAEwE;AACpE,kBAAA,MAAM,EAAC,OAD6D;AACrD,kBAAA,IAAI,EAAC,MADgD;AACzC,kBAAA,QAAQ,EAAE3B,CAAC,IAAKtC,UAAU,CAACsC,CAAD,CADe;AACT,kBAAA,MAAM;AADG;AAAA;AAAA;AAAA;AAAA,wBAFxE;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADG,eAcC,QAAC,QAAD;AAAU,YAAA,IAAI,EAAEpF,cAAhB;AAAgC,YAAA,gBAAgB,EAAE,IAAlD;AACU,YAAA,YAAY,EAAE;AAACzD,cAAAA,QAAQ,EAAE,KAAX;AAAkBC,cAAAA,UAAU,EAAE;AAA9B,aADxB;AAEU,YAAA,OAAO,EAAE,MAAMyD,iBAAiB,CAAC,KAAD,CAF1C;AAAA,mCAGI,QAAC,KAAD;AAAO,cAAA,QAAQ,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,kBAdD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;;AAqBJ;AACI;AAhRR;AAkRH;;AAGD,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAA4B,QAAA,OAAO,EAAC,QAApC;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAErE,IAAnB;AAAyB,YAAA,EAAE,EAAC,WAA5B;AAAwC,YAAA,SAAS,EAAEoC,OAAO,CAACnB,GAA3D;AAAgE,YAAA,OAAO,EAAC,WAAxE;AACQ,YAAA,KAAK,EAAE;AAACgK,cAAAA,eAAe,EAAE/L,MAAM,CAACkM;AAAzB,aADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAEpL,IAAnB;AAAyB,YAAA,EAAE,EAAC,aAA5B;AAA0C,YAAA,SAAS,EAAEoC,OAAO,CAACnB,GAA7D;AAAkE,YAAA,OAAO,EAAC,WAA1E;AACQ,YAAA,KAAK,EAAE;AAACgK,cAAAA,eAAe,EAAE/L,MAAM,CAACqL;AAAzB,aADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBANJ,eAUI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAEvK,IAAnB;AAAyB,YAAA,EAAE,EAAC,aAA5B;AAA0C,YAAA,SAAS,EAAEoC,OAAO,CAACnB,GAA7D;AAAkE,YAAA,OAAO,EAAC,WAA1E;AACQ,YAAA,KAAK,EAAE;AAACgK,cAAAA,eAAe,EAAE/L,MAAM,CAACkM;AAAzB,aADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAiBI,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAA4B,QAAA,OAAO,EAAC,QAApC;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAEhJ,OAAO,CAACnB,GAA3B;AAAgC,YAAA,OAAO,EAAC,WAAxC;AACQ,YAAA,KAAK,EAAEuB,MAAM,KAAK,CAAX,GAAe;AAACyI,cAAAA,eAAe,EAAE/L,MAAM,CAACqL;AAAzB,aAAf,GAAiD;AAACU,cAAAA,eAAe,EAAE/L,MAAM,CAACkM;AAAzB,aADhE;AAEQ,YAAA,OAAO,EAAE5B,CAAC,IAAK/G,SAAS,CAAC,CAAD,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAEL,OAAO,CAACnB,GAA3B;AAAgC,YAAA,OAAO,EAAC,WAAxC;AACQ,YAAA,KAAK,EAAEuB,MAAM,KAAK,CAAX,GAAe;AAACyI,cAAAA,eAAe,EAAE/L,MAAM,CAACqL;AAAzB,aAAf,GAAiD;AAACU,cAAAA,eAAe,EAAE/L,MAAM,CAACkM;AAAzB,aADhE;AAEQ,YAAA,SAAS,eAAE,QAAE,UAAF;AAAA;AAAA;AAAA;AAAA,oBAFnB;AAEmC,YAAA,OAAO,EAAE5B,CAAC,IAAK/G,SAAS,CAAC,CAAD,CAF3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBANJ,eAYI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAEL,OAAO,CAACnB,GAA3B;AAAgC,YAAA,OAAO,EAAC,WAAxC;AACQ,YAAA,KAAK,EAAEuB,MAAM,KAAK,CAAX,GAAe;AAACyI,cAAAA,eAAe,EAAE/L,MAAM,CAACqL;AAAzB,aAAf,GAAiD;AAACU,cAAAA,eAAe,EAAE/L,MAAM,CAACkM;AAAzB,aADhE;AAEQ,YAAA,SAAS,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,oBAFnB;AAEkC,YAAA,OAAO,EAAE5B,CAAC,IAAK/G,SAAS,CAAC,CAAD,CAF1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAmCI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,kBACK4H,oBAAoB;AADzB;AAAA;AAAA;AAAA;AAAA,cAnCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6CP;;GApsBQnI,U;UACWrB,S;;;KADXqB,U;AAssBT,eAAeA,UAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {Header, Title} from \"../components\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {colors} from \"../themes/colors\";\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport {Link} from 'react-router-dom';\r\nimport misterCoockyApi from '../constante/apiUrl'\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\n\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: 300,\r\n            maxWidth: 50\r\n        }\r\n    },\r\n    getContentAnchorEl: null,\r\n    anchorOrigin: {\r\n        vertical: \"bottom\",\r\n        horizontal: \"left\"\r\n    },\r\n\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    btn: {\r\n        padding: theme.spacing(2),\r\n        color: theme.palette.text.secondary,\r\n        width: '100%',\r\n        height: '0px',\r\n    },\r\n    btn2: {\r\n        fontSize: \"0.7em\",\r\n        marginTop: \"10px\"\r\n    },\r\n    formControl: {\r\n        width: 200,\r\n        margin: \"5px 0 5px 0\"\r\n    },\r\n    descriptionControl: {\r\n        width: 200,\r\n        height: 300,\r\n        margin: \"5px 0 5px 0\"\r\n    },\r\n    item: {\r\n        maxWidth: 400,\r\n        padding: theme.spacing(2),\r\n    },\r\n    typotext: {\r\n        fontSize: '1.4em'\r\n    },\r\n\r\n}));\r\n\r\n/**\r\n * Composant de page d'ajout d'un produit\r\n * @param props\r\n * @returns {*}\r\n * @constructor\r\n */\r\nfunction AddProduct(props) {\r\n    const classes = useStyles();\r\n    const [selectedItemToEdit, setSelectedItemToEdit] = useState(props.itemId);\r\n\r\n    const [pageId, setPageId] = useState(0);\r\n    const [prix, setPrix] = useState(\"\");\r\n    const [nomProduit, setNomProduit] = useState(\"\");\r\n    const [marque, setMarque] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [estSain, setEstSain] = useState(false);\r\n    const [estMalin, setEstMalin] = useState(false);\r\n    const [estResponsable, setEstResponsable] = useState(false);\r\n    const [typeProduitId, setTypeProduitId] = useState([]);\r\n    const [typeProduitList, setTypeProduitList] = useState([]);\r\n    const [lienProduit, setLienProduit] = useState(\"\");\r\n    const [animalId, setAnimalId] = useState(\"\");\r\n    const [animalList, setAnimalList] = useState([]);\r\n    const [fileTransmited, setFileTransmited] = useState(false);\r\n    const [discount, setDiscount] = useState(\"\");\r\n\r\n    const [categoryList, setCategoryList] = useState([]);\r\n    const [categoryId, setCategoryId] = useState(\"\");\r\n    const [sousCateroriesList, setSousCateroriesList] = useState([]);\r\n    const [sousCategorieId, setSousCategorieId] = useState(\"\");\r\n\r\n    /**\r\n     * récupère l'item si en mode édition produit\r\n     * et récupère la liste des animaux\r\n     * et récupère les offres\r\n     */\r\n    useEffect(() => {\r\n        if (selectedItemToEdit) {    //si mode configuration\r\n            fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {    //on récupère l'item\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    query: `\r\n                    query{​​​​​​​\r\n                      item(id:\"${selectedItemToEdit}\"){​​​​​​​\r\n                        id\r\n                        ttcPrice\r\n                        mark{\r\n                            id\r\n                            name\r\n                        }\r\n                        isHealthy\r\n                        isSmart\r\n                        isResponsible\r\n                        discount\r\n                        pet{\r\n                            id\r\n                            name\r\n                        }\r\n                        product{\r\n                            id\r\n                            name\r\n                        }\r\n                        offer{\r\n                            id\r\n                            name\r\n                        }\r\n                        comment\r\n                        link\r\n                        uri\r\n                        category{\r\n                            id\r\n                            name\r\n                        }\r\n                        subCategories{\r\n                            id\r\n                            name\r\n                        }\r\n                      }​​​​​​​\r\n                    }`,\r\n                }),\r\n            })\r\n                .then((res) => res.json())\r\n                .then(function (result) {\r\n                    setDescription(result.data.item.comment);\r\n                    setEstMalin(result.data.item.isSmart);\r\n                    setEstResponsable(result.data.item.isResponsible);\r\n                    setEstSain(result.data.item.isHealthy);\r\n                    setPrix(Math.round(result.data.item.ttcPrice / (1 - Math.abs(result.data.item.discount / 100))));\r\n                    setImage((result.data.item.uri));\r\n                    setMarque(result.data.item.mark.name);\r\n                    setDiscount(result.data.item.discount);\r\n                    setNomProduit(result.data.item.product.name);\r\n                    setLienProduit(result.data.item.link);\r\n                    setTypeProduitId(result.data.item.offer.id);\r\n                    setAnimalId(result.data.item.pet.id);\r\n                    if (result.data.item.subCategories[0] != null) {\r\n                        setSousCategorieId(result.data.item.subCategories[0].id);\r\n                    }\r\n                    generateCategories(result.data.item.pet.id, result.data.item.offer.id);\r\n                    onCategorySelected(result.data.item.pet.id, result.data.item.category.id);\r\n                });\r\n        }\r\n        //récupérations de la liste des animaux\r\n        fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                query: `\r\n                    query{​​​​​​​\r\n                        pets{​​​​​​​\r\n                            id\r\n                            name\r\n                        }​​​​​​​\r\n                    }`,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then(function (result) {\r\n                setAnimalList(result.data.pets);\r\n            });\r\n\r\n        fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                query: `\r\n                    query{​​​​​​​\r\n                        getOffers{​​​​​​​\r\n                            id\r\n                            name\r\n                        }​​​​​​​\r\n                    }`,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then(function (result) {\r\n                setTypeProduitList(result.data.getOffers);\r\n            })\r\n    }, []);\r\n\r\n    /**\r\n     * Lors de l'import d'un fichier\r\n     * @param event\r\n     */\r\n    function handleFile(event) {\r\n        const file = event.target.files[0];\r\n        let data = new FormData();\r\n        data.append(\"file\", file);\r\n        const userId = localStorage.getItem('userId');\r\n        fetch(`${misterCoockyApi.misterCoockyApi}/uploadFile?sectionName=smr&userId=${userId}`, {\r\n            method: 'POST',\r\n            body: data\r\n        })\r\n            .then((res) => res.json())\r\n            .then(function (result) {\r\n                setFileTransmited(true);\r\n            }).catch(function (error) {\r\n            console.log('Erreur pendant l\\'upload : ' + error.message);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Lors de la sélection d'un animal\r\n     * @param animalId\r\n     */\r\n    function handleAnimalChange(animalId) {\r\n        setAnimalId(animalId);\r\n        generateCategories(animalId, typeProduitId);\r\n    }\r\n\r\n    /**\r\n     * Lors de la sélection d'un type\r\n     * @param type\r\n     */\r\n    function handleTypeChange(type) {\r\n        setTypeProduitId(type);\r\n        generateCategories(animalId, type);\r\n    }\r\n\r\n    /**\r\n     * récupération des catégories\r\n     * @param animal\r\n     * @param offer\r\n     */\r\n    function generateCategories(animal, offer) {\r\n        setCategoryList([]);\r\n        setSousCateroriesList([]);\r\n        if ((animal && offer)) {\r\n            fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    query: `\r\n                    query{​​​​​​​\r\n                         getCategoriesByPetIdAndOfferId(petId:\"${animal}\", offerId:\"${offer}\"){\r\n                            id\r\n                            name\r\n                        }​​​​​​​    \r\n                    }`,\r\n                }),\r\n            })\r\n                .then((res) => res.json())\r\n                .then(function (result) {\r\n                    setCategoryList(result.data.getCategoriesByPetIdAndOfferId);\r\n                });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Lors de la sélection d'une catégorie\r\n     * @param pet\r\n     * @param category\r\n     */\r\n    function onCategorySelected(pet, category) {\r\n        setSousCateroriesList([]);\r\n        setCategoryId(category);\r\n        fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                query: `\r\n                    query{​​​​​​​\r\n                        getSubCategoriesByPetAndCategoryIds(petId:\"${pet}\", categoryId:\"${category}\"){\r\n                            id\r\n                            name\r\n                        }​​​​​​​\r\n                    }`,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then(function (result) {\r\n                setSousCateroriesList(arrUnique(result.data.getSubCategoriesByPetAndCategoryIds));\r\n            });\r\n    }\r\n\r\n    /**\r\n     * fonction permettant de supprimer les doublons d'une liste\r\n     * @param array\r\n     * @returns {*}\r\n     */\r\n    function arrUnique(array) {\r\n        var clean = array.filter((arr, index, self) =>\r\n            index === self.findIndex((t) => (t.name === arr.name)));\r\n        return clean\r\n    }\r\n\r\n    /**\r\n     * Lors de l'ajout d'une image / mise en base64\r\n     * @param file\r\n     */\r\n    function imageUploaded(file) {\r\n        let base64String = \"\";\r\n        let reader = new FileReader();\r\n        reader.onload = function () {\r\n            base64String = reader.result.replace(\"data:\", \"\")\r\n                .replace(/^.+,/, \"\");\r\n            setImage(base64String);\r\n        };\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    /**\r\n     * Prévisiualisation de l'image impotée\r\n     * @param e\r\n     */\r\n    function handleImagePreview(e) {\r\n        if (e.target.files[0]) {\r\n            imageUploaded(e.target.files[0])\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Lors de l'envoi du formulaire de création\r\n     * @param e\r\n     */\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        let tmpDiscount = discount;\r\n        if (discount === \"\") {\r\n            tmpDiscount = 0\r\n        }\r\n        if (selectedItemToEdit) { //si mode d'édition\r\n            fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    query: `\r\n                        mutation updateItem($input: ItemInput){\r\n                            updateItem(id: \"${selectedItemToEdit}\", item: $input) {​​​​​​\r\n                            id\r\n                          }​​​​​​​\r\n                        }`,\r\n                    variables: {\r\n                        \"input\": {\r\n                            \"price\": prix,\r\n                            \"comment\": description,\r\n                            \"isHealthy\": Boolean(estSain),\r\n                            \"isSmart\": Boolean(estMalin),\r\n                            \"isResponsible\": Boolean(estResponsable),\r\n                            \"link\": lienProduit,\r\n                            \"uri\": image,\r\n                            \"discount\": tmpDiscount,\r\n                            \"productName\": nomProduit,\r\n                            \"markName\": marque,\r\n                            \"petId\": animalId,\r\n                            \"offerId\": typeProduitId,\r\n                            \"categoryId\": categoryId,\r\n                            \"subCategoryId\": sousCategorieId,\r\n                        }\r\n                    }\r\n                }),\r\n            })\r\n                .then((res) => res.json())\r\n                .then(function (result) {\r\n                    if (result.data.updateItem.id !== null) {\r\n                        window.location.href = '/products';\r\n                    }\r\n                });\r\n        } else {\r\n            let tmpDiscount = discount;\r\n            if (discount === \"\") {\r\n                tmpDiscount = 0\r\n            }\r\n            fetch(`${misterCoockyApi.misterCoockyApi}/graphql`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    query: `\r\n                        mutation CreateItem($input: ItemInput){\r\n                            createItem(item: $input) {​​​​​​\r\n                            id\r\n                          }​​​​​​​\r\n                        }`,\r\n                    variables: {\r\n                        \"input\": {\r\n                            \"price\": prix,\r\n                            \"comment\": description,\r\n                            \"isHealthy\": estSain,\r\n                            \"isSmart\": estMalin,\r\n                            \"isResponsible\": estResponsable,\r\n                            \"link\": lienProduit,\r\n                            \"uri\": image,\r\n                            \"userId\": localStorage.getItem('userId'),\r\n                            \"productName\": nomProduit,\r\n                            \"discount\": tmpDiscount,\r\n                            \"markName\": marque,\r\n                            \"supplierId\": localStorage.getItem('supplierId'),\r\n                            \"petId\": animalId,\r\n                            \"offerId\": typeProduitId,\r\n                            \"categoryId\": categoryId,\r\n                            \"subCategoryId\": sousCategorieId,\r\n                            \"organizationId\": localStorage.getItem('organizationId')\r\n                        }\r\n                    }\r\n                }),\r\n            })\r\n                .then((res) => res.json())\r\n                .then(function (result) {\r\n                    if (result.data.createItem.id !== null) {\r\n                        window.location.href = '/products';\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    function handlePriceChanges(value) {\r\n        setPrix(value);\r\n    }\r\n        /**\r\n             * Renvoi du contenu de la page\r\n             * @returns {*}\r\n         */\r\n        function getAddProductContent() {\r\n            const dataImg = \"data:image/png;base64,\" + image;\r\n            switch (pageId) {\r\n                case 0:\r\n                    return <Box mt={10}>\r\n                        {\r\n                            selectedItemToEdit ? <h2 style={{color: colors.brown}}>Mode édition produit </h2> : <></>\r\n                        }\r\n                        <form className={classes.form} onSubmit={handleSubmit}>\r\n                            <Grid container spacing={1}>\r\n                                <Grid container item xs={12} spacing={2}>\r\n                                    <Grid item align={'center'} sm={12} md={6} lg={3}>\r\n                                        {\r\n                                            image ?\r\n                                                <img src={dataImg} width={200}/> :\r\n                                                null\r\n                                        }\r\n                                        <Button variant=\"outlined\" component=\"label\" size={'small'}>\r\n                                            {image ? \"Remplacer l'image\" : \"Ajouter une image\"}\r\n                                            <input type=\"file\" accept=\"image/*\" hidden onChange={handleImagePreview}/>\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item sm={12} md={6} lg={3}>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl} required={true}\r\n                                                     spacing={3}>\r\n                                            <InputLabel id=\"select-animal\">Animal</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"select-animal\"\r\n                                                id=\"select-animal\"\r\n                                                value={animalId}\r\n                                                onChange={event => {\r\n                                                    handleAnimalChange(event.target.value)\r\n                                                }}\r\n                                                label=\"Animal\">\r\n                                                {\r\n                                                    animalList ? animalList.map((array) => {\r\n                                                        return <MenuItem key={array.id}\r\n                                                                         value={array.id}>{array.name}</MenuItem>\r\n                                                    }) : <></>\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <TextField\r\n                                            required\r\n                                            className={classes.formControl}\r\n                                            id=\"idnNom\"\r\n                                            label=\"Nom du produit\"\r\n                                            value={nomProduit}\r\n                                            onChange={e => (setNomProduit(e.target.value))}\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                                            <FormLabel component=\"legend\">SMR</FormLabel>\r\n                                            <FormGroup>\r\n                                                <FormControlLabel\r\n                                                    control={<Checkbox checked={estSain} color={\"default\"}\r\n                                                                       onChange={e => (setEstSain(e.target.checked))}\r\n                                                                       name=\"Sain\"/>}\r\n                                                    label=\"Sain\"\r\n                                                />\r\n                                                <FormControlLabel\r\n                                                    control={<Checkbox checked={estMalin} color={\"default\"}\r\n                                                                       onChange={e => (setEstMalin(e.target.checked))}\r\n                                                                       name=\"Malin\"/>}\r\n                                                    label=\"Malin\"\r\n                                                />\r\n                                                <FormControlLabel\r\n                                                    control={<Checkbox checked={estResponsable} color={\"default\"}\r\n                                                                       onChange={e => (setEstResponsable(e.target.checked))}\r\n                                                                       name=\"Responsable\"/>}\r\n                                                    label=\"Responsable\"\r\n                                                />\r\n\r\n                                                <TextField\r\n                                                    className={classes.formControl}\r\n                                                    id=\"idnNom\"\r\n                                                    label=\"Discount (%)\"\r\n                                                    value={discount}\r\n                                                    type=\"number\"\r\n                                                    InputProps={{inputProps: {min: -99, max: 0, step: \"0.01\"}}}\r\n                                                    placeholder={\"-0%\"}\r\n                                                    onChange={e => (setDiscount(e.target.value))}\r\n                                                    variant=\"outlined\"\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item sm={12} md={6} lg={3}>\r\n                                        <TextField\r\n                                            required\r\n                                            className={classes.formControl}\r\n                                            id=\"idMarque\"\r\n                                            label=\"Marque\"\r\n                                            value={marque}\r\n                                            onChange={e => (setMarque(e.target.value))}\r\n                                            variant=\"outlined\"\r\n                                        />\r\n\r\n                                        <TextField\r\n                                            required\r\n                                            className={classes.formControl}\r\n                                            id=\"idPrix\"\r\n                                            label=\"Prix\"\r\n                                            type=\"number\"\r\n                                            InputProps={{inputProps: {min: 0.0, step: \"0.01\"}}}\r\n                                            value={prix}\r\n                                            onChange={e => handlePriceChanges(e.target.value)}\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl} required={true}>\r\n                                            <InputLabel id=\"select-typeProduit\">Type de produit</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"select-typeProduit\"\r\n                                                id=\"select-typeProduit\"\r\n                                                value={typeProduitId}\r\n                                                onChange={e => (handleTypeChange(e.target.value))}\r\n                                                label=\"Type de produit\">\r\n                                                {\r\n                                                    typeProduitList ? typeProduitList.map(function (type) {\r\n                                                        return <MenuItem key={type.id}\r\n                                                                         value={type.id}>{type.name}</MenuItem>\r\n                                                    }) : <></>\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl} required>\r\n                                            <InputLabel id=\"select-categorie\">Catégorie</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"select-categorie\"\r\n                                                id=\"select-categorie\"\r\n                                                value={categoryId}\r\n                                                onChange={function (event) {\r\n                                                    onCategorySelected(animalId, event.target.value)\r\n                                                }}\r\n                                                label=\"Catégorie\">\r\n                                                {\r\n                                                    categoryList ? categoryList.map(function (cat) {\r\n                                                        if (cat) {\r\n                                                            return <MenuItem key={cat.id}\r\n                                                                             value={cat.id}>{cat.name}</MenuItem>\r\n                                                        }\r\n                                                    }) : <></>\r\n\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                            <InputLabel id=\"select-sousCategorie\">Sous catégorie</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"select-sousCategorie\"\r\n                                                id=\"select-sousCategorie\"\r\n                                                value={sousCategorieId}\r\n                                                onChange={e => setSousCategorieId(e.target.value)}\r\n                                                label=\"Animal\">\r\n                                                {\r\n                                                    sousCateroriesList ? sousCateroriesList.map(function (sousCat) {\r\n                                                        return <MenuItem key={sousCat.id}\r\n                                                                         value={sousCat.id}>{sousCat.name}</MenuItem>\r\n                                                    }) : <></>\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item sm={12} md={6} lg={3}>\r\n                                        <TextField\r\n                                            id=\"description\"\r\n                                            label=\"Description\"\r\n                                            multiline\r\n                                            rows={8}\r\n                                            defaultValue=\"\"\r\n                                            onChange={e => setDescription(e.target.value)}\r\n                                            value={description}\r\n                                            className={classes.formControl}\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <TextField\r\n                                            required\r\n                                            className={classes.formControl}\r\n                                            id=\"idLien\"\r\n                                            label=\"Lien du produit\"\r\n                                            value={lienProduit}\r\n                                            onChange={e => (setLienProduit(e.target.value))}\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid container item xs={12} spacing={1}>\r\n                                    <Grid item xs={12} sm={3} align={'center'}>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={3}>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={3}>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={3} align={'center'}>\r\n                                        <Button type=\"submit\" variant=\"contained\"\r\n                                                style={{backgroundColor: colors.brown}}>Valider</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </Box>;\r\n                case 1:\r\n                    return <Grid container spacing={3} direction={\"column\"} align={\"center\"} className={classes.root}>\r\n                        <Grid className={classes.paper}>\r\n                            <Grid container spacing={2} className={classes.item}>\r\n                                <Grid item>\r\n                                    <Avatar>1</Avatar>\r\n                                </Grid>\r\n                                <Grid item xs zeroMinWidth>\r\n                                    <Typography className={classes.typotext}>Télécharger le template</Typography>\r\n                                    <Button href={\"files/formulaire_produits.xlsx\"} className={classes.btn2}\r\n                                            style={{backgroundColor: colors.red}} download target=\"_blank\"\r\n                                            startIcon={<GetAppIcon/>}>Télécharger le template</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid className={classes.paper}>\r\n                            <Grid container spacing={2} className={classes.item}>\r\n                                <Grid item>\r\n                                    <Avatar>2</Avatar>\r\n                                </Grid>\r\n                                <Grid item xs zeroMinWidth>\r\n                                    <span className={classes.typotext}>Remplir le document Excel avec vos différents produits</span>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid className={classes.paper}>\r\n                            <Grid container spacing={2} className={classes.item}>\r\n                                <Grid item>\r\n                                    <Avatar>3</Avatar>\r\n                                </Grid>\r\n                                <Grid item xs zeroMinWidth>\r\n                                    <Typography className={classes.typotext}>Importer votre fichier en\r\n                                        .xlxs</Typography>\r\n                                    <Button className={classes.btn2} variant=\"contained\"\r\n                                            style={{backgroundColor: colors.red}} component=\"label\"\r\n                                            startIcon={<GetAppIcon/>}>Déposer le template <input accept=\".xlsx\"\r\n                                                                                                 type=\"file\"\r\n                                                                                                 onChange={e => (handleFile(e))}\r\n                                                                                                 hidden/> </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        {\r\n                            <Snackbar open={fileTransmited} autoHideDuration={6000}\r\n                                      anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}\r\n                                      onClose={() => setFileTransmited(false)}>\r\n                                <Alert severity=\"success\">Fichier transmis, il sera bientôt traîté</Alert>\r\n                            </Snackbar>\r\n                        }\r\n                    </Grid>;\r\n                case 2:\r\n                    return <Grid className={classes.paper} align={'center'}>\r\n                        <Grid container spacing={2} className={classes.item}>\r\n                            <Grid item>\r\n                                <Avatar>1</Avatar>\r\n                            </Grid>\r\n                            <Grid item xs zeroMinWidth>\r\n                                <Typography className={classes.typotext}>Importer votre fichier en .xlxs</Typography>\r\n                                <Button className={classes.btn2} variant=\"contained\"\r\n                                        style={{backgroundColor: colors.red}}\r\n                                        component=\"label\" startIcon={<GetAppIcon/>}>Déposer le template <input\r\n                                    accept=\".xlsx\" type=\"file\" onChange={e => (handleFile(e))} hidden/> </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                        {\r\n                            <Snackbar open={fileTransmited} autoHideDuration={6000}\r\n                                      anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}\r\n                                      onClose={() => setFileTransmited(false)}>\r\n                                <Alert severity=\"success\">Fichier transmis, il sera bientôt traîté</Alert>\r\n                            </Snackbar>\r\n                        }\r\n                    </Grid>;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Header/>\r\n                <Container>\r\n                    <Title name={\"SMR — Ajouter des Produits\"}/>\r\n                    <Grid container spacing={5} justify=\"center\">\r\n                        <Grid item xs={12} sm={3}>\r\n                            <Button component={Link} to=\"/products\" className={classes.btn} variant=\"contained\"\r\n                                    style={{backgroundColor: colors.grey}}>Produits ajoutés</Button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={3}>\r\n                            <Button component={Link} to=\"/addproduct\" className={classes.btn} variant=\"contained\"\r\n                                    style={{backgroundColor: colors.brown}}>Ajout d'un produit</Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <Button component={Link} to=\"/statistics\" className={classes.btn} variant=\"contained\"\r\n                                    style={{backgroundColor: colors.grey}}>Statistiques</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={5} justify=\"center\">\r\n                        <Grid item xs={12} sm={3}>\r\n                            <Button className={classes.btn} variant=\"contained\"\r\n                                    style={pageId === 0 ? {backgroundColor: colors.brown} : {backgroundColor: colors.grey}}\r\n                                    onClick={e => (setPageId(0))}>Remplir un formulaire</Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <Button className={classes.btn} variant=\"contained\"\r\n                                    style={pageId === 1 ? {backgroundColor: colors.brown} : {backgroundColor: colors.grey}}\r\n                                    startIcon={< GetAppIcon/>} onClick={e => (setPageId(1))}>Remplir un\r\n                                template</Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <Button className={classes.btn} variant=\"contained\"\r\n                                    style={pageId === 2 ? {backgroundColor: colors.brown} : {backgroundColor: colors.grey}}\r\n                                    startIcon={<GetAppIcon/>} onClick={e => (setPageId(2))}>Importer un fichier</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box mt={5}>\r\n                        {getAddProductContent()}\r\n                    </Box>\r\n                </Container>\r\n            </div>\r\n        )\r\n\r\n}\r\n\r\nexport default AddProduct\r\n"]},"metadata":{},"sourceType":"module"}