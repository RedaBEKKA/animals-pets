{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\BigNova-Projects\\\\BigNova-Pets Animals\\\\ClonedFromGitHub\\\\animals-pets\\\\src\\\\pages\\\\Register\\\\Components\\\\From2.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, Grid, TextField } from \"@material-ui/core\";\nimport React from \"react\";\nimport PlacesAutocomplete from \"react-places-autocomplete\";\nimport { Field } from \"formik\";\nimport { colors } from \"../../../themes/colors\";\nimport { useStyles } from \"../hooks/Styles\";\nimport Question from \"../../../images/Question.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction From2({\n  onReturn\n}) {\n  _s();\n\n  const classes = useStyles();\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: 48 * 4.5 + 8,\n        width: 400\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.ContainerForm2,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        variant: \"outlined\",\n        required: true,\n        fullWidth: true,\n        id: \"enseigne\",\n        label: \"Nom de l'enseigne\",\n        name: \"enseigne\" // value={companyName}\n        // onChange={(e) => setCompanyName(e.target.value)}\n        ,\n        as: TextField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlacesAutocomplete //   value={adresse}\n    //   onChange={setAdresse}\n    //   onSelect={handleAddressSelect}\n    , {\n      children: ({\n        getInputProps,\n        suggestions,\n        getSuggestionItemProps,\n        loading\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          variant: \"outlined\",\n          required: true,\n          fullWidth: true,\n          ...getInputProps({\n            label: \"Adresse\",\n            placeholder: \"Entrez l'adresse\"\n          }),\n          as: TextField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Chargement...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 26\n          }, this) : null, suggestions.map((suggestion, i) => {\n            const style = {\n              backgroundColor: suggestion.active ? colors.brown : \"#fafafa\"\n            };\n            return /*#__PURE__*/_jsxDEV(\"div\", { ...getSuggestionItemProps(suggestion, {\n                style\n              }),\n              children: suggestion.description\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          required: true,\n          component: \"fieldset\",\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            style: {\n              fontWeight: \"800\",\n              color: \"#000\"\n            },\n            children: \"Type de l'offre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox //   checked={estAlim}\n              //   onChange={(e) => setEstAlim(e.target.checked)}\n              , {\n                name: \"Alimentation\",\n                color: \"default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this),\n              label: \"Alimentation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox //   checked={estAccess}\n              //   onChange={(e) => setEstAccess(e.target.checked)}\n              , {\n                name: \"Accessoire\",\n                color: \"default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this),\n              label: \"Accessoire\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox //   checked={estAccess}\n              //   onChange={(e) => setEstAccess(e.target.checked)}\n              , {\n                name: \"Services\",\n                color: \"default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this),\n              label: \"Services\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              style: {\n                width: \"15vw\",\n                marginTop: 10\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                style: {\n                  display: \"flex\",\n                  alignItems: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  component: \"legend\",\n                  style: {\n                    fontWeight: \"800\",\n                    color: \"#000\"\n                  },\n                  children: \"Label SMR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: Question,\n                  style: {\n                    width: 35,\n                    height: 30\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                style: {\n                  marginTop: 10\n                },\n                control: /*#__PURE__*/_jsxDEV(Checkbox //   checked={estAlim}\n                //   onChange={(e) => setEstAlim(e.target.checked)}\n                , {\n                  name: \"souscrire\",\n                  color: \"default\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this),\n                label: \"Je souhaite souscrire au label Sain,Main,Responsable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 10,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 10,\n        justify: \"space-around\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          style: {\n            backgroundColor: colors.white,\n            color: \"#000\",\n            border: `1px solid ${colors.brown}`\n          },\n          className: classes.btn,\n          onClick: onReturn,\n          children: \"Pr\\xE9c\\xE9dent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          style: {\n            backgroundColor: colors.brown,\n            color: colors.white\n          },\n          className: classes.btn,\n          children: \"Terminer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(From2, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = From2;\nexport default From2;\n{\n  /* <FormControl\r\n  component=\"fieldset\"\r\n  className={classes.formControl}\r\n  required={true}\r\n  >\r\n  <FormLabel\r\n   component=\"legend\"\r\n   style={{ fontWeight: \"800\", color: \"#000\" }}\r\n  >\r\n   Type de l'enseigne\r\n  </FormLabel>\r\n  <FormGroup>\r\n   <FormControlLabel\r\n     control={\r\n       <Checkbox\r\n         //   checked={estArtisan}\r\n         //   onChange={(e) => setEstArtisan(e.target.checked)}\r\n         name=\"estArtisan\"\r\n         color=\"default\"\r\n       />\r\n     }\r\n     label=\"Artisan\"\r\n   />\r\n   <FormControlLabel\r\n     control={\r\n       <Checkbox\r\n         //   checked={estMagasinSpe}\r\n         //   onChange={(e) => setEstMagasinSpe(e.target.checked)}\r\n         name=\"estMagasinSpe\"\r\n         color=\"default\"\r\n       />\r\n     }\r\n     label=\"Magasin spécialisé\"\r\n   />\r\n   <FormControlLabel\r\n     control={\r\n       <Checkbox\r\n         //   checked={estMagasinGen}\r\n         //   onChange={(e) => setEstMagasinGen(e.target.checked)}\r\n         name=\"estMagasinGen\"\r\n         color=\"default\"\r\n       />\r\n     }\r\n     label=\"Magasin généraliste\"\r\n   />\r\n   <FormControlLabel\r\n     control={\r\n       <Checkbox\r\n         //   checked={estAsso}\r\n         //   onChange={(e) => setEstAsso(e.target.checked)}\r\n         name=\"estAsso\"\r\n         color=\"default\"\r\n       />\r\n     }\r\n     label=\"Association\"\r\n   />\r\n   <FormControlLabel\r\n     control={\r\n       <Checkbox\r\n         //   checked={estMarque}\r\n         //   onChange={(e) => setEstMarque(e.target.checked)}\r\n         name=\"estMarque\"\r\n         color=\"default\"\r\n       />\r\n     }\r\n     label=\"Marque\"\r\n   />\r\n  \n   <FormControlLabel\r\n     control={\r\n       <Checkbox\r\n         //   checked={estMarque}\r\n         //   onChange={(e) => setEstMarque(e.target.checked)}\r\n         name=\"MarketPlace\"\r\n         color=\"default\"\r\n       />\r\n     }\r\n     label=\"MarketPlace\"\r\n   />\r\n  </FormGroup>\r\n  </FormControl> */\n}\n{\n  /* <Select\r\n                  multiple\r\n                  value={nomsServicesCHoisis}\r\n                  onChange={handleChange}\r\n                  input={<Input id=\"select-multiple-checkbox\" />}\r\n                  renderValue={(selected) => selected.join(\", \")}\r\n                  MenuProps={MenuProps}\r\n                > */\n}\n{\n  /* {nomsServices.map((name) => (\r\n                  <MenuItem key={name} value={name}>\r\n                    <Checkbox\r\n                      checked={nomsServicesCHoisis.indexOf(name) > -1}\r\n                    />\r\n                    <ListItemText primary={name} />\r\n                  </MenuItem>\r\n                ))} */\n} // </Select>\n//\n\nvar _c;\n\n$RefreshReg$(_c, \"From2\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/BigNova-Projects/BigNova-Pets Animals/ClonedFromGitHub/animals-pets/src/pages/Register/Components/From2.js"],"names":["Box","Button","Checkbox","FormControl","FormControlLabel","FormGroup","FormLabel","Grid","TextField","React","PlacesAutocomplete","Field","colors","useStyles","Question","From2","onReturn","classes","MenuProps","PaperProps","style","maxHeight","width","ContainerForm2","getInputProps","suggestions","getSuggestionItemProps","loading","label","placeholder","map","suggestion","i","backgroundColor","active","brown","description","formControl","fontWeight","color","marginTop","display","alignItems","height","white","border","btn"],"mappings":";;;AAAA,SACEA,GADF,EAEEC,MAFF,EAGEC,QAHF,EAIEC,WAJF,EAKEC,gBALF,EAMEC,SANF,EAOEC,SAPF,EAQEC,IARF,EASEC,SATF,QAUO,mBAVP;AAWA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,8BAArB;;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA6B;AAAA;;AAC3B,QAAMC,OAAO,GAAGJ,SAAS,EAAzB;AACA,QAAMK,SAAS,GAAG;AAChBC,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAE,KAAK,GAAL,GAAW,CADjB;AAELC,QAAAA,KAAK,EAAE;AAFF;AADG;AADI,GAAlB;AAQA,sBACE,QAAC,GAAD;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACM,cAAxB;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,OAAO,EAAC,UADV;AAEE,QAAA,QAAQ,MAFV;AAGE,QAAA,SAAS,MAHX;AAIE,QAAA,EAAE,EAAC,UAJL;AAKE,QAAA,KAAK,EAAC,mBALR;AAME,QAAA,IAAI,EAAC,UANP,CAOE;AACA;AARF;AASE,QAAA,EAAE,EAAEf;AATN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAcE,QAAC,kBAAD,CACA;AACA;AACA;AAHA;AAAA,gBAKG,CAAC;AAAEgB,QAAAA,aAAF;AAAiBC,QAAAA,WAAjB;AAA8BC,QAAAA,sBAA9B;AAAsDC,QAAAA;AAAtD,OAAD,kBACC;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,OAAO,EAAC,UADV;AAEE,UAAA,QAAQ,MAFV;AAGE,UAAA,SAAS,MAHX;AAAA,aAIMH,aAAa,CAAC;AAChBI,YAAAA,KAAK,EAAE,SADS;AAEhBC,YAAAA,WAAW,EAAE;AAFG,WAAD,CAJnB;AAQE,UAAA,EAAE,EAAErB;AARN;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAA,qBACGmB,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,GAA8B,IADxC,EAGGF,WAAW,CAACK,GAAZ,CAAgB,CAACC,UAAD,EAAaC,CAAb,KAAmB;AAClC,kBAAMZ,KAAK,GAAG;AACZa,cAAAA,eAAe,EAAEF,UAAU,CAACG,MAAX,GAAoBtB,MAAM,CAACuB,KAA3B,GAAmC;AADxC,aAAd;AAGA,gCACE,oBAEMT,sBAAsB,CAACK,UAAD,EAAa;AAAEX,gBAAAA;AAAF,eAAb,CAF5B;AAAA,wBAIGW,UAAU,CAACK;AAJd,eACOJ,CADP;AAAA;AAAA;AAAA;AAAA,oBADF;AAQD,WAZA,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YAdF,eAmDE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,8BAGE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,IAAI,MAApB;AAAqB,QAAA,EAAE,EAAE,EAAzB;AAA6B,QAAA,EAAE,EAAE,CAAjC;AAAoC,QAAA,EAAE,EAAE;AAAxC;AAAA;AAAA;AAAA;AAAA,cAHF,eAUE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE,CAA9B;AAAA,+BACE,QAAC,WAAD;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,SAAS,EAAC,UAFZ;AAGE,UAAA,SAAS,EAAEf,OAAO,CAACoB,WAHrB;AAAA,kCAKE,QAAC,SAAD;AACE,YAAA,SAAS,EAAC,QADZ;AAEE,YAAA,KAAK,EAAE;AAAEC,cAAAA,UAAU,EAAE,KAAd;AAAqBC,cAAAA,KAAK,EAAE;AAA5B,aAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAWE,QAAC,SAAD;AAAA,oCACE,QAAC,gBAAD;AACE,cAAA,OAAO,eACL,QAAC,QAAD,CACE;AACA;AAFF;AAGE,gBAAA,IAAI,EAAC,cAHP;AAIE,gBAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,sBAFJ;AASE,cAAA,KAAK,EAAC;AATR;AAAA;AAAA;AAAA;AAAA,oBADF,eAYE,QAAC,gBAAD;AACE,cAAA,OAAO,eACL,QAAC,QAAD,CACE;AACA;AAFF;AAGE,gBAAA,IAAI,EAAC,YAHP;AAIE,gBAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,sBAFJ;AASE,cAAA,KAAK,EAAC;AATR;AAAA;AAAA;AAAA;AAAA,oBAZF,eAuBE,QAAC,gBAAD;AACE,cAAA,OAAO,eACL,QAAC,QAAD,CACE;AACA;AAFF;AAGE,gBAAA,IAAI,EAAC,UAHP;AAIE,gBAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,sBAFJ;AASE,cAAA,KAAK,EAAC;AATR;AAAA;AAAA;AAAA;AAAA,oBAvBF,eAkCE,QAAC,WAAD;AAAa,cAAA,KAAK,EAAE;AAAEjB,gBAAAA,KAAK,EAAE,MAAT;AAAiBkB,gBAAAA,SAAS,EAAE;AAA5B,eAApB;AAAA,sCACE,QAAC,GAAD;AAAK,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,OAAO,EAAE,MAAX;AAAmBC,kBAAAA,UAAU,EAAE;AAA/B,iBAAZ;AAAA,wCACE,QAAC,SAAD;AACE,kBAAA,SAAS,EAAC,QADZ;AAEE,kBAAA,KAAK,EAAE;AAAEJ,oBAAAA,UAAU,EAAE,KAAd;AAAqBC,oBAAAA,KAAK,EAAE;AAA5B,mBAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAOE;AAAK,kBAAA,GAAG,EAAEzB,QAAV;AAAoB,kBAAA,KAAK,EAAE;AAAEQ,oBAAAA,KAAK,EAAE,EAAT;AAAaqB,oBAAAA,MAAM,EAAE;AAArB;AAA3B;AAAA;AAAA;AAAA;AAAA,wBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAWE,QAAC,gBAAD;AACE,gBAAA,KAAK,EAAE;AAAEH,kBAAAA,SAAS,EAAE;AAAb,iBADT;AAEE,gBAAA,OAAO,eACL,QAAC,QAAD,CACE;AACA;AAFF;AAGE,kBAAA,IAAI,EAAC,WAHP;AAIE,kBAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAUE,gBAAA,KAAK,EAAC;AAVR;AAAA;AAAA;AAAA;AAAA,sBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnDF,eAwIE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,EAAzB;AAA6B,QAAA,OAAO,EAAC,cAArC;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,KAAK,EAAE;AACLP,YAAAA,eAAe,EAAErB,MAAM,CAACgC,KADnB;AAELL,YAAAA,KAAK,EAAE,MAFF;AAGLM,YAAAA,MAAM,EAAG,aAAYjC,MAAM,CAACuB,KAAM;AAH7B,WAFT;AAOE,UAAA,SAAS,EAAElB,OAAO,CAAC6B,GAPrB;AAQE,UAAA,OAAO,EAAE9B,QARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,OAAO,EAAC,WAFV;AAGE,UAAA,KAAK,EAAE;AAAEiB,YAAAA,eAAe,EAAErB,MAAM,CAACuB,KAA1B;AAAiCI,YAAAA,KAAK,EAAE3B,MAAM,CAACgC;AAA/C,WAHT;AAIE,UAAA,SAAS,EAAE3B,OAAO,CAAC6B,GAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAxIF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmKD;;GA7KQ/B,K;UACSF,S;;;KADTE,K;AA+KT,eAAeA,KAAf;AAGA;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAkB;AAElB;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACC;AACD;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACC,C,CACD;AACA","sourcesContent":["import {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  FormLabel,\r\n  Grid,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport PlacesAutocomplete from \"react-places-autocomplete\";\r\nimport { Field } from \"formik\";\r\nimport { colors } from \"../../../themes/colors\";\r\nimport { useStyles } from \"../hooks/Styles\";\r\nimport Question from \"../../../images/Question.png\";\r\n\r\nfunction From2({ onReturn }) {\r\n  const classes = useStyles();\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: 48 * 4.5 + 8,\r\n        width: 400,\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <Box className={classes.ContainerForm2}>\r\n      <Box mb={2}>\r\n        <Field\r\n          variant=\"outlined\"\r\n          required\r\n          fullWidth\r\n          id=\"enseigne\"\r\n          label=\"Nom de l'enseigne\"\r\n          name=\"enseigne\"\r\n          // value={companyName}\r\n          // onChange={(e) => setCompanyName(e.target.value)}\r\n          as={TextField}\r\n        />\r\n      </Box>\r\n      <PlacesAutocomplete\r\n      //   value={adresse}\r\n      //   onChange={setAdresse}\r\n      //   onSelect={handleAddressSelect}\r\n      >\r\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n          <div>\r\n            <Field\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              {...getInputProps({\r\n                label: \"Adresse\",\r\n                placeholder: \"Entrez l'adresse\",\r\n              })}\r\n              as={TextField}\r\n            />\r\n            <div>\r\n              {loading ? <div>Chargement...</div> : null}\r\n\r\n              {suggestions.map((suggestion, i) => {\r\n                const style = {\r\n                  backgroundColor: suggestion.active ? colors.brown : \"#fafafa\",\r\n                };\r\n                return (\r\n                  <div\r\n                    key={i}\r\n                    {...getSuggestionItemProps(suggestion, { style })}\r\n                  >\r\n                    {suggestion.description}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </PlacesAutocomplete>\r\n      <Grid container>\r\n\r\n\r\n        <Grid container item xs={12} sm={6} md={6}>\r\n        \r\n        </Grid>\r\n\r\n\r\n\r\n\r\n        <Grid item xs={12} sm={6} md={6}>\r\n          <FormControl\r\n            required\r\n            component=\"fieldset\"\r\n            className={classes.formControl}\r\n          >\r\n            <FormLabel\r\n              component=\"legend\"\r\n              style={{ fontWeight: \"800\", color: \"#000\" }}\r\n            >\r\n              Type de l'offre\r\n            </FormLabel>\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    //   checked={estAlim}\r\n                    //   onChange={(e) => setEstAlim(e.target.checked)}\r\n                    name=\"Alimentation\"\r\n                    color=\"default\"\r\n                  />\r\n                }\r\n                label=\"Alimentation\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    //   checked={estAccess}\r\n                    //   onChange={(e) => setEstAccess(e.target.checked)}\r\n                    name=\"Accessoire\"\r\n                    color=\"default\"\r\n                  />\r\n                }\r\n                label=\"Accessoire\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    //   checked={estAccess}\r\n                    //   onChange={(e) => setEstAccess(e.target.checked)}\r\n                    name=\"Services\"\r\n                    color=\"default\"\r\n                  />\r\n                }\r\n                label=\"Services\"\r\n              />\r\n              <FormControl style={{ width: \"15vw\", marginTop: 10 }}>\r\n                <Box style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                  <FormLabel\r\n                    component=\"legend\"\r\n                    style={{ fontWeight: \"800\", color: \"#000\" }}\r\n                  >\r\n                    Label SMR\r\n                  </FormLabel>\r\n                  <img src={Question} style={{ width: 35, height: 30 }} />\r\n                </Box>\r\n\r\n                <FormControlLabel\r\n                  style={{ marginTop: 10 }}\r\n                  control={\r\n                    <Checkbox\r\n                      //   checked={estAlim}\r\n                      //   onChange={(e) => setEstAlim(e.target.checked)}\r\n                      name=\"souscrire\"\r\n                      color=\"default\"\r\n                    />\r\n                  }\r\n                  label=\"Je souhaite souscrire au label Sain,Main,Responsable\"\r\n                />\r\n              </FormControl>\r\n            </FormGroup>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Box mt={10}>\r\n        <Grid container spacing={10} justify=\"space-around\">\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{\r\n              backgroundColor: colors.white,\r\n              color: \"#000\",\r\n              border: `1px solid ${colors.brown}`,\r\n            }}\r\n            className={classes.btn}\r\n            onClick={onReturn}\r\n          >\r\n            Précédent\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            style={{ backgroundColor: colors.brown, color: colors.white }}\r\n            className={classes.btn}\r\n          >\r\n            Terminer\r\n          </Button>\r\n        </Grid>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default From2;\r\n\r\n\r\n{/* <FormControl\r\ncomponent=\"fieldset\"\r\nclassName={classes.formControl}\r\nrequired={true}\r\n>\r\n<FormLabel\r\n  component=\"legend\"\r\n  style={{ fontWeight: \"800\", color: \"#000\" }}\r\n>\r\n  Type de l'enseigne\r\n</FormLabel>\r\n<FormGroup>\r\n  <FormControlLabel\r\n    control={\r\n      <Checkbox\r\n        //   checked={estArtisan}\r\n        //   onChange={(e) => setEstArtisan(e.target.checked)}\r\n        name=\"estArtisan\"\r\n        color=\"default\"\r\n      />\r\n    }\r\n    label=\"Artisan\"\r\n  />\r\n  <FormControlLabel\r\n    control={\r\n      <Checkbox\r\n        //   checked={estMagasinSpe}\r\n        //   onChange={(e) => setEstMagasinSpe(e.target.checked)}\r\n        name=\"estMagasinSpe\"\r\n        color=\"default\"\r\n      />\r\n    }\r\n    label=\"Magasin spécialisé\"\r\n  />\r\n  <FormControlLabel\r\n    control={\r\n      <Checkbox\r\n        //   checked={estMagasinGen}\r\n        //   onChange={(e) => setEstMagasinGen(e.target.checked)}\r\n        name=\"estMagasinGen\"\r\n        color=\"default\"\r\n      />\r\n    }\r\n    label=\"Magasin généraliste\"\r\n  />\r\n  <FormControlLabel\r\n    control={\r\n      <Checkbox\r\n        //   checked={estAsso}\r\n        //   onChange={(e) => setEstAsso(e.target.checked)}\r\n        name=\"estAsso\"\r\n        color=\"default\"\r\n      />\r\n    }\r\n    label=\"Association\"\r\n  />\r\n  <FormControlLabel\r\n    control={\r\n      <Checkbox\r\n        //   checked={estMarque}\r\n        //   onChange={(e) => setEstMarque(e.target.checked)}\r\n        name=\"estMarque\"\r\n        color=\"default\"\r\n      />\r\n    }\r\n    label=\"Marque\"\r\n  />\r\n\r\n  <FormControlLabel\r\n    control={\r\n      <Checkbox\r\n        //   checked={estMarque}\r\n        //   onChange={(e) => setEstMarque(e.target.checked)}\r\n        name=\"MarketPlace\"\r\n        color=\"default\"\r\n      />\r\n    }\r\n    label=\"MarketPlace\"\r\n  />\r\n</FormGroup>\r\n</FormControl> */}\r\n\r\n{\r\n  /* <Select\r\n                  multiple\r\n                  value={nomsServicesCHoisis}\r\n                  onChange={handleChange}\r\n                  input={<Input id=\"select-multiple-checkbox\" />}\r\n                  renderValue={(selected) => selected.join(\", \")}\r\n                  MenuProps={MenuProps}\r\n                > */\r\n}\r\n{\r\n  /* {nomsServices.map((name) => (\r\n                  <MenuItem key={name} value={name}>\r\n                    <Checkbox\r\n                      checked={nomsServicesCHoisis.indexOf(name) > -1}\r\n                    />\r\n                    <ListItemText primary={name} />\r\n                  </MenuItem>\r\n                ))} */\r\n}\r\n// </Select>\r\n//\r\n"]},"metadata":{},"sourceType":"module"}