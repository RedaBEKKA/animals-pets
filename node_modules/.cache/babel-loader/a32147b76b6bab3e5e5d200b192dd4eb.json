{"ast":null,"code":"var _jsxFileName = \"D:\\\\All - Projects\\\\PROJECTS - Gitkraken\\\\Project-12 - BigNova PetsAnimals\\\\animals-pets\\\\src\\\\pages\\\\Register\\\\Components\\\\FormRegister.js\",\n    _s = $RefreshSig$();\n\n/*eslint-disable*/\nimport { Box, Paper } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { Form, Formik } from \"formik\";\nimport { UseRegister } from \"../hooks/useForm\";\nimport From1 from \"./From1\";\nimport From2 from \"./From2\";\nimport { useStyles } from \"../hooks/Styles\";\nimport Error from \"./Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormRegister(props) {\n  _s();\n\n  const {\n    RegsiterSchema,\n    registerValues,\n    pageId,\n    fetchEmail,\n    onReturn,\n    alertMail\n  } = UseRegister();\n  const classes = useStyles();\n  console.log('pageId', pageId);\n\n  const GetFormContent = ({\n    formik,\n    onReturn,\n    alertMail\n  }) => {\n    switch (pageId) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(From1, {\n          formik: formik,\n          alertMail: alertMail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 16\n        }, this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(From2, {\n          formik: formik,\n          onReturn: onReturn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 16\n        }, this);\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.IndexPanier,\n    elevation: 0,\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      className: classes.Form,\n      initialValues: registerValues,\n      validationSchema: RegsiterSchema,\n      onSubmit: (value, formikAction) => {\n        setTimeout(() => {\n          console.log('value', value.email, formikAction); // fetchEmail(value)\n\n          formikAction.setSubmitting(false);\n          formikAction.resetForm();\n        }, 3000);\n      },\n      children: formik => {\n        console.log(\"formik---------\", formik.errors);\n        return [/*#__PURE__*/_jsxDEV(Form, {\n          autoComplete: \"on\",\n          name: \"hotel\",\n          children: [formik.errors.password && formik.touched.password && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 69\n          }, this), formik.errors.cfpassword && formik.touched.cfpassword && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 72\n          }, this), /*#__PURE__*/_jsxDEV(GetFormContent, {\n            formik: formik,\n            onReturn: onReturn,\n            alertMail: alertMail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)];\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormRegister, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = FormRegister;\nexport default FormRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormRegister\");","map":{"version":3,"sources":["D:/All - Projects/PROJECTS - Gitkraken/Project-12 - BigNova PetsAnimals/animals-pets/src/pages/Register/Components/FormRegister.js"],"names":["Box","Paper","React","useState","Form","Formik","UseRegister","From1","From2","useStyles","Error","FormRegister","props","RegsiterSchema","registerValues","pageId","fetchEmail","onReturn","alertMail","classes","console","log","GetFormContent","formik","IndexPanier","value","formikAction","setTimeout","email","setSubmitting","resetForm","errors","password","touched","cfpassword"],"mappings":"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","sourcesContent":["/*eslint-disable*/\r\nimport { Box, Paper } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport { Form, Formik } from \"formik\";\r\nimport { UseRegister } from \"../hooks/useForm\";\r\nimport From1 from \"./From1\";\r\nimport From2 from \"./From2\";\r\nimport { useStyles } from \"../hooks/Styles\";\r\nimport Error from \"./Error\";\r\n\r\nfunction FormRegister(props) {\r\n  const { RegsiterSchema, registerValues,pageId,fetchEmail,onReturn,alertMail } = UseRegister();\r\n  const classes = useStyles();\r\nconsole.log('pageId', pageId)\r\n  const GetFormContent = ({ formik,onReturn,alertMail }) => {\r\n    switch (pageId) {\r\n      case 0:\r\n        return <From1 formik={formik} alertMail={alertMail}  />;\r\n      case 1:\r\n        return <From2 formik={formik}  onReturn={onReturn}/>;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.IndexPanier} elevation={0}>\r\n      <Formik\r\n        className={classes.Form}\r\n        initialValues={registerValues}\r\n        validationSchema={RegsiterSchema}\r\n        onSubmit={(value,formikAction) => {\r\n          setTimeout(() => {\r\n            console.log('value', value.email,formikAction);\r\n            // fetchEmail(value)\r\n            formikAction.setSubmitting(false);\r\n            formikAction.resetForm();\r\n          }, 3000);\r\n        }}\r\n      >\r\n        {(formik) => {\r\n          console.log(\"formik---------\", formik.errors);\r\n\r\n          return [\r\n            <Form autoComplete=\"on\" name=\"hotel\">\r\n              {formik.errors.password && formik.touched.password && <Error />}\r\n              {formik.errors.cfpassword &&formik.touched.cfpassword && <Error />}\r\n              <GetFormContent formik={formik} onReturn={onReturn} alertMail={alertMail} />\r\n            </Form>,\r\n          ];\r\n        }}\r\n      </Formik>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default FormRegister;\r\n"]},"metadata":{},"sourceType":"module"}