{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\BigNova-Projects\\\\BigNova-Pets Animals\\\\ClonedFromGitHub\\\\animals-pets\\\\src\\\\pages\\\\Register\\\\Components\\\\Form2\\\\Components\\\\CheckboxGroup.js\";\nimport React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport TextError from '../../TextError';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CheckboxGroup(props) {\n  const {\n    label,\n    name,\n    options,\n    field,\n    ...rest\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-control\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Field, {\n      name: name,\n      children: field => {\n        return options.map(option => {\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: option.value,\n              ...field,\n              ...rest,\n              value: option.value // checked={field?.value.includes(option.value)}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: option.value,\n              children: option.key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 17\n            }, this)]\n          }, option.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 15\n          }, this);\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      component: TextError,\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = CheckboxGroup;\nexport default CheckboxGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxGroup\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/BigNova-Projects/BigNova-Pets Animals/ClonedFromGitHub/animals-pets/src/pages/Register/Components/Form2/Components/CheckboxGroup.js"],"names":["React","Field","ErrorMessage","TextError","CheckboxGroup","props","label","name","options","field","rest","map","option","value","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,QAApC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;;AAEA,SAASC,aAAT,CAAwBC,KAAxB,EAA+B;AAC7B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,OAAf;AAAuBC,IAAAA,KAAvB;AAA8B,OAAGC;AAAjC,MAA0CL,KAAhD;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAA,gBAAQC;AAAR;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEC,IAAb;AAAA,gBACKE,KAAF,IAAa;AACZ,eAAOD,OAAO,CAACG,GAAR,CAAYC,MAAM,IAAI;AAC3B,8BACE,QAAC,KAAD,CAAO,QAAP;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,EAAE,EAAEA,MAAM,CAACC,KAFb;AAAA,iBAGMJ,KAHN;AAAA,iBAIMC,IAJN;AAKE,cAAA,KAAK,EAAEE,MAAM,CAACC,KALhB,CAME;;AANF;AAAA;AAAA;AAAA;AAAA,oBADF,eASE;AAAO,cAAA,OAAO,EAAED,MAAM,CAACC,KAAvB;AAAA,wBAA+BD,MAAM,CAACE;AAAtC;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA,aAAqBF,MAAM,CAACE,GAA5B;AAAA;AAAA;AAAA;AAAA,kBADF;AAaD,SAdM,CAAP;AAeD;AAjBH;AAAA;AAAA;AAAA;AAAA,YAFF,eAqBE,QAAC,YAAD;AAAc,MAAA,SAAS,EAAEX,SAAzB;AAAoC,MAAA,IAAI,EAAEI;AAA1C;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;KA3BQH,a;AA6BT,eAAeA,aAAf","sourcesContent":["import React from 'react'\r\nimport { Field, ErrorMessage } from 'formik'\r\nimport TextError from '../../TextError'\r\n\r\nfunction CheckboxGroup (props) {\r\n  const { label, name, options,field, ...rest } = props\r\n  return (\r\n    <div className='form-control'>\r\n      <label>{label}</label>\r\n      <Field name={name}>\r\n        {( field ) => {\r\n          return options.map(option => {\r\n            return (\r\n              <React.Fragment key={option.key}>\r\n                <input\r\n                  type='checkbox'\r\n                  id={option.value}\r\n                  {...field}\r\n                  {...rest}\r\n                  value={option.value}\r\n                  // checked={field?.value.includes(option.value)}\r\n                />\r\n                <label htmlFor={option.value}>{option.key}</label>\r\n              </React.Fragment>\r\n            )\r\n          })\r\n        }}\r\n      </Field>\r\n      <ErrorMessage component={TextError} name={name} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckboxGroup"]},"metadata":{},"sourceType":"module"}