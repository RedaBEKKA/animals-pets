{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nimport { isFunction, noop } from '../utils/js_utils';\n/**\r\n * Provides a set of static methods for creating Disposables.\r\n * @param {Function} action Action to run during the first call to dispose.\r\n * The action is guaranteed to be run at most once.\r\n */\n\nvar Disposable =\n/** @class */\nfunction () {\n  var Disposable = /*#__PURE__*/function () {\n    function Disposable(action) {\n      _classCallCheck(this, Disposable);\n\n      this.isDisposed = false;\n      this.action = isFunction(action) ? action : noop;\n    }\n    /**\r\n     * Validates whether the given object is a disposable\r\n     * @param {Object} Object to test whether it has a dispose method\r\n     * @returns {Boolean} true if a disposable object, else false.\r\n     */\n\n\n    _createClass(Disposable, [{\n      key: \"dispose\",\n\n      /** Performs the task of cleaning up resources. */\n      value: function dispose() {\n        if (!this.isDisposed) {\n          this.action();\n          this.isDisposed = true;\n        }\n      }\n    }], [{\n      key: \"isDisposable\",\n      value: function isDisposable(d) {\n        return Boolean(d && isFunction(d.dispose));\n      }\n    }, {\n      key: \"_fixup\",\n      value: function _fixup(result) {\n        return Disposable.isDisposable(result) ? result : Disposable.empty;\n      }\n      /**\r\n       * Creates a disposable object that invokes the specified action when disposed.\r\n       * @param {Function} dispose Action to run during the first call to dispose.\r\n       * The action is guaranteed to be run at most once.\r\n       * @return {Disposable} The disposable object that runs the given action upon disposal.\r\n       */\n\n    }, {\n      key: \"create\",\n      value: function create(action) {\n        return new Disposable(action);\n      }\n    }]);\n\n    return Disposable;\n  }();\n  /**\r\n   * Gets the disposable that does nothing when disposed.\r\n   */\n\n\n  Disposable.empty = {\n    dispose: noop\n  };\n  return Disposable;\n}();\n\nexport { Disposable };\n/**\r\n * Represents a group of disposable resources that are disposed together.\r\n * @constructor\r\n */\n\nexport var CompositeDisposable = /*#__PURE__*/function () {\n  function CompositeDisposable() {\n    _classCallCheck(this, CompositeDisposable);\n\n    this.isDisposed = false;\n\n    for (var _len = arguments.length, disposables = new Array(_len), _key = 0; _key < _len; _key++) {\n      disposables[_key] = arguments[_key];\n    }\n\n    this.disposables = disposables;\n  }\n  /**\r\n   * Adds a disposable to the CompositeDisposable or disposes the disposable if the CompositeDisposable is disposed.\r\n   * @param {Any} item Disposable to add.\r\n   */\n\n\n  _createClass(CompositeDisposable, [{\n    key: \"add\",\n    value: function add(item) {\n      if (this.isDisposed) {\n        item.dispose();\n      } else {\n        this.disposables.push(item);\n      }\n    }\n    /**\r\n     * Removes and disposes the first occurrence of a disposable from the CompositeDisposable.\r\n     * @param {Any} item Disposable to remove.\r\n     * @returns {Boolean} true if found; false otherwise.\r\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(item) {\n      var shouldDispose = false;\n\n      if (!this.isDisposed) {\n        var idx = this.disposables.indexOf(item);\n\n        if (idx !== -1) {\n          shouldDispose = true;\n          this.disposables.splice(idx, 1);\n          item.dispose();\n        }\n      }\n\n      return shouldDispose;\n    }\n    /**\r\n     *  Disposes all disposables in the group and removes them from the group but\r\n     *  does not dispose the CompositeDisposable.\r\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      if (!this.isDisposed) {\n        var len = this.disposables.length;\n        var currentDisposables = new Array(len);\n\n        for (var i = 0; i < len; i++) {\n          currentDisposables[i] = this.disposables[i];\n        }\n\n        this.disposables = [];\n\n        for (var _i = 0; _i < len; _i++) {\n          currentDisposables[_i].dispose();\n        }\n      }\n    }\n    /**\r\n     *  Disposes all disposables in the group and removes them from the group.\r\n     */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (!this.isDisposed) {\n        this.isDisposed = true;\n        var len = this.disposables.length;\n        var currentDisposables = new Array(len);\n\n        for (var i = 0; i < len; i++) {\n          currentDisposables[i] = this.disposables[i];\n        }\n\n        this.disposables = [];\n\n        for (var _i2 = 0; _i2 < len; _i2++) {\n          currentDisposables[_i2].dispose();\n        }\n      }\n    }\n  }]);\n\n  return CompositeDisposable;\n}();\n/**\r\n * Represents a disposable resource whose underlying disposable resource can\r\n * be replaced by another disposable resource, causing automatic disposal of\r\n * the previous underlying disposable resource.\r\n */\n\nexport var SerialDisposable = /*#__PURE__*/function () {\n  function SerialDisposable() {\n    _classCallCheck(this, SerialDisposable);\n\n    this.isDisposed = false;\n  }\n  /**\r\n   * Gets the underlying disposable.\r\n   * @returns {Any} the underlying disposable.\r\n   */\n\n\n  _createClass(SerialDisposable, [{\n    key: \"getDisposable\",\n    value: function getDisposable() {\n      return this.current;\n    }\n  }, {\n    key: \"setDisposable\",\n    value: function setDisposable(value) {\n      var shouldDispose = this.isDisposed;\n\n      if (!shouldDispose) {\n        var old = this.current;\n        this.current = value;\n\n        if (old) {\n          old.dispose();\n        }\n      }\n\n      if (shouldDispose && value) {\n        value.dispose();\n      }\n    }\n    /** Performs the task of cleaning up resources. */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (!this.isDisposed) {\n        this.isDisposed = true;\n        var old = this.current;\n        this.current = undefined;\n\n        if (old) {\n          old.dispose();\n        }\n      }\n    }\n  }]);\n\n  return SerialDisposable;\n}();","map":{"version":3,"sources":["C:/Users/PC/Desktop/BigNova-Projects/BigNova-Pets Animals/animals-pets/node_modules/react-dnd/dist/esm/decorators/disposables.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","isFunction","noop","Disposable","action","isDisposed","value","dispose","isDisposable","d","Boolean","_fixup","result","empty","create","CompositeDisposable","_len","arguments","disposables","Array","_key","add","item","push","remove","shouldDispose","idx","indexOf","splice","clear","len","currentDisposables","_i","_i2","SerialDisposable","getDisposable","current","setDisposable","old","undefined"],"mappings":"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","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\nimport { isFunction, noop } from '../utils/js_utils';\r\n/**\r\n * Provides a set of static methods for creating Disposables.\r\n * @param {Function} action Action to run during the first call to dispose.\r\n * The action is guaranteed to be run at most once.\r\n */\r\n\r\nvar Disposable =\r\n/** @class */\r\nfunction () {\r\n  var Disposable = /*#__PURE__*/function () {\r\n    function Disposable(action) {\r\n      _classCallCheck(this, Disposable);\r\n\r\n      this.isDisposed = false;\r\n      this.action = isFunction(action) ? action : noop;\r\n    }\r\n    /**\r\n     * Validates whether the given object is a disposable\r\n     * @param {Object} Object to test whether it has a dispose method\r\n     * @returns {Boolean} true if a disposable object, else false.\r\n     */\r\n\r\n\r\n    _createClass(Disposable, [{\r\n      key: \"dispose\",\r\n\r\n      /** Performs the task of cleaning up resources. */\r\n      value: function dispose() {\r\n        if (!this.isDisposed) {\r\n          this.action();\r\n          this.isDisposed = true;\r\n        }\r\n      }\r\n    }], [{\r\n      key: \"isDisposable\",\r\n      value: function isDisposable(d) {\r\n        return Boolean(d && isFunction(d.dispose));\r\n      }\r\n    }, {\r\n      key: \"_fixup\",\r\n      value: function _fixup(result) {\r\n        return Disposable.isDisposable(result) ? result : Disposable.empty;\r\n      }\r\n      /**\r\n       * Creates a disposable object that invokes the specified action when disposed.\r\n       * @param {Function} dispose Action to run during the first call to dispose.\r\n       * The action is guaranteed to be run at most once.\r\n       * @return {Disposable} The disposable object that runs the given action upon disposal.\r\n       */\r\n\r\n    }, {\r\n      key: \"create\",\r\n      value: function create(action) {\r\n        return new Disposable(action);\r\n      }\r\n    }]);\r\n\r\n    return Disposable;\r\n  }();\r\n  /**\r\n   * Gets the disposable that does nothing when disposed.\r\n   */\r\n\r\n\r\n  Disposable.empty = {\r\n    dispose: noop\r\n  };\r\n  return Disposable;\r\n}();\r\n\r\nexport { Disposable };\r\n/**\r\n * Represents a group of disposable resources that are disposed together.\r\n * @constructor\r\n */\r\n\r\nexport var CompositeDisposable = /*#__PURE__*/function () {\r\n  function CompositeDisposable() {\r\n    _classCallCheck(this, CompositeDisposable);\r\n\r\n    this.isDisposed = false;\r\n\r\n    for (var _len = arguments.length, disposables = new Array(_len), _key = 0; _key < _len; _key++) {\r\n      disposables[_key] = arguments[_key];\r\n    }\r\n\r\n    this.disposables = disposables;\r\n  }\r\n  /**\r\n   * Adds a disposable to the CompositeDisposable or disposes the disposable if the CompositeDisposable is disposed.\r\n   * @param {Any} item Disposable to add.\r\n   */\r\n\r\n\r\n  _createClass(CompositeDisposable, [{\r\n    key: \"add\",\r\n    value: function add(item) {\r\n      if (this.isDisposed) {\r\n        item.dispose();\r\n      } else {\r\n        this.disposables.push(item);\r\n      }\r\n    }\r\n    /**\r\n     * Removes and disposes the first occurrence of a disposable from the CompositeDisposable.\r\n     * @param {Any} item Disposable to remove.\r\n     * @returns {Boolean} true if found; false otherwise.\r\n     */\r\n\r\n  }, {\r\n    key: \"remove\",\r\n    value: function remove(item) {\r\n      var shouldDispose = false;\r\n\r\n      if (!this.isDisposed) {\r\n        var idx = this.disposables.indexOf(item);\r\n\r\n        if (idx !== -1) {\r\n          shouldDispose = true;\r\n          this.disposables.splice(idx, 1);\r\n          item.dispose();\r\n        }\r\n      }\r\n\r\n      return shouldDispose;\r\n    }\r\n    /**\r\n     *  Disposes all disposables in the group and removes them from the group but\r\n     *  does not dispose the CompositeDisposable.\r\n     */\r\n\r\n  }, {\r\n    key: \"clear\",\r\n    value: function clear() {\r\n      if (!this.isDisposed) {\r\n        var len = this.disposables.length;\r\n        var currentDisposables = new Array(len);\r\n\r\n        for (var i = 0; i < len; i++) {\r\n          currentDisposables[i] = this.disposables[i];\r\n        }\r\n\r\n        this.disposables = [];\r\n\r\n        for (var _i = 0; _i < len; _i++) {\r\n          currentDisposables[_i].dispose();\r\n        }\r\n      }\r\n    }\r\n    /**\r\n     *  Disposes all disposables in the group and removes them from the group.\r\n     */\r\n\r\n  }, {\r\n    key: \"dispose\",\r\n    value: function dispose() {\r\n      if (!this.isDisposed) {\r\n        this.isDisposed = true;\r\n        var len = this.disposables.length;\r\n        var currentDisposables = new Array(len);\r\n\r\n        for (var i = 0; i < len; i++) {\r\n          currentDisposables[i] = this.disposables[i];\r\n        }\r\n\r\n        this.disposables = [];\r\n\r\n        for (var _i2 = 0; _i2 < len; _i2++) {\r\n          currentDisposables[_i2].dispose();\r\n        }\r\n      }\r\n    }\r\n  }]);\r\n\r\n  return CompositeDisposable;\r\n}();\r\n/**\r\n * Represents a disposable resource whose underlying disposable resource can\r\n * be replaced by another disposable resource, causing automatic disposal of\r\n * the previous underlying disposable resource.\r\n */\r\n\r\nexport var SerialDisposable = /*#__PURE__*/function () {\r\n  function SerialDisposable() {\r\n    _classCallCheck(this, SerialDisposable);\r\n\r\n    this.isDisposed = false;\r\n  }\r\n  /**\r\n   * Gets the underlying disposable.\r\n   * @returns {Any} the underlying disposable.\r\n   */\r\n\r\n\r\n  _createClass(SerialDisposable, [{\r\n    key: \"getDisposable\",\r\n    value: function getDisposable() {\r\n      return this.current;\r\n    }\r\n  }, {\r\n    key: \"setDisposable\",\r\n    value: function setDisposable(value) {\r\n      var shouldDispose = this.isDisposed;\r\n\r\n      if (!shouldDispose) {\r\n        var old = this.current;\r\n        this.current = value;\r\n\r\n        if (old) {\r\n          old.dispose();\r\n        }\r\n      }\r\n\r\n      if (shouldDispose && value) {\r\n        value.dispose();\r\n      }\r\n    }\r\n    /** Performs the task of cleaning up resources. */\r\n\r\n  }, {\r\n    key: \"dispose\",\r\n    value: function dispose() {\r\n      if (!this.isDisposed) {\r\n        this.isDisposed = true;\r\n        var old = this.current;\r\n        this.current = undefined;\r\n\r\n        if (old) {\r\n          old.dispose();\r\n        }\r\n      }\r\n    }\r\n  }]);\r\n\r\n  return SerialDisposable;\r\n}();"]},"metadata":{},"sourceType":"module"}