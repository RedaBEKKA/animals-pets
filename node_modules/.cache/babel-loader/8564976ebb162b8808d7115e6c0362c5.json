{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\BigNova-Projects\\\\BigNova-Pets Animals\\\\ClonedFromGitHub\\\\animals-pets\\\\src\\\\pages\\\\Register\\\\Components\\\\Form2\\\\Components\\\\CheckboxGroup.js\";\nimport React from \"react\";\nimport { Field, ErrorMessage } from \"formik\";\nimport TextError from \"../../TextError\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CheckboxGroup(props) {\n  const {\n    label,\n    name,\n    options,\n    field,\n    ...rest\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-control\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), options.map(option => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        name: name,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: option.value,\n          ...field,\n          ...rest,\n          value: option.value // checked={field?.value.includes(option.value)}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: option.value,\n          children: option.key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, option.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      component: TextError,\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = CheckboxGroup;\nexport default CheckboxGroup;\n{\n  /* {(field) => {\r\n          console.log(\"field\", field);\r\n        {/* }} */\n} // console.log(\"name\", name); */}\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxGroup\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/BigNova-Projects/BigNova-Pets Animals/ClonedFromGitHub/animals-pets/src/pages/Register/Components/Form2/Components/CheckboxGroup.js"],"names":["React","Field","ErrorMessage","TextError","CheckboxGroup","props","label","name","options","field","rest","map","option","value","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,QAApC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA,KAAxB;AAA+B,OAAGC;AAAlC,MAA2CL,KAAjD;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAA,gBAAQC;AAAR;AAAA;AAAA;AAAA;AAAA,YADF,EAIGE,OAAO,CAACG,GAAR,CAAaC,MAAD,IAAY;AACvB,0BACE,QAAC,KAAD,CAAO,QAAP;AAAiC,QAAA,IAAI,EAAEL,IAAvC;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,EAAE,EAAEK,MAAM,CAACC,KAFb;AAAA,aAGMJ,KAHN;AAAA,aAIMC,IAJN;AAKE,UAAA,KAAK,EAAEE,MAAM,CAACC,KALhB,CAME;;AANF;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAO,UAAA,OAAO,EAAED,MAAM,CAACC,KAAvB;AAAA,oBAA+BD,MAAM,CAACE;AAAtC;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA,SAAqBF,MAAM,CAACE,GAA5B;AAAA;AAAA;AAAA;AAAA,cADF;AAaD,KAdA,CAJH,eAoBE,QAAC,YAAD;AAAc,MAAA,SAAS,EAAEX,SAAzB;AAAoC,MAAA,IAAI,EAAEI;AAA1C;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;KA1BQH,a;AA4BT,eAAeA,aAAf;AACA;AACE;AACF;AACA;AACC,C,CACD","sourcesContent":["import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport TextError from \"../../TextError\";\r\n\r\nfunction CheckboxGroup(props) {\r\n  const { label, name, options, field, ...rest } = props;\r\n  return (\r\n    <div className=\"form-control\">\r\n      <label>{label}</label>\r\n      {/* <Field name={name}> */}\r\n\r\n      {options.map((option) => {\r\n        return (\r\n          <React.Fragment key={option.key} name={name}>\r\n            <input\r\n              type=\"checkbox\"\r\n              id={option.value}\r\n              {...field}\r\n              {...rest}\r\n              value={option.value}\r\n              // checked={field?.value.includes(option.value)}\r\n            />\r\n            <label htmlFor={option.value}>{option.key}</label>\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n      {/* </Field> */}\r\n      <ErrorMessage component={TextError} name={name} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckboxGroup;\r\n{\r\n  /* {(field) => {\r\n          console.log(\"field\", field);\r\n        {/* }} */\r\n}\r\n// console.log(\"name\", name); */}\r\n"]},"metadata":{},"sourceType":"module"}