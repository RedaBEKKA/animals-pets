{"ast":null,"code":"import * as types from \"../../Types\";\nconst initialState = {\n  Cordinates: [],\n  Adresses: \"\",\n  check: false,\n  Valide: false\n};\nexport default function Adresses(state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (action.type) {\n    case types.GET_ADDRESS:\n      return { ...state,\n        Adresses: payload\n      };\n\n    case types.GET_CORDINATES:\n      return { ...state,\n        Cordinates: payload,\n        check: true\n      };\n\n    case types.GET_DEL_ADDRESS_CORDINATES:\n      return { ...state,\n        Cordinates: \"\",\n        Adresses: \"\",\n        check: false\n      };\n\n    default:\n      return state;\n  }\n}\n_c = Adresses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Adresses\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/BigNova-Projects/Project - 12 - BigNova-Pets Animals-web/ClonedFromGitHub/animals-pets/src/Redux/Reducers/Address/index.js"],"names":["types","initialState","Cordinates","Adresses","check","Valide","state","action","type","payload","GET_ADDRESS","GET_CORDINATES","GET_DEL_ADDRESS_CORDINATES"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,aAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,EADO;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,KAAK,EAAE,KAHY;AAInBC,EAAAA,MAAM,EAAC;AAJY,CAArB;AAMA,eAAe,SAASF,QAAT,CAAkBG,KAAK,GAAGL,YAA1B,EAAwCM,MAAxC,EAAgD;AAC7D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,KAAK,CAACU,WAAX;AACE,aAAO,EACL,GAAGJ,KADE;AAELH,QAAAA,QAAQ,EAAEM;AAFL,OAAP;;AAIF,SAAKT,KAAK,CAACW,cAAX;AACE,aAAO,EACL,GAAGL,KADE;AAELJ,QAAAA,UAAU,EAAEO,OAFP;AAGLL,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAKJ,KAAK,CAACY,0BAAX;AACE,aAAO,EACL,GAAGN,KADE;AAELJ,QAAAA,UAAU,EAAE,EAFP;AAGLC,QAAAA,QAAQ,EAAE,EAHL;AAILC,QAAAA,KAAK,EAAE;AAJF,OAAP;;AAOF;AACE,aAAOE,KAAP;AArBJ;AAuBD;KA1BuBH,Q","sourcesContent":["import * as types from \"../../Types\";\r\n\r\nconst initialState = {\r\n  Cordinates: [],\r\n  Adresses: \"\",\r\n  check: false,\r\n  Valide:false\r\n};\r\nexport default function Adresses(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (action.type) {\r\n    case types.GET_ADDRESS:\r\n      return {\r\n        ...state,\r\n        Adresses: payload,\r\n      };\r\n    case types.GET_CORDINATES:\r\n      return {\r\n        ...state,\r\n        Cordinates: payload,\r\n        check: true,\r\n      };\r\n    case types.GET_DEL_ADDRESS_CORDINATES:\r\n      return {\r\n        ...state,\r\n        Cordinates: \"\",\r\n        Adresses: \"\",\r\n        check: false,\r\n\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}